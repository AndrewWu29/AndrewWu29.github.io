[{"content":"手把手教學，教您如何建立Hugo靜態部落格，並部屬到GitHub! 前言 最近一直有想要架設一個部落格的想法，之前也使用過很多部落格的服務，到最後也都不了了之，此次下定決心，要寫些東西，所以在Google後，發現了Hugo這個Framework，可單純使用Markdown，來架設一個靜態網站，反正我也沒有想要搞一個動態網站，來放我的想法跟筆記，所以對我來說這是個不錯的方案，又可以免費使用GitHub的服務當Host，然後可以付點錢，讓私有庫也可以顯示您的網站。\n如果想要架設自己的部落格，又有預算考量，可以考慮使用Hugo來架設，自己的部落格。\n事前準備 因為本人還沒有摳摳買Macbook(還在英國找工作中)，所以本篇教學會全用Windows進行撰寫。\n首先我們需要Git這個來處理我們撰寫好的東西，並部屬到自己Git的公開庫，另外我們也需要一個軟體來輔助我們撰寫Markdown文件(例: Visual Studio Code 外加套件)。\nGit安裝與確認 首先我們先到Git的官網下載 Git 到 Windows. Download for Windows，依照自己版本位元下載，下載後，滑鼠左鍵雙擊，並按下\u0026quot;Next\u0026quot;到\u0026quot;Install\u0026quot;即可無腦安裝完畢。 安裝完畢後，我們使用快捷鍵\u0026quot;Windows + S\u0026quot;，並輸入\u0026quot;CMD\u0026quot;，來開啟命令提示字元。 開啟後輸入以下指令。\n git version 並會得到。\ngit version 2.xx.x.windows.x 當確認可以成功查詢安裝的版本號，即代表已成功安裝Git了。 再來我們需要安裝 Visual Studio Code 這是一個免費的IDE，另外我們需要另外安裝套件來處理Markdown。\nVisual Studio Code \u0026amp; Markdown Plugin安裝 一樣我們到 Visual Studio Code 的官網下載安裝檔，並進行安裝，一樣\u0026quot;Next\u0026quot;到\u0026quot;Install\u0026quot;。 安裝完畢並開啟，應該會看到以下的畫面。 然後我們到\u0026quot;View\u0026quot;下的\u0026quot;Extensions\u0026quot;(也可用Ctrl+Shift+X)去搜尋\u0026quot;Markdown\u0026quot;的 Extensions，找到\u0026quot;markdownlint\u0026quot;並安裝。 到目前為止，我們已經成功安裝了Git \u0026amp; Visual Studio Code w/ markdownlint Extension。\n接下來我們要繼續安裝 Hugo 和建立自己部落格的第一篇文章。\nHugo安裝與建立自己的部落格 在安裝Hugo前需要安裝chocolatey這個工具，這裡是直接使用\u0026quot;Individual\u0026quot;並透過開啟Administrative的PowerShell，並執行以下指令來安裝的。\nSet-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1')) 安裝完chocolatey這工具後，我們可以開始建立我們的部落格了。\n第一步: 安裝Hugo 我們依照官方快速開始進行安裝Hugo。因為我們這次只需要使用一般版本，所以依照手冊使用以下指令安裝。\nchoco install hugo -confirm 安裝完 Hugo 後，我們需要進行確認是否安裝成功，我們可以輸入以下指令。\nhugo version 第二步: 建立新網站 接下來我們要建立我們的新網站，因為我們會使用到 yml 格式需使用到以下指令。\nhugo new site \u0026lt;資料夾名稱\u0026gt; -f yml 出現以下畫面，即代表安裝成功了! 第三步: 添加Hugo主題 完成 Hugo 網站建立後，我們要為 Hugo 添加一些主題，讓您的部落格，不會過於單調，可至 Hugo Themes 挑選您喜歡的主題，我這邊會使用 PaperMod 這個主題作為示範。\n首先我們要先切換到剛剛新增的資料夾目錄底下，我們可以在 CMD 輸入\u0026quot;CD \u0026lt;資料夾名稱\u0026gt;\u0026quot;，由於我們剛剛示範的資料夾名稱為\u0026quot;its_demo_blog\u0026quot;，所以我們要輸入以下指令。\ncd \u0026lt;您的資料夾名稱\u0026gt; 再來我們需要先將這個資料夾，建立一個新的 Git 數據庫，我們要用到以下指令。\ngit init 然後您會看到此結果。 接下來，我們需要將我們剛剛選好的主題，透過 Git 指令加入到我們的資料夾跟目錄底下的\u0026quot;themes/PaperMod\u0026quot;，指令為下。\ngit submodule add https://github.com/adityatelange/hugo-PaperMod.git themes/PaperMod 執行完應該會顯示如下。 之後我們依照 PaperMod 的官方文件，進行修改我們的config.yml。\nbaseURL: \u0026quot;\u0026lt;username.github.io\u0026gt;\u0026quot; #等等GitHub庫的網址 title: its demo blog #網站標題 paginate: 5 # 預設語系配置 defaultContentLanguage: zh-tw # 主題配置 theme: PaperMod #這次使用到的主題 PaperMod enableRobotsTXT: true buildDrafts: false buildFuture: false buildExpired: false # GooleAnalytics服務，這個之後會再寫到如何設定 googleAnalytics: UA-123-45 # 連結配置 permalinks: posts: /:year/:month/:title/ minify: disableXML: true minifyOutput: true params: env: production # to enable google analytics, opengraph, twitter-cards and schema. title: its demo blog description: \u0026quot;its demo blog description\u0026quot; keywords: [Blog, Portfolio, PaperMod] author: Me # author: [\u0026quot;Me\u0026quot;, \u0026quot;You\u0026quot;] # multiple authors images: [\u0026quot;\u0026lt;link or path of image for opengraph, twitter-cards\u0026gt;\u0026quot;] DateFormat: \u0026quot;January 2, 2006\u0026quot; defaultTheme: auto # dark, light disableThemeToggle: false ShowReadingTime: true ShowShareButtons: true ShowPostNavLinks: true ShowBreadCrumbs: true ShowCodeCopyButtons: false disableSpecial1stPost: false disableScrollToTop: false comments: false hidemeta: false hideSummary: false showtoc: false tocopen: false assets: # disableHLJS: true # to disable highlight.js # disableFingerprinting: true favicon: \u0026quot;\u0026lt;link / abs url\u0026gt;\u0026quot; favicon16x16: \u0026quot;\u0026lt;link / abs url\u0026gt;\u0026quot; favicon32x32: \u0026quot;\u0026lt;link / abs url\u0026gt;\u0026quot; apple_touch_icon: \u0026quot;\u0026lt;link / abs url\u0026gt;\u0026quot; safari_pinned_tab: \u0026quot;\u0026lt;link / abs url\u0026gt;\u0026quot; label: text: \u0026quot;its demo blog\u0026quot; #icon: /apple-touch-icon.png iconHeight: 35 # profile-mode profileMode: enabled: false # needs to be explicitly set title: ExampleSite subtitle: \u0026quot;This is subtitle\u0026quot; imageUrl: \u0026quot;\u0026lt;img location\u0026gt;\u0026quot; imageWidth: 120 imageHeight: 120 imageTitle: my image buttons: - name: Posts url: posts - name: Tags url: tags # home-info mode 這是教學使用 Home-info 模式，預設也為這個 homeInfoParams: Title: \u0026quot;嗨 大家 \\U0001F44B\u0026quot; Content: 歡迎來到我的部落格。 # 可以放自己社交平台的連結 socialIcons: - name: twitter url: \u0026quot;https://twitter.com/\u0026quot; - name: stackoverflow url: \u0026quot;https://stackoverflow.com\u0026quot; - name: github url: \u0026quot;https://github.com/\u0026quot; analytics: google: SiteVerificationTag: \u0026quot;XYZabc\u0026quot; bing: SiteVerificationTag: \u0026quot;XYZabc\u0026quot; yandex: SiteVerificationTag: \u0026quot;XYZabc\u0026quot; cover: hidden: true # hide everywhere but not in structured data hiddenInList: true # hide on list pages and home hiddenInSingle: true # hide on single page # 別人可以建議您修改，但我會將這個功能關閉 #editPost: #URL: \u0026quot;https://github.com/\u0026lt;path_to_repo\u0026gt;/content\u0026quot; #Text: \u0026quot;Suggest Changes\u0026quot; # edit text #appendFilePath: true # to append file path to Edit link # for search # https://fusejs.io/api/options.html fuseOpts: isCaseSensitive: false shouldSort: true location: 0 distance: 1000 threshold: 0.4 minMatchCharLength: 0 keys: [\u0026quot;title\u0026quot;, \u0026quot;permalink\u0026quot;, \u0026quot;summary\u0026quot;, \u0026quot;content\u0026quot;] menu: main: - identifier: posts name: 文章 url: /posts/ weight: 1 - identifier: categories name: 分類 url: /categories/ weight: 2 - identifier: tags name: 標籤 url: /tags/ weight: 3 #- identifier: search # name: 搜尋 # url: search # weight: 4 #- identifier: about # name: 關於我 # url: about # weight: 5 # Read: https://github.com/adityatelange/hugo-PaperMod/wiki/FAQs#using-hugos-syntax-highlighter-chroma # pygmentsUseClasses: true # markup: # highlight: # # anchorLineNos: true # codeFences: true # guessSyntax: true # lineNos: true # style: monokai 修改好後，我們在根目錄底下打開 CMD 並輸入hugo server -D，並打開瀏覽器應該會看到下圖畫面。 第四步: 建立第一篇文章 再來我們要新建第一篇文章，我們需要用到以下指令，來建立第一篇文章，不免俗的當然要來一下 Hello World 啦!(老闆我會所有程式的Hello World? 這樣應徵比較有優勢嗎?)\nhugo new posts/hello_world.md 然後我們打開之前下載的Visual Studio Code，來編寫我們的第一篇文章吧!但開始進入到\u0026quot;content/posts/hello_world.md\u0026quot;應該會看到這個畫面。 我們修改為下。\n--- title: \u0026quot;Hello_World!\u0026quot; date: 2022-01-06T14:00:09Z draft: false # weight: 1 # aliases: [\u0026quot;/AirTag\u0026quot;] tags: [\u0026quot;第一篇文章\u0026quot;, \u0026quot;Hello World\u0026quot;] author: \u0026quot;Me\u0026quot; # author: [\u0026quot;Me\u0026quot;, \u0026quot;You\u0026quot;] # multiple authors showToc: false TocOpen: false hidemeta: false comments: true #description: \u0026quot;Hello World\u0026quot; #canonicalURL: \u0026quot;https://canonical.url/to/page\u0026quot; disableHLJS: true # to disable highlightjs disableShare: true disableHLJS: false hideSummary: false searchHidden: false ShowReadingTime: true ShowBreadCrumbs: true ShowPostNavLinks: true #cover: # image: \u0026quot;\u0026lt;image path/url\u0026gt;\u0026quot; # image path/url # alt: \u0026quot;\u0026lt;alt text\u0026gt;\u0026quot; # alt text # caption: \u0026quot;\u0026lt;text\u0026gt;\u0026quot; # display caption under cover # relative: true # when using page bundles set this to true # hidden: true # only hide on current single page #editPost: # URL: \u0026quot;https://github.com/\u0026lt;path_to_repo\u0026gt;/content\u0026quot; # Text: \u0026quot;Suggest Changes\u0026quot; # edit text # appendFilePath: false # to append file path to Edit link --- # Hello World!!! 這是我的第一篇文章啦! 第五步: 開啟Hugo伺服器 Hugo本地預覽網站功能，只需要在 Windows PowerShell 或 CMD 的部落格跟目錄底下打hugo server -D，即可在本地端預覽網站，初始網址:http://localhost:1313/。\n目前的網頁應該會呈現如下。 到目前步驟我們已經成功，建立出 Demo Blog 並發了第一篇文章，再來就是部屬到GitHub Pages了。\n第六步: 將Hugo部落格部屬到GitHub上 首先您需要有GitHub的帳號，沒有請左轉Google後申請。我們需要在GitHub建立一個存放網站用的庫，並命名為\u0026lt;username\u0026gt;.github.io username為您在GitHub上的使用者名稱。\n註: 因為這個是demo site所以名稱沒有按照上面規則走! 接下來我們需要在此庫底下建立另條分支gh-pages，這個分支是用來展示我們的部落格的，我們等下會使用到 GitHub Action的功能來進行內容自動化部屬，自動產生文件到gh-pages上。\n# 加入所有檔案 git add . # 新增commit內容 git commit -m \u0026quot;init its demo blog\u0026quot; # 新增main分支 git branch -M main # 新增遠端版本庫 git remote add origin https://github.com/\u0026lt;使用者名稱\u0026gt;/\u0026lt;使用者名稱\u0026gt;.github.io.git # 將部落格內容上傳到remote git push -u origin main # 新增gh-pages孤兒分支 git checkout --orphan gh-pages # 新增一個README.md檔 echo \u0026quot;gh-pages\u0026quot; \u0026gt; \u0026quot;README.md\u0026quot; # 加入所有檔案 git add . # 新增commit內容 git commit -m \u0026quot;init gh-pages branch\u0026quot; # 將分支內容上傳到remote git push -u origin gh-pages # 切換到main分支 git checkout main 跑完以上指令後，您的庫應該會有兩個分支 main \u0026amp; gh-pages。\n第七步: 設定GitHub Action來執行自動化部屬 我們需要在 main 分支上有做變更時，自動化部屬到 gh-pages。\n事前準備 我們要先到此頁，取得我們的Token，為了接下來的步驟。勾選的選項如下圖。 然後到頁面最下方，點選\u0026quot;Generate Token\u0026quot;，並將 Token 複製下來。 接下來，我們需要存放您 Hugo 部落格的 Token，路徑為: Repository \u0026gt; Settings \u0026gt; Secret \u0026gt; New repository secret，如下圖，Name 可以取您喜歡的，Value 需要設定為我們剛取得的 Token，然後按下\u0026quot;Add Secret\u0026quot;。 到這裡，目前的事前準備已告一段落，我們接下來要設定workflow。\nworkflow設定 我們會參考此文的workflow，來設定 GitHub Action。\n我們先來到 GitHub Action 頁面，並點選\u0026quot;set up a workflow yourself -\u0026gt;\u0026quot; 並將下方文件複製貼上，並做些修改。\nname: Build GH-Pages #這個可以改為您想要的名稱 on: push: paths-ignore: - 'images/**' - 'LICENSE' - 'README.md' branches: - main workflow_dispatch: # manual run jobs: deploy: runs-on: ubuntu-latest steps: - name: Git checkout uses: actions/checkout@v2 with: ref: main - name: Get Theme run: git submodule update --init --recursive - name: Update theme to Latest commit run: git submodule update --remote --merge - name: Setup hugo uses: peaceiris/actions-hugo@v2 with: hugo-version: 'latest' - name: Build run: hugo --buildDrafts --gc --verbose --minify - name: Deploy uses: peaceiris/actions-gh-pages@v3 with: github_token: ${{ secrets.HUGO_DEPLOY_TOKEN }} publish_dir: ./public commit_message: ${{ github.event.head_commit.message }} 修改好後，點選右上角的\u0026quot;Star commit\u0026quot;儲存完 workflow的設定文件，就可以在庫底下的\u0026quot;Action\u0026quot;頁面看到執行的狀態了，若執行狀態前面顯示綠色打勾即代表部屬成功! 第八步: 發佈部落格新文章 當您完成前面的步驟後，您需要到 Repository \u0026gt; Settings 底下的 Pages 將 Source 的分支改為 gh-pages 就完成了所有步驟了。\n以後要發表新文章只需要做:\n 使用Visual Studio Code打開部落格對應的資料夾。 在\u0026quot;content/posts\u0026quot;底下建立一個新 markdown 檔案，並撰寫您的內容。 再將整個專案檔案使用 git 上傳到您對應的庫。  結語 這算我的第一篇公開的筆記吧!也參考了網路上很多大大的文章，才有這個結果，希望可以清楚地幫助到想要自己建立部落格的人。\n參考資源 此文Demo Site\n此文Git庫\n如何將Hugo部落格部署到Github上?\n代码笔记\nVisual Studio Code\nGit\nChocolatey\nPaperMod Demo Site\nhugo-PaperMod\nHugo 貼身打造個人部落格\nGolden Hat\n","permalink":"https://AndrewWu29.github.io/zh-tw/2022/01/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8hugo%E5%BB%BA%E7%AB%8B%E8%87%AA%E5%B7%B1%E7%9A%84%E9%83%A8%E8%90%BD%E6%A0%BC/","summary":"手把手教學，教您如何建立Hugo靜態部落格，並部屬到GitHub! 前言 最近一直有想要架設一個部落格的想法，之前也使用過很多部落格的服務，到最後也都不了了之，此次下定決心，要寫些東西，所以在Google後，發現了Hugo這個Framework，可單純使用Markdown，來架設一個靜態網站，反正我也沒有想要搞一個動態網站，來放我的想法跟筆記，所以對我來說這是個不錯的方案，又可以免費使用GitHub的服務當Host，然後可以付點錢，讓私有庫也可以顯示您的網站。\n如果想要架設自己的部落格，又有預算考量，可以考慮使用Hugo來架設，自己的部落格。\n事前準備 因為本人還沒有摳摳買Macbook(還在英國找工作中)，所以本篇教學會全用Windows進行撰寫。\n首先我們需要Git這個來處理我們撰寫好的東西，並部屬到自己Git的公開庫，另外我們也需要一個軟體來輔助我們撰寫Markdown文件(例: Visual Studio Code 外加套件)。\nGit安裝與確認 首先我們先到Git的官網下載 Git 到 Windows. Download for Windows，依照自己版本位元下載，下載後，滑鼠左鍵雙擊，並按下\u0026quot;Next\u0026quot;到\u0026quot;Install\u0026quot;即可無腦安裝完畢。 安裝完畢後，我們使用快捷鍵\u0026quot;Windows + S\u0026quot;，並輸入\u0026quot;CMD\u0026quot;，來開啟命令提示字元。 開啟後輸入以下指令。\n git version 並會得到。\ngit version 2.xx.x.windows.x 當確認可以成功查詢安裝的版本號，即代表已成功安裝Git了。 再來我們需要安裝 Visual Studio Code 這是一個免費的IDE，另外我們需要另外安裝套件來處理Markdown。\nVisual Studio Code \u0026amp; Markdown Plugin安裝 一樣我們到 Visual Studio Code 的官網下載安裝檔，並進行安裝，一樣\u0026quot;Next\u0026quot;到\u0026quot;Install\u0026quot;。 安裝完畢並開啟，應該會看到以下的畫面。 然後我們到\u0026quot;View\u0026quot;下的\u0026quot;Extensions\u0026quot;(也可用Ctrl+Shift+X)去搜尋\u0026quot;Markdown\u0026quot;的 Extensions，找到\u0026quot;markdownlint\u0026quot;並安裝。 到目前為止，我們已經成功安裝了Git \u0026amp; Visual Studio Code w/ markdownlint Extension。\n接下來我們要繼續安裝 Hugo 和建立自己部落格的第一篇文章。\nHugo安裝與建立自己的部落格 在安裝Hugo前需要安裝chocolatey這個工具，這裡是直接使用\u0026quot;Individual\u0026quot;並透過開啟Administrative的PowerShell，並執行以下指令來安裝的。\nSet-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.","title":"如何使用Hugo建立自己的部落格?"},{"content":"前言 因緣際會下，我使用交友軟體，認識了我英國男友，也開啟了將近兩年多的遠距離戀愛。我們是在2019年的下半年開始在交友軟體上聊天的，後來我們彼此交換\u0026quot;Whatsapp\u0026quot;並轉到\u0026quot;Whatsapp\u0026quot;繼續聊了三個多月後，我在一個是當時機下，詢問了我們彼此的關係為何，他回我男朋友，所以可能算是我先問他可不可以當我男朋友吧!\n之後他就決定要在2020年的台灣中秋節連假來台灣找我，並嘗試一起生活看看，但沒想到在2020年初，卻爆出了新冠肺炎，這個世界也因新冠肺炎，改變了許多，也影響了很多人可以回鄉看看自己的家人朋友，也讓遠距離戀愛的情侶，無法透過一般旅遊簽證，去彼此的國家城市相遇。\n起初我們想說這波疫情，可能會在年中或年底，就會慢慢恢復正常，可能只需要時間往後延，這樣子，但後來沒想到2020年三月起，開始陸陸續續傳出歐洲美洲地區開始傳播的消息，而英國地區也有相對應的措施，加上台灣這邊的邊境管制，導致不得不將航班先行取消。\n雖然不能如期在台灣相遇，我們還是抱持的希望，這一切都會慢慢變好的。我們依舊每天透過通訊軟體聊天，因台灣相對安全，還可以正常外出吃飯工作，但相對歐洲地區陸陸續續開始有封城的措施，我也時常傳傳，台灣這邊戶外的照片，替他打打氣，並祈求疫情早日退散。\n後來就在某日，男友聊到了，打工度假的選項，加上那時我在工作上，也遇到了一些瓶頸，加上我也28歲了，網路上查了許多英國打工度假抽籤的訊息，也發現不太好抽，還有一待就是兩年，跟許多國家不同，想說要不就抽抽看，如果抽中了就可以透過這個簽證，正常在英國居住跟工作。\n一開始，有點擔心，如果當日發信申請抽籤時，可能會猶豫導致錯過時機，所以想說要不就設定Gmail的自動寄信功能，這樣我也不會因為忘記或猶豫而錯過時機，就在申請抽籤日的數日後，我收到了中簽的信件，我也將這訊息，即時告訴我男友，他也很興奮，我成功抽到簽。\n因為我在台灣還有工作，想說再多工作一會，存些錢，免得到英國後，一下就花光積蓄，所以就先將日期，設定在2021年的下半年。\n心態調整 對我來說台灣是我的舒適圈，或需這工作讓我壓力很大，有時也不知道要如何處理跟面對，但在主管同事還有朋友的幫助下，讓我後期心理狀態慢慢回復到正常。\n一開始也有顧慮到這份工作的薪水，在台灣來說，已經可以算中位數了，但工作上的瑣事，也有點讓我力不從心，可能是交友圈比較狹隘，或是不太擅長將內心的事跟他人分享或討論。\n到後期總算開口跟主管提出離職，並告知要去英國打工度假，主管也大力支持，也說道如果要幫忙的話，可以跟他說，讓我非常感激這段主僱之情!畢竟也跟了這主管五年了，如果當初面試沒上，可能還會繼續待在好市多了。 所以離職對我來說沒有太大的阻礙，一切都挺順利的。\n接下來是朋友，朋友一開始，還滿擔心我一個要飛去英國，見我還沒見過的男友，一來是疫情下，發生什麼事，他們也無法第一時間通電話或幫忙，二來是怕我被騙，不過他們還是挺希望，我幸福的，所以一直來，都當我的聆聽者，並給我適當的建議等···也挺感謝他們的，不費我大學時，有幫他們做作業(好像離題了~)。\n至於家人或親戚，起初有些堂哥堂姊，覺得疫情當下，還是不要出國打工度假，但我這個人，有時做起決定後，任何人也無法改變。家人到是沒有說什麼，我只有跟我姊講我要去見我還沒見過的男友，我姊當下只有驚訝，原本以為我們已經在台灣見過面了，還說為啥不是選日本，而是英國(我心想可能是你想要我買日本東西寄回來吧!)，另外我媽到很冷靜地說，你要去英國喔!要去多久，我回兩年，然後得到，這麼久喔!(但內心感受得到，多少有點不捨，孰不知兒子是要去找男友Happy?)。\n因為離職是在九月初，但實際到達英國是在十月初，這段空檔，除了跟朋友敘敘舊、吃吃飯、聊聊天，準備出國要用到的東西文件，心情也著實輕鬆了不少，可能之前給自己太多，不必要的壓力了，甚至一度還懼怕跟人說話，不過好家在Telegram朋友，約騎車吃飯，也對我心理狀態幫助了不少。\n未來規劃 可以在英國順利找到老本行(軟體測試工程師)的工作，並在工作之餘加強英文，跟認識新的當地朋友。之後找到一份工作願意提供簽證，讓我可以用工作簽繼續留在這裡。或是換成伴侶簽?\n目前狀況 目前找了將近三個月，還沒有得到任何一個工作的Offer，僅希望在三十歲生日前，可以得到一份工作的Offer，不然我可能要思考一下，是不是做些服務業相關的工作了。\n","permalink":"https://AndrewWu29.github.io/zh-tw/2022/01/%E7%82%BA%E4%BD%95%E6%88%91%E8%A6%81%E4%BE%86%E8%8B%B1%E5%9C%8B/","summary":"前言 因緣際會下，我使用交友軟體，認識了我英國男友，也開啟了將近兩年多的遠距離戀愛。我們是在2019年的下半年開始在交友軟體上聊天的，後來我們彼此交換\u0026quot;Whatsapp\u0026quot;並轉到\u0026quot;Whatsapp\u0026quot;繼續聊了三個多月後，我在一個是當時機下，詢問了我們彼此的關係為何，他回我男朋友，所以可能算是我先問他可不可以當我男朋友吧!\n之後他就決定要在2020年的台灣中秋節連假來台灣找我，並嘗試一起生活看看，但沒想到在2020年初，卻爆出了新冠肺炎，這個世界也因新冠肺炎，改變了許多，也影響了很多人可以回鄉看看自己的家人朋友，也讓遠距離戀愛的情侶，無法透過一般旅遊簽證，去彼此的國家城市相遇。\n起初我們想說這波疫情，可能會在年中或年底，就會慢慢恢復正常，可能只需要時間往後延，這樣子，但後來沒想到2020年三月起，開始陸陸續續傳出歐洲美洲地區開始傳播的消息，而英國地區也有相對應的措施，加上台灣這邊的邊境管制，導致不得不將航班先行取消。\n雖然不能如期在台灣相遇，我們還是抱持的希望，這一切都會慢慢變好的。我們依舊每天透過通訊軟體聊天，因台灣相對安全，還可以正常外出吃飯工作，但相對歐洲地區陸陸續續開始有封城的措施，我也時常傳傳，台灣這邊戶外的照片，替他打打氣，並祈求疫情早日退散。\n後來就在某日，男友聊到了，打工度假的選項，加上那時我在工作上，也遇到了一些瓶頸，加上我也28歲了，網路上查了許多英國打工度假抽籤的訊息，也發現不太好抽，還有一待就是兩年，跟許多國家不同，想說要不就抽抽看，如果抽中了就可以透過這個簽證，正常在英國居住跟工作。\n一開始，有點擔心，如果當日發信申請抽籤時，可能會猶豫導致錯過時機，所以想說要不就設定Gmail的自動寄信功能，這樣我也不會因為忘記或猶豫而錯過時機，就在申請抽籤日的數日後，我收到了中簽的信件，我也將這訊息，即時告訴我男友，他也很興奮，我成功抽到簽。\n因為我在台灣還有工作，想說再多工作一會，存些錢，免得到英國後，一下就花光積蓄，所以就先將日期，設定在2021年的下半年。\n心態調整 對我來說台灣是我的舒適圈，或需這工作讓我壓力很大，有時也不知道要如何處理跟面對，但在主管同事還有朋友的幫助下，讓我後期心理狀態慢慢回復到正常。\n一開始也有顧慮到這份工作的薪水，在台灣來說，已經可以算中位數了，但工作上的瑣事，也有點讓我力不從心，可能是交友圈比較狹隘，或是不太擅長將內心的事跟他人分享或討論。\n到後期總算開口跟主管提出離職，並告知要去英國打工度假，主管也大力支持，也說道如果要幫忙的話，可以跟他說，讓我非常感激這段主僱之情!畢竟也跟了這主管五年了，如果當初面試沒上，可能還會繼續待在好市多了。 所以離職對我來說沒有太大的阻礙，一切都挺順利的。\n接下來是朋友，朋友一開始，還滿擔心我一個要飛去英國，見我還沒見過的男友，一來是疫情下，發生什麼事，他們也無法第一時間通電話或幫忙，二來是怕我被騙，不過他們還是挺希望，我幸福的，所以一直來，都當我的聆聽者，並給我適當的建議等···也挺感謝他們的，不費我大學時，有幫他們做作業(好像離題了~)。\n至於家人或親戚，起初有些堂哥堂姊，覺得疫情當下，還是不要出國打工度假，但我這個人，有時做起決定後，任何人也無法改變。家人到是沒有說什麼，我只有跟我姊講我要去見我還沒見過的男友，我姊當下只有驚訝，原本以為我們已經在台灣見過面了，還說為啥不是選日本，而是英國(我心想可能是你想要我買日本東西寄回來吧!)，另外我媽到很冷靜地說，你要去英國喔!要去多久，我回兩年，然後得到，這麼久喔!(但內心感受得到，多少有點不捨，孰不知兒子是要去找男友Happy?)。\n因為離職是在九月初，但實際到達英國是在十月初，這段空檔，除了跟朋友敘敘舊、吃吃飯、聊聊天，準備出國要用到的東西文件，心情也著實輕鬆了不少，可能之前給自己太多，不必要的壓力了，甚至一度還懼怕跟人說話，不過好家在Telegram朋友，約騎車吃飯，也對我心理狀態幫助了不少。\n未來規劃 可以在英國順利找到老本行(軟體測試工程師)的工作，並在工作之餘加強英文，跟認識新的當地朋友。之後找到一份工作願意提供簽證，讓我可以用工作簽繼續留在這裡。或是換成伴侶簽?\n目前狀況 目前找了將近三個月，還沒有得到任何一個工作的Offer，僅希望在三十歲生日前，可以得到一份工作的Offer，不然我可能要思考一下，是不是做些服務業相關的工作了。","title":"為何我要來英國!"},{"content":"前言 自從這個產品發表後，看完官方的Youtube影片，和其他科技Youtuber的開箱解說後，加上本人還沒有真無線抗噪耳機，就一直想要購買這個產品，所以最後就在待機飛往英國找我男友時，在松山機場的免稅店購買了。\n在這篇文章簡單分享我的使用心得。\n外觀包裝 原本是想要購買銀色的款式，由於免稅店沒有銀色，加上之前已有黑色WH-1000XM3，考慮了一下，想說黑色就比較耐髒，最後就選擇黑色了。\n產品外觀 這次選擇的黑色款式，在麥克風的地方，使用了銅金配色，讓整體感覺有蒸氣龐克風，彷彿會從此處冒出蒸氣來。\n這次WF-1000XM4重新設計耳機內部配置和充電盒，耳機單體的重量也來到了7.3g，耳機整體較前代小於10%，後者充電盒也縮小了40%，但依舊可提供額外16小時的行動充電。 另外搭配新開發的噪音隔離耳塞，採用聚氨酯泡棉材質與矽膠搭配，以增加耳式耳機的耳塞與耳道之間的接觸面積，並減少隔音的間隙，已達到降低噪音，跟提供更穩固的貼合體驗。\n產品包裝 此次的產品包裝，可以說Sony也在這部份，下了不少功夫，不只首次沒有使用塑膠包裝，整體包裝，秉持「回收重製」理念。\n除了標籤外，99%的紙材包裝均採用Sony開發的Original Blended Material，並落實永續設計，以對這個環境付出一些心力。\n雖然單純從包裝上，看不出這產品的奢華昂貴感，可能會降低買家購買的慾望，可說Sony這次在包材做出一個重大決定。\n產品規格  防水規格 (IPX4) 耳機類型 (真無線) 藍牙版本 (BT 5.2) 續航時間 音樂連續播放(ANC 8/hr, w/o ANC 12/hr);連續通話(ANC 5.5/hr, w/o ANC 6/hr) 充電時間 (約1.5/hr) 產品重量 (約41克) 降噪功能 (環境聲模式/快速注意模式) 顏色選擇 (黑色/銀色)  產品售價 台灣零售價為$7,990元。\n 台灣索尼。  使用情境 個人使用的情境，單純為通勤／抗噪／運動／短暫交談。\n因為之前就有使用過WH-1000XM3，所以對於Sony處理抗噪能力，非常有信心，這次也不失所望，在通勤時，使用Sony自家的Headphones APP，可以做到依照GPS位址，判斷用戶所在的環境去自動切換設定，以免完全抗除人聲，讓通勤時也不會因錯過到站提示音，而錯過下車的時機。\n這次耳機防水能力來到了(IPX4)，這點可讓用戶配戴運動時，不用怕汗水，浸濕您的耳機，就算運動後，稍微在水龍頭底下輕微沖洗，也不用擔心。 當使用在吵雜的環境，想要隔絕外界環境音時，此時可將抗噪開到最強，幫助隔絕外界噪音，以增加自己的工作效率。\n另外如果在配戴耳機時，需要與人短暫交談時，可以透過APP開啟Speak-to-Chat功能，當辨識您在跟人說話時，耳機會自動暫停播放，並關閉降噪，開啟麥克風，方便您不用脫下耳機，就可以跟人交談，有時我在閱讀時，男友在詢問我是否要喝杯茶，這時這個功能就超好用的啦! a black tea please hah.\n總結 這次WF-1000XM4，對我來說對得起這個價格，雖然還是貴貴的。\n整體使用上音質/舒適性/方便性，依舊符合Sony家的特性，加上我又只聽流行樂跟幫助專注的音樂，已經很夠用了，雖然在蘋果生態系下，無法像Airpods Pro一樣近乎無感切換設備，但也只是多一道步驟去藍牙設定頁面，點選連接而以，對我來說不是太大的痛處。\n不過在Android生態圈，就不一樣了，不只可以用更好的傳輸品質，更方便的切換Android的設備。\n對我來說唯一的小缺點，可能就是當你手油油的話，摸充電盒或耳機會留下挺明顯的痕跡，其他就還好。\n","permalink":"https://AndrewWu29.github.io/zh-tw/2022/01/sony-wf-1000xm4-%E7%B0%A1%E6%98%93%E9%96%8B%E7%AE%B1/","summary":"前言 自從這個產品發表後，看完官方的Youtube影片，和其他科技Youtuber的開箱解說後，加上本人還沒有真無線抗噪耳機，就一直想要購買這個產品，所以最後就在待機飛往英國找我男友時，在松山機場的免稅店購買了。\n在這篇文章簡單分享我的使用心得。\n外觀包裝 原本是想要購買銀色的款式，由於免稅店沒有銀色，加上之前已有黑色WH-1000XM3，考慮了一下，想說黑色就比較耐髒，最後就選擇黑色了。\n產品外觀 這次選擇的黑色款式，在麥克風的地方，使用了銅金配色，讓整體感覺有蒸氣龐克風，彷彿會從此處冒出蒸氣來。\n這次WF-1000XM4重新設計耳機內部配置和充電盒，耳機單體的重量也來到了7.3g，耳機整體較前代小於10%，後者充電盒也縮小了40%，但依舊可提供額外16小時的行動充電。 另外搭配新開發的噪音隔離耳塞，採用聚氨酯泡棉材質與矽膠搭配，以增加耳式耳機的耳塞與耳道之間的接觸面積，並減少隔音的間隙，已達到降低噪音，跟提供更穩固的貼合體驗。\n產品包裝 此次的產品包裝，可以說Sony也在這部份，下了不少功夫，不只首次沒有使用塑膠包裝，整體包裝，秉持「回收重製」理念。\n除了標籤外，99%的紙材包裝均採用Sony開發的Original Blended Material，並落實永續設計，以對這個環境付出一些心力。\n雖然單純從包裝上，看不出這產品的奢華昂貴感，可能會降低買家購買的慾望，可說Sony這次在包材做出一個重大決定。\n產品規格  防水規格 (IPX4) 耳機類型 (真無線) 藍牙版本 (BT 5.2) 續航時間 音樂連續播放(ANC 8/hr, w/o ANC 12/hr);連續通話(ANC 5.5/hr, w/o ANC 6/hr) 充電時間 (約1.5/hr) 產品重量 (約41克) 降噪功能 (環境聲模式/快速注意模式) 顏色選擇 (黑色/銀色)  產品售價 台灣零售價為$7,990元。\n 台灣索尼。  使用情境 個人使用的情境，單純為通勤／抗噪／運動／短暫交談。\n因為之前就有使用過WH-1000XM3，所以對於Sony處理抗噪能力，非常有信心，這次也不失所望，在通勤時，使用Sony自家的Headphones APP，可以做到依照GPS位址，判斷用戶所在的環境去自動切換設定，以免完全抗除人聲，讓通勤時也不會因錯過到站提示音，而錯過下車的時機。\n這次耳機防水能力來到了(IPX4)，這點可讓用戶配戴運動時，不用怕汗水，浸濕您的耳機，就算運動後，稍微在水龍頭底下輕微沖洗，也不用擔心。 當使用在吵雜的環境，想要隔絕外界環境音時，此時可將抗噪開到最強，幫助隔絕外界噪音，以增加自己的工作效率。\n另外如果在配戴耳機時，需要與人短暫交談時，可以透過APP開啟Speak-to-Chat功能，當辨識您在跟人說話時，耳機會自動暫停播放，並關閉降噪，開啟麥克風，方便您不用脫下耳機，就可以跟人交談，有時我在閱讀時，男友在詢問我是否要喝杯茶，這時這個功能就超好用的啦! a black tea please hah.\n總結 這次WF-1000XM4，對我來說對得起這個價格，雖然還是貴貴的。\n整體使用上音質/舒適性/方便性，依舊符合Sony家的特性，加上我又只聽流行樂跟幫助專注的音樂，已經很夠用了，雖然在蘋果生態系下，無法像Airpods Pro一樣近乎無感切換設備，但也只是多一道步驟去藍牙設定頁面，點選連接而以，對我來說不是太大的痛處。\n不過在Android生態圈，就不一樣了，不只可以用更好的傳輸品質，更方便的切換Android的設備。\n對我來說唯一的小缺點，可能就是當你手油油的話，摸充電盒或耳機會留下挺明顯的痕跡，其他就還好。","title":"SONY WF-1000XM4 簡易開箱"},{"content":"哈囉 2022: 今天是2022年的第一天，哈彭登 英國 天氣晴多雲。\n自從新冠肺炎擴散到全球，近兩年來，這個世界發生了很大的變化，很多事情都跟疫情擴散前不一樣了，但昨天看到許多國家和城市依舊舉辦，跨年活動跟施放煙火，讓我覺得這個世界又慢慢恢復生氣了。\n我希望這是新冠肺炎的最後階段了，讓這個世界可以慢慢地恢復正常，人們不必再擔心這病毒，可以與家人或朋友見面，也可以正常地去看看這個世界，並對自己的未來有夢想。\n今年希望我可以在英國，順利的找到軟體測試工程師的工作，有時間跟男朋友，出去旅行、出去吃飯、精進英文。\n最後祝福自己和家人朋友身體健康、平安順遂，早日時間自我的目標。\n新年快樂 兩千零二十二年!!! ","permalink":"https://AndrewWu29.github.io/zh-tw/2022/01/%E5%93%88%E5%9B%89-2022/","summary":"哈囉 2022: 今天是2022年的第一天，哈彭登 英國 天氣晴多雲。\n自從新冠肺炎擴散到全球，近兩年來，這個世界發生了很大的變化，很多事情都跟疫情擴散前不一樣了，但昨天看到許多國家和城市依舊舉辦，跨年活動跟施放煙火，讓我覺得這個世界又慢慢恢復生氣了。\n我希望這是新冠肺炎的最後階段了，讓這個世界可以慢慢地恢復正常，人們不必再擔心這病毒，可以與家人或朋友見面，也可以正常地去看看這個世界，並對自己的未來有夢想。\n今年希望我可以在英國，順利的找到軟體測試工程師的工作，有時間跟男朋友，出去旅行、出去吃飯、精進英文。\n最後祝福自己和家人朋友身體健康、平安順遂，早日時間自我的目標。\n新年快樂 兩千零二十二年!!! ","title":"哈囉 2022!"},{"content":"嗨 大家! 歡迎來到我的部落格，我是Andrew Wu。\n我會在這分享，我的想法、科技、日記、開箱、旅行、美食，及任何我想要分享的內容，呵呵。\n關於我 台灣人，來自台北台灣，現居英國哈彭登。\n如果想聯繫我。\n中英文支持 為了精進我的英文，這個部落格將會支持中英文顯示。\n點選，頁面上方，部落格名稱右邊的\u0026quot;En\u0026quot;或\u0026quot;Zh-Tw\u0026quot;來切換語系設定。\n這個部落格會盡量以英文為主，中文為輔。\n敬請關注。\n感謝您的閱讀。 ","permalink":"https://AndrewWu29.github.io/zh-tw/about/","summary":"嗨 大家! 歡迎來到我的部落格，我是Andrew Wu。\n我會在這分享，我的想法、科技、日記、開箱、旅行、美食，及任何我想要分享的內容，呵呵。\n關於我 台灣人，來自台北台灣，現居英國哈彭登。\n如果想聯繫我。\n中英文支持 為了精進我的英文，這個部落格將會支持中英文顯示。\n點選，頁面上方，部落格名稱右邊的\u0026quot;En\u0026quot;或\u0026quot;Zh-Tw\u0026quot;來切換語系設定。\n這個部落格會盡量以英文為主，中文為輔。\n敬請關注。\n感謝您的閱讀。 ","title":"關於我"},{"content":"前言 因為前幾年，去日本旅遊時遺失背包，每次想起來都讓我好心痛喔！打死我以後都不放在電車架子上，已讓我開始搜尋這類型的產品。 其實早在Airtag誕世前，市面上已經有這類型的產品，只是基於產品用戶數量，且需要額外安裝應用程式，透過同樣使用該產品的用戶，且已有安裝應用程式並開啟藍牙及權限，才可當行動裝置，經過遺失者的物品時，才能更新遺失物的所在地，並通知遺失物的所有人。\n但這樣的產品通常會基於以下幾點，導致先天上的劣勢：\n 取決於使用該產品公司的社群大小，且不同家產品公司的裝置，不互相溝通。 需要額外安裝第三方的應用程式。 使用環境被侷限，因不同地方，可能使用這類型產品的用戶數不同，導致侷限使用環境（變成通常只在居家內使用，戶外遺失後，可能會沒有同樣使用同產品的用戶經過，導致當物品從最後遺失地被移動過，可能就找不到了）。  而蘋果Airtag基於以下幾個條件，直接將相關競品廠商壓在地上摩擦：\n 基於Apple產品的用戶數量（Mac, iPhone, iPad, Apple Watch）。 透過Find My網絡尋找。 不需額外安裝應用程式。 U1晶片的加持（使用Ultra-Wideband技術）。 非蘋果產品，可透過NFC感應Airtag，即可取得遺失者的聯絡資訊。  也因蘋果基於龐大的裝置用戶數，無須安裝額外的應用程式，每個裝置只需開啟Find My和藍牙及權限，即可當有經過遺失的Airtag時，透過藍牙溝通，並通知遺失者最新的所在地，或透過感應來得知遺失者的聯絡資訊，方可聯絡遺失者，並歸還遺失物。\n基本操作 沒有U1晶片的操作： 可以先開啟尋找APP取得AirTag的最後更新的所在地點，到達該地點時，只能播放AirTag的警示音來尋找。\n有U1晶片的操作： 可以先開啟尋找APP取得AirTag的最後更新的所在地點，到達該地點時，且在AirTag藍牙範圍內時，可以使用精確尋找功能來尋找。\n限制 目前支持U1晶片的設備： iPhone: iPhone 11 models, iPhone 12 models and iPhone 13 models.\n目前不允許使用Ultra Wideband的國家或地區：\n Armenia 亞美尼亞 🇦🇲 Azerbaijan 阿塞拜疆 🇦🇿 Belarus 白俄羅斯 🇧🇾 Indonesia 印度尼西亞 🇮🇩 Kazakhstan 哈薩克斯坦 🇰🇿 Kyrgyzstan 吉爾吉斯斯坦 🇰🇬 Nepal 尼泊爾 🇳🇵 Russia 俄羅斯 🇷🇺 Tajikistan 塔吉克斯坦 🇹🇯 Turkmenistan 土庫曼斯坦 🇹🇲 Ukraine 烏克蘭 🇺🇦 Uzbekistan 烏茲別克斯坦 🇺🇿  結論 優點：\n 依蘋果「尋找」的龐大的用戶數量，提升找回遺失物的機率。 可使用支援Ultra Wideband的蘋果設備，使用「精確尋找」更精準的找尋到您的遺失物。 整合至Find My讓您清楚的掌握自己Item的最後所在地。 開啟「遺失模式」後，當其他蘋果設備，偵測到遺失的AirTag時，會自動通知，遺失物的所有人。 讓其他非蘋果生態的用戶，透過NFC感應AirTag來得知遺失物所有人的聯絡資訊。 缺點： 在某些國家或地區可能無法正常使用Airtag。 可能被有心人事，當作追蹤器，來跟蹤他人。 需要使用符合規定的鈕扣電池，否則可能導致AirTag損壞。 沒有支援U1晶片的蘋果設備，可能在吵雜的環境，不易尋找到遺失物。 設備的警示音太小聲。  綜合以上優缺點，個人認為AirTag，是一個值得購買的產品（前提您是用蘋果的產品喔！），適合時常遺忘東西的人購買，雖然不一定能找回遺失物，但大大提升尋回遺失物的機率呀！\n","permalink":"https://AndrewWu29.github.io/zh-tw/2021/12/airtag%E9%96%8B%E7%AE%B1%E5%BF%83%E5%BE%97/","summary":"前言 因為前幾年，去日本旅遊時遺失背包，每次想起來都讓我好心痛喔！打死我以後都不放在電車架子上，已讓我開始搜尋這類型的產品。 其實早在Airtag誕世前，市面上已經有這類型的產品，只是基於產品用戶數量，且需要額外安裝應用程式，透過同樣使用該產品的用戶，且已有安裝應用程式並開啟藍牙及權限，才可當行動裝置，經過遺失者的物品時，才能更新遺失物的所在地，並通知遺失物的所有人。\n但這樣的產品通常會基於以下幾點，導致先天上的劣勢：\n 取決於使用該產品公司的社群大小，且不同家產品公司的裝置，不互相溝通。 需要額外安裝第三方的應用程式。 使用環境被侷限，因不同地方，可能使用這類型產品的用戶數不同，導致侷限使用環境（變成通常只在居家內使用，戶外遺失後，可能會沒有同樣使用同產品的用戶經過，導致當物品從最後遺失地被移動過，可能就找不到了）。  而蘋果Airtag基於以下幾個條件，直接將相關競品廠商壓在地上摩擦：\n 基於Apple產品的用戶數量（Mac, iPhone, iPad, Apple Watch）。 透過Find My網絡尋找。 不需額外安裝應用程式。 U1晶片的加持（使用Ultra-Wideband技術）。 非蘋果產品，可透過NFC感應Airtag，即可取得遺失者的聯絡資訊。  也因蘋果基於龐大的裝置用戶數，無須安裝額外的應用程式，每個裝置只需開啟Find My和藍牙及權限，即可當有經過遺失的Airtag時，透過藍牙溝通，並通知遺失者最新的所在地，或透過感應來得知遺失者的聯絡資訊，方可聯絡遺失者，並歸還遺失物。\n基本操作 沒有U1晶片的操作： 可以先開啟尋找APP取得AirTag的最後更新的所在地點，到達該地點時，只能播放AirTag的警示音來尋找。\n有U1晶片的操作： 可以先開啟尋找APP取得AirTag的最後更新的所在地點，到達該地點時，且在AirTag藍牙範圍內時，可以使用精確尋找功能來尋找。\n限制 目前支持U1晶片的設備： iPhone: iPhone 11 models, iPhone 12 models and iPhone 13 models.\n目前不允許使用Ultra Wideband的國家或地區：\n Armenia 亞美尼亞 🇦🇲 Azerbaijan 阿塞拜疆 🇦🇿 Belarus 白俄羅斯 🇧🇾 Indonesia 印度尼西亞 🇮🇩 Kazakhstan 哈薩克斯坦 🇰🇿 Kyrgyzstan 吉爾吉斯斯坦 🇰🇬 Nepal 尼泊爾 🇳🇵 Russia 俄羅斯 🇷🇺 Tajikistan 塔吉克斯坦 🇹🇯 Turkmenistan 土庫曼斯坦 🇹🇲 Ukraine 烏克蘭 🇺🇦 Uzbekistan 烏茲別克斯坦 🇺🇿  結論 優點：","title":"AirTag開箱心得"}]