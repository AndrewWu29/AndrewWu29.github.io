[{"content":"英國倫敦國王十字車站(King\u0026rsquo;s Cross Station) 是一個1852年啟用的大型鐵路終點站，位於倫敦市中心的國王十字地區，可從這裡通往很多大城市，例如劍橋、彼得伯勒、赫爾河畔京斯頓、唐卡斯特、里茲、約克、紐塞、愛丁堡、格拉斯哥、鄧迪、亞伯丁和印威內斯，重要的交通樞紐。\n國王十字車站是英國鐵路幹線東海岸主線的南端終點站。它的西側緊靠著聖潘克拉斯火車站（St. Pancras Railway Station）。車站於19世紀維多利亞時期落成，成為倫敦工業重要的運輸樞紐。\n然而，歷經二次世界大戰，深受工業衰退的影響，周遭區域景色曾經一度衰頹。\n在1960年代，聖潘克拉斯站開始顯得多餘，有人試圖關閉車站，並拆除酒店。這種嘗試引來了以當時的桂冠詩人約翰·貝傑曼為首的人們的強烈的反對，最終沒有成功。\n直到英法海底隧道開通，1996 年聖潘克拉斯車站成為歐洲之星國際列車的終點，國王十字區的再造計劃由此啓動。這兩個車站以倫敦地鐵的國王十字聖潘可拉斯站作為共同的聯外地鐵站。\n所以現在經過聖潘克拉斯車站時，也可以看到貝傑曼像。\n周邊 在車站的西邊，鄰接著聖潘克拉斯站、大英圖書館和尤斯頓站。這些建築之間僅僅是幾分鐘的步行距離。\n哈利波特的九又四分之三月台 哈利波特電影中的火車站和九又四分之三月台，就是在國王十字車站取景。\n緊鄰通往九又四分之三月台的推車拍攝處，是哈利波特九又四分之三月台商店，在商店營業時間內，會有工作人員在外引導跟協助拍照，並提供魔仗供遊客使用，拍攝完畢，店員會引導您從旁邊的門進入商店，選擇是否購買照片，或是單純在商店逛街。\n哈利波特九又四分之三月台商店 地址：London, N1 9AP. 國王十字車站大廳內，鄰近LNER貴賓室。 電話：+44 20783 31137 營業時間：週一-週六 08:00–20:00；週日 09:00-20:00  聖潘克拉斯站 聖潘克拉斯站（英語：St Pancras railway station），亦稱聖潘克拉斯國際車站（英語：St Pancras International），是位於英國首都倫敦聖潘克拉斯地區的一座大型鐵路車站，坐落在大英圖書館和國王十字車站之間。它最初於1868年由密德蘭鐵路公司啟用。當時它是該公司密德蘭幹線西南部的終點站，來自東密德蘭茲和約克郡的列車在此停靠。\n這座車站以建築結構聞名。在2000年代，這座車站修繕和擴建，並更名為「聖潘克拉斯國際車站」。作為歐洲之星在英國的終點站，車站新建了一個供歐洲之星列車停靠的安全密封區域。列車自聖潘克拉斯站出發，經英國南部的1號高速鐵路，穿過英倫海峽隧道，即到達歐洲大陸。為這座車站和鄰近的國王十字車站提供都市軌道運輸服務的是倫敦地鐵的國王十字聖潘克拉斯站。\n聖潘克拉斯站常被稱作「鐵路大教堂」，因為它擁有兩座維多利亞時代的著名建築。這座車站的主車庫是在1868年由工程師威廉·亨利·巴羅建造的，是當時最大的單跨建築。車站的正面是倫敦聖潘克拉斯萬麗酒店，是一座典型的維多利亞式、哥特復興式建築。\n聖潘克拉斯站 地址：Euston Rd, London N1C 4QP. 電話：+44 20784 37688  大英圖書館 大英圖書館（英語：British Library）是英國的國家圖書館，也是世界上最大的學術圖書館之一，擁有超過1.7億件館藏。作為英國的法定送存機構，大英圖書館會收藏在英國及愛爾蘭地區出版的所有文學作品，任何在英國發行書籍的出版商均須提供一件副本給大英圖書館。\n大英圖書館中的館藏涵蓋400多種語言，包括各類書籍、手稿、期刊、報紙、雜誌、劇本、專利、資料庫、地圖、郵票、圖畫、錄影和錄音等印刷品和數位內容，其中有約1,400萬本藏書，以及可追溯至西元前2000年的大量手稿和歷史文獻，圖書館除收藏自英、愛兩地送存的出版物（約每日8,000件）外，亦設有館藏獲取計畫，每年增加約300萬件作品，每年需新增約9.6公里的書架放置，而圖書館內約可容納1,200名讀者。\n大英圖書館 地址：96 Euston Rd, London NW1 2DB. 電話：+44 33033 31144 營業時間：週一-週四 09:30–20:00；週五 09:30–18:00；週六09:30–17:00；週日 11:00-17:00  交通資訊 國王十字車站 地址：Euston Rd, London N1 9AL. 電話：+44 20743 14001  參考資料 維基百科/倫敦國王十字車站\n維基百科/聖潘克拉斯車站\n維基百科/大英圖書館\n","permalink":"https://AndrewWu29.github.io/zh-tw/2022/02/%E8%8B%B1%E5%9C%8B-%E5%80%AB%E6%95%A6-%E5%9C%8B%E7%8E%8B%E5%8D%81%E5%AD%97%E8%BB%8A%E7%AB%99%E5%93%88%E5%88%A9%E6%B3%A2%E7%89%B99%E5%8F%884%E5%88%86%E4%B9%8B3%E6%9C%88%E5%8F%B0/","summary":"英國倫敦國王十字車站(King\u0026rsquo;s Cross Station) 是一個1852年啟用的大型鐵路終點站，位於倫敦市中心的國王十字地區，可從這裡通往很多大城市，例如劍橋、彼得伯勒、赫爾河畔京斯頓、唐卡斯特、里茲、約克、紐塞、愛丁堡、格拉斯哥、鄧迪、亞伯丁和印威內斯，重要的交通樞紐。\n國王十字車站是英國鐵路幹線東海岸主線的南端終點站。它的西側緊靠著聖潘克拉斯火車站（St. Pancras Railway Station）。車站於19世紀維多利亞時期落成，成為倫敦工業重要的運輸樞紐。\n然而，歷經二次世界大戰，深受工業衰退的影響，周遭區域景色曾經一度衰頹。\n在1960年代，聖潘克拉斯站開始顯得多餘，有人試圖關閉車站，並拆除酒店。這種嘗試引來了以當時的桂冠詩人約翰·貝傑曼為首的人們的強烈的反對，最終沒有成功。\n直到英法海底隧道開通，1996 年聖潘克拉斯車站成為歐洲之星國際列車的終點，國王十字區的再造計劃由此啓動。這兩個車站以倫敦地鐵的國王十字聖潘可拉斯站作為共同的聯外地鐵站。\n所以現在經過聖潘克拉斯車站時，也可以看到貝傑曼像。\n周邊 在車站的西邊，鄰接著聖潘克拉斯站、大英圖書館和尤斯頓站。這些建築之間僅僅是幾分鐘的步行距離。\n哈利波特的九又四分之三月台 哈利波特電影中的火車站和九又四分之三月台，就是在國王十字車站取景。\n緊鄰通往九又四分之三月台的推車拍攝處，是哈利波特九又四分之三月台商店，在商店營業時間內，會有工作人員在外引導跟協助拍照，並提供魔仗供遊客使用，拍攝完畢，店員會引導您從旁邊的門進入商店，選擇是否購買照片，或是單純在商店逛街。\n哈利波特九又四分之三月台商店 地址：London, N1 9AP. 國王十字車站大廳內，鄰近LNER貴賓室。 電話：+44 20783 31137 營業時間：週一-週六 08:00–20:00；週日 09:00-20:00  聖潘克拉斯站 聖潘克拉斯站（英語：St Pancras railway station），亦稱聖潘克拉斯國際車站（英語：St Pancras International），是位於英國首都倫敦聖潘克拉斯地區的一座大型鐵路車站，坐落在大英圖書館和國王十字車站之間。它最初於1868年由密德蘭鐵路公司啟用。當時它是該公司密德蘭幹線西南部的終點站，來自東密德蘭茲和約克郡的列車在此停靠。\n這座車站以建築結構聞名。在2000年代，這座車站修繕和擴建，並更名為「聖潘克拉斯國際車站」。作為歐洲之星在英國的終點站，車站新建了一個供歐洲之星列車停靠的安全密封區域。列車自聖潘克拉斯站出發，經英國南部的1號高速鐵路，穿過英倫海峽隧道，即到達歐洲大陸。為這座車站和鄰近的國王十字車站提供都市軌道運輸服務的是倫敦地鐵的國王十字聖潘克拉斯站。\n聖潘克拉斯站常被稱作「鐵路大教堂」，因為它擁有兩座維多利亞時代的著名建築。這座車站的主車庫是在1868年由工程師威廉·亨利·巴羅建造的，是當時最大的單跨建築。車站的正面是倫敦聖潘克拉斯萬麗酒店，是一座典型的維多利亞式、哥特復興式建築。\n聖潘克拉斯站 地址：Euston Rd, London N1C 4QP. 電話：+44 20784 37688  大英圖書館 大英圖書館（英語：British Library）是英國的國家圖書館，也是世界上最大的學術圖書館之一，擁有超過1.7億件館藏。作為英國的法定送存機構，大英圖書館會收藏在英國及愛爾蘭地區出版的所有文學作品，任何在英國發行書籍的出版商均須提供一件副本給大英圖書館。\n大英圖書館中的館藏涵蓋400多種語言，包括各類書籍、手稿、期刊、報紙、雜誌、劇本、專利、資料庫、地圖、郵票、圖畫、錄影和錄音等印刷品和數位內容，其中有約1,400萬本藏書，以及可追溯至西元前2000年的大量手稿和歷史文獻，圖書館除收藏自英、愛兩地送存的出版物（約每日8,000件）外，亦設有館藏獲取計畫，每年增加約300萬件作品，每年需新增約9.6公里的書架放置，而圖書館內約可容納1,200名讀者。\n大英圖書館 地址：96 Euston Rd, London NW1 2DB. 電話：+44 33033 31144 營業時間：週一-週四 09:30–20:00；週五 09:30–18:00；週六09:30–17:00；週日 11:00-17:00  交通資訊 國王十字車站 地址：Euston Rd, London N1 9AL.","title":"【英國 倫敦】 國王十字車站|哈利波特9又4分之3月台"},{"content":"什麼是Markdown? Markdown是一種輕量級標記式語言，創始人為約翰·格魯伯。它允許人們使用易讀易寫的純文字格式編寫文件，然後轉換成有效的XHTML（或者HTML）文件。這種語言吸收了很多在電子郵件中已有的純文字標記的特性。\n由於Markdown的輕量化、易讀易寫特性，並且對於圖片，圖表、數學式都有支援，目前許多網站都廣泛使用Markdown來撰寫說明文件或是用於論壇上發表訊息。如GitHub、Reddit、Diaspora、Stack Exchange、OpenStreetMap 、SourceForge、簡書等，甚至還能被用來撰寫電子書。\n所以只要熟悉相關語法，Markdown可以讓您輕鬆快速地撰寫筆記、文章、說明文件等。\n基本語法 標題 # 標題一 ## 標題二 ### 標題三 #### 標題四 ##### 標題五 ###### 標題六  效果\n標題一 標題二 標題三 標題四 標題五 標題六 強調 粗體 **粗體前後各兩個星號** __粗體前後各兩個底線__  效果\n粗體前後各兩個星號\n粗體前後各兩個底線\n斜體 *斜體前後各一個星號* _斜體前後各一個星號_  效果\n斜體前後各一個星號\n斜體前後各一個星號\n粗斜體 ***粗體前後各三個星號*** ___粗體前後各三個底線___  效果\n粗體前後各三個星號\n粗體前後各三個底線\n文字段落 一個段落是由一個以上相連接的行句組成，而一個以上的空行則會切分出不同的段落。\n第一段 第二段  清單 Markdown支援有序清單和無序清單。無序清單使用 * 、 + 或 - 作為清單標記，有序清單使用數字接著一個英文句點做為清單標記。\n無序清單 * 紅 * 橙 * 黃 + 紅 + 橙 + 黃 - 紅 - 橙 - 黃  效果\n 紅 橙 黃   紅 橙 黃   紅 橙 黃  有序清單 1. 紅 2. 橙 3. 黃  效果\n 紅 橙 黃  若要使用多層級清單，可在下一層級使用一個縮排或是兩個半形空白。\n- 紅 - 橙 - 黃 - 粉紅色 - 橙紅色 - 橙黃色  效果\n 紅 橙 黃  粉紅色 橙紅色  橙黃色      複選框 用於待辦事項或確認項目，使用 * [] 符號放到項目開頭，中括號內有 x 代表被選取。\n* [x] 這是已確認項目 * [ ] 這是待確認項目  效果\n 這是已確認項目 這是待確認項目  分隔線 在一行內使用三個或以上的 *、-、_ 來建立分隔線，符號內不可有其他東西，但可以在符號內插入空白。\n*** --- ___ ******** * * * ---------- - - -  效果\n       進階語法 連結 語法如下。\n 一個中括號，放置連結文字 一個小括號，放置連結路徑或網址，一樣可使用雙引號來添加 prompt 文字  [GitHub](https://andrewwu29.github.io \u0026quot;My GitHub\u0026quot;) 效果\nGitHub\n圖片 語法如下\n 一個驚嘆號 ! 開頭 一對方括號，放置圖片的替代文字 一對括號，放置圖片的路徑或網址，另外還可選擇性的添加 prompt，當滑鼠停留在圖片上時，會自動顯示這段文字，並使用雙引號包住。  PS:路徑可使用絕對路徑或相對路徑\n![Img](/path/image.jpg) ![Img](/path/image.jpg \u0026quot;title\u0026quot;)  效果\n無提示符的。 有提示符的，當滑鼠停留在圖片上面時，會自動顯示提示符。 自動連結 Markdown支援比較簡短的自動連結形式來處理網址和電子郵件信箱，只要是用角括號包起來，Markdown就會自動把它轉成連結，連結的文字就和連結位置一樣，例如：\n\u0026lt;https://andrewwu29.github.io\u0026gt;  效果\nhttps://andrewwu29.github.io\n表格 Markdown 表格有點囉嗦，排版上也不是很美觀，若非必要盡量不做大張表格，實際運用時不太親民。\n 最外圍的豎線不一定需要。 靠左對齊的寫法是添加 : 在左側，如 :\u0026mdash;，同理靠右對齊為在右側添加冒號 \u0026mdash;: 置中對齊呈現的方式為在兩側都添加冒號 :\u0026ndash;:。  | Plugin | README | | ------ | ------ | | Dropbox | [plugins/dropbox/README.md][PlDb] | | GitHub | [plugins/github/README.md][PlGh] | | Google Drive | [plugins/googledrive/README.md][PlGd] | | OneDrive | [plugins/onedrive/README.md][PlOd] | | Medium | [plugins/medium/README.md][PlMe] | | Google Analytics | [plugins/googleanalytics/README.md][PlGa] | 程式碼 要標記一小段程式碼，可以使用反引號`包起來。但如果要在程式碼內插入反引號，可以使用兩個反引號來包。\nUse the `printf()` function. ``There is a literal backtick (`) here.`` A single backtick in a code span: `` ` `` A backtick-delimited string in a code span: `` `foo` ``  效果\nUse the printf() function.\nThere is a literal backtick (`) here.\nA single backtick in a code span: `\nA backtick-delimited string in a code span: `foo`\n程式碼區塊 要標記多行的程式碼，可以使用4個空白或1個tab縮排即可或是頭尾三個反引號。\nHere is an example of AppleScript: tell application \u0026quot;Foo\u0026quot; beep end tell ``` 程式碼區塊 ```  效果\nHere is an example of AppleScript:\ntell application \u0026quot;Foo\u0026quot; beep end tell  程式碼區塊 跳脫字元 Markdown可以利用反斜線來插入一些在語法中有其他意義的符號。\nMarkdown支援在下面這些符號前面加上反斜線來幫助插入普通的符號：\n   符號 中文名稱 英文名稱     \\ 反斜線 backslash   ` 反引號 backtick   * 星號 asterisk   _ 底線 underscore   {} 大括號 curly braces   [] 方括號 square brackets   () 括號 parentheses   # 井字號 hash mark   + 加號 plus sign   - 減號 minus sign (hyphen)   . 英文句點 dot   ! 驚嘆號 exclamation mark    區塊引言 Markdown使用email形式的區塊引言，在區塊引言的區塊每行的最前面加上\u0026gt;：\n This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.\nDonec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse id sem consectetuer libero luctus adipiscing.\n Markdown也允許你只在整個段落的第一行最前面加上\u0026gt;：\n This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.\n  Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse id sem consectetuer libero luctus adipiscing.\n 區塊引言可以有階層（例如：引言內的引言），只要根據層數加上不同數量的\u0026gt;：\n This is the first level of quoting.\n This is nested blockquote.\n Back to the first level.\n   引言的區塊內也可以使用其他的Markdown語法，包括標題、清單、程式碼區塊等：\n This is a header.  This is the first list item. This is the second list item.  Here\u0026rsquo;s some example code:\nreturn shell_exec(\u0026quot;echo $input | $markdown_script\u0026quot;);   參考資料 Markdown文件\nMarkdown筆記神器\n","permalink":"https://AndrewWu29.github.io/zh-tw/2022/02/markdown-%E7%AD%86%E8%A8%98-%E5%9F%BA%E6%9C%AC%E8%AA%9E%E6%B3%95%E4%BD%BF%E7%94%A8/","summary":"什麼是Markdown? Markdown是一種輕量級標記式語言，創始人為約翰·格魯伯。它允許人們使用易讀易寫的純文字格式編寫文件，然後轉換成有效的XHTML（或者HTML）文件。這種語言吸收了很多在電子郵件中已有的純文字標記的特性。\n由於Markdown的輕量化、易讀易寫特性，並且對於圖片，圖表、數學式都有支援，目前許多網站都廣泛使用Markdown來撰寫說明文件或是用於論壇上發表訊息。如GitHub、Reddit、Diaspora、Stack Exchange、OpenStreetMap 、SourceForge、簡書等，甚至還能被用來撰寫電子書。\n所以只要熟悉相關語法，Markdown可以讓您輕鬆快速地撰寫筆記、文章、說明文件等。\n基本語法 標題 # 標題一 ## 標題二 ### 標題三 #### 標題四 ##### 標題五 ###### 標題六  效果\n標題一 標題二 標題三 標題四 標題五 標題六 強調 粗體 **粗體前後各兩個星號** __粗體前後各兩個底線__  效果\n粗體前後各兩個星號\n粗體前後各兩個底線\n斜體 *斜體前後各一個星號* _斜體前後各一個星號_  效果\n斜體前後各一個星號\n斜體前後各一個星號\n粗斜體 ***粗體前後各三個星號*** ___粗體前後各三個底線___  效果\n粗體前後各三個星號\n粗體前後各三個底線\n文字段落 一個段落是由一個以上相連接的行句組成，而一個以上的空行則會切分出不同的段落。\n第一段 第二段  清單 Markdown支援有序清單和無序清單。無序清單使用 * 、 + 或 - 作為清單標記，有序清單使用數字接著一個英文句點做為清單標記。\n無序清單 * 紅 * 橙 * 黃 + 紅 + 橙 + 黃 - 紅 - 橙 - 黃  效果","title":"Markdown 筆記 基本語法使用"},{"content":"約克大教堂 約克大教堂（英語：York Minster）位於英國北部約克市，是英格蘭教會約克教區的座堂，也是歐洲北部第二大的哥德式教堂。約克大教堂的正式名稱為「約克聖彼得座堂和大主教教堂」（The Cathedral and Metropolitical Church of St Peter in York）。\n約克大教堂表現了典型的哥德式風格：裝飾風格（1275－1380）的中殿和聖堂參事堂，詩班席和東端為垂直式造型，北翼和南翼則採用了英國早期的風格。中殿的「大西窗」於1338年建造，而在聖母堂最東端的「大東窗」（1408年完成）是全世界最大的中世紀彩繪玻璃。在教堂北面的「五姊妹窗」（Five Sisters Window），每個尖頂窗都超過16米（52英尺）高，是座堂歷史最悠久的玻璃窗，而南面是著名的玫瑰窗，有「哥德建築的眼睛」之美稱。\n大東窗 一些照片 心得 約克是一個充滿歷史風情的一個城市，可漫步在約克舊城牆上，也可拜訪英國最大的約克大教堂，享受哥德式建築的宏偉，或是到Bettys嚐嚐百年歷史的英國傳統下午茶；肉舖街體驗中世紀的街道，也有人說是哈利波特的斜角巷(Diagon Alley)的原形，為了維持中世紀的街道，所以走起來有些許疲累，建議穿著舒適的鞋子，這樣遊走起來也必較不過過於疲勞。\n門票資訊 成人12磅、學生9磅、小孩免費（0-16歲需大人陪同），爬塔額外+5磅(若是約克學生憑學生證免費，爬塔則須5磅)\n交通資訊 約克大教堂（York Minster）\n地址：Deangate, York YO1 7HH\n電話：01904 557200\n官網：York Minster\n公車 最近的車站是St Leonard’s Place，可透過iTravelYork來查詢規劃\n火車 約克火車站，步行約十分鐘\n地址：Station Road, York, YO24 1AB\n官網：約克火車站\n飛機 約克大教堂鄰近的機場有\n里茲布拉福機場\n官網：Leeds Bradford\n曼徹斯特機場\n官網：Manchester\n紐卡斯爾（新堡）機場\n官網：Newcastle\n參考資料 維基百科\n","permalink":"https://AndrewWu29.github.io/zh-tw/2022/02/%E8%8B%B1%E5%9C%8B-%E7%B4%84%E5%85%8B-%E7%B4%84%E5%85%8B%E5%A4%A7%E6%95%99%E5%A0%82-%E6%AD%90%E6%B4%B2%E5%8C%97%E9%83%A8%E7%AC%AC%E4%BA%8C%E5%A4%A7%E7%9A%84%E5%93%A5%E5%BE%B7%E5%BC%8F%E6%95%99%E5%A0%82/","summary":"約克大教堂 約克大教堂（英語：York Minster）位於英國北部約克市，是英格蘭教會約克教區的座堂，也是歐洲北部第二大的哥德式教堂。約克大教堂的正式名稱為「約克聖彼得座堂和大主教教堂」（The Cathedral and Metropolitical Church of St Peter in York）。\n約克大教堂表現了典型的哥德式風格：裝飾風格（1275－1380）的中殿和聖堂參事堂，詩班席和東端為垂直式造型，北翼和南翼則採用了英國早期的風格。中殿的「大西窗」於1338年建造，而在聖母堂最東端的「大東窗」（1408年完成）是全世界最大的中世紀彩繪玻璃。在教堂北面的「五姊妹窗」（Five Sisters Window），每個尖頂窗都超過16米（52英尺）高，是座堂歷史最悠久的玻璃窗，而南面是著名的玫瑰窗，有「哥德建築的眼睛」之美稱。\n大東窗 一些照片 心得 約克是一個充滿歷史風情的一個城市，可漫步在約克舊城牆上，也可拜訪英國最大的約克大教堂，享受哥德式建築的宏偉，或是到Bettys嚐嚐百年歷史的英國傳統下午茶；肉舖街體驗中世紀的街道，也有人說是哈利波特的斜角巷(Diagon Alley)的原形，為了維持中世紀的街道，所以走起來有些許疲累，建議穿著舒適的鞋子，這樣遊走起來也必較不過過於疲勞。\n門票資訊 成人12磅、學生9磅、小孩免費（0-16歲需大人陪同），爬塔額外+5磅(若是約克學生憑學生證免費，爬塔則須5磅)\n交通資訊 約克大教堂（York Minster）\n地址：Deangate, York YO1 7HH\n電話：01904 557200\n官網：York Minster\n公車 最近的車站是St Leonard’s Place，可透過iTravelYork來查詢規劃\n火車 約克火車站，步行約十分鐘\n地址：Station Road, York, YO24 1AB\n官網：約克火車站\n飛機 約克大教堂鄰近的機場有\n里茲布拉福機場\n官網：Leeds Bradford\n曼徹斯特機場\n官網：Manchester\n紐卡斯爾（新堡）機場\n官網：Newcastle\n參考資料 維基百科","title":"【英國 約克】 約克大教堂 歐洲北部第二大的哥德式教堂"},{"content":"智慧手機： iPhone SE 第二代 我可以說我並不喜歡太大的手機，所以對我來說iPhone SE第二代的大小，我剛好可以一手掌握，加上疫情時候，我外出通常會戴上口罩，iPhone SE是使用第二代Touch ID，讓我可以不用脫下口罩就可以使用指紋解鎖我的手機，個人還是偏好指紋解鎖。\n至於相機對我來說不是太大的問題，我也不常拍攝夜晚的照片，所以iPhone SE已經夠我拍攝日間的照片了。\n手機保護殼： 犀牛盾 Mod NX 我一直有使用手機殼的習慣，保護我手機不小心摔到地上的機會，也可以讓我的手機用的更久。 一路下來，也用了不少牌子，但是我最愛的，還是犀牛盾Mod NX，我喜歡他們家的模組化設計，你可依照你個人的喜歡變更按鍵顏色背板圖片等，也可以選擇預設的透明背板，讓別人知道你是用什麼顏色的手機。\n真-無線耳機： Sony WF-1000XM4 我隨身都會攜帶抗噪耳機，在這我選擇的是Sony WF-1000XM4，因為畢竟我還有一些產品不是蘋果的，所以對我來說選擇Sony WF-1000XM4是一個最佳解。\n加上我是一個通勤族，有時想要在通勤時，多點時間休息，我就戴上耳機，開啟抗噪模式，讓自己有一個安靜的空間，充電充電，到了辦公室，想要專注於手邊的工作，也可以開啟抗噪模式，來遮蔽令人分心的噪音。\n錢包 錢包，我這裡只是單純找了一個可以存放我的鈔票、單據、身分證、提款卡和信用卡，下次更換的話，應該會想買Bellory的\n行動電源： IDMIX CH07 我個人滿喜歡這個行動電源的，不僅整合了充電器，還內建了USB C和Lighting 線，讓你不會再忘記帶充電線而不能替你的行動裝置充電。\n還有充飽後，大概可以充我的iPhone SE第二代三次。\n手錶： Apple Watch Series 5 44mm 手錶的話，我是選擇Apple Watch 第五代，雖然我每天都要充電，但我還是滿喜歡它可以，幫我記錄我的活動和提醒我的日程，跟Apple Pay支付一些日常消費。 不過還是有些缺點，像是記錄睡眠的狀況，通常需要而外購買應用程式來幫忙更準確地記錄睡眠。\n至於下一代的Apple Watch支援了血氧濃度檢測，但我倒是覺得，沒必要因為一個小功能就升級。\n手錶保護殼： 犀牛盾 CrashGuard NX 我個人會使用手錶保護殼，來保護我的Apple Watch刮傷錶面或錶身，在這裡我是使用犀牛盾 CrashGuard NX，一樣我喜歡他的模組化DNA我可以依照我的喜好，變更顏色的配置。\n","permalink":"https://AndrewWu29.github.io/zh-tw/2022/02/%E6%88%91%E7%9A%84%E6%9C%80%E5%B0%91%E6%97%A5%E5%B8%B8%E6%94%9C%E5%B8%B6%E7%A7%91%E6%8A%80%E7%94%A2%E5%93%812022/","summary":"智慧手機： iPhone SE 第二代 我可以說我並不喜歡太大的手機，所以對我來說iPhone SE第二代的大小，我剛好可以一手掌握，加上疫情時候，我外出通常會戴上口罩，iPhone SE是使用第二代Touch ID，讓我可以不用脫下口罩就可以使用指紋解鎖我的手機，個人還是偏好指紋解鎖。\n至於相機對我來說不是太大的問題，我也不常拍攝夜晚的照片，所以iPhone SE已經夠我拍攝日間的照片了。\n手機保護殼： 犀牛盾 Mod NX 我一直有使用手機殼的習慣，保護我手機不小心摔到地上的機會，也可以讓我的手機用的更久。 一路下來，也用了不少牌子，但是我最愛的，還是犀牛盾Mod NX，我喜歡他們家的模組化設計，你可依照你個人的喜歡變更按鍵顏色背板圖片等，也可以選擇預設的透明背板，讓別人知道你是用什麼顏色的手機。\n真-無線耳機： Sony WF-1000XM4 我隨身都會攜帶抗噪耳機，在這我選擇的是Sony WF-1000XM4，因為畢竟我還有一些產品不是蘋果的，所以對我來說選擇Sony WF-1000XM4是一個最佳解。\n加上我是一個通勤族，有時想要在通勤時，多點時間休息，我就戴上耳機，開啟抗噪模式，讓自己有一個安靜的空間，充電充電，到了辦公室，想要專注於手邊的工作，也可以開啟抗噪模式，來遮蔽令人分心的噪音。\n錢包 錢包，我這裡只是單純找了一個可以存放我的鈔票、單據、身分證、提款卡和信用卡，下次更換的話，應該會想買Bellory的\n行動電源： IDMIX CH07 我個人滿喜歡這個行動電源的，不僅整合了充電器，還內建了USB C和Lighting 線，讓你不會再忘記帶充電線而不能替你的行動裝置充電。\n還有充飽後，大概可以充我的iPhone SE第二代三次。\n手錶： Apple Watch Series 5 44mm 手錶的話，我是選擇Apple Watch 第五代，雖然我每天都要充電，但我還是滿喜歡它可以，幫我記錄我的活動和提醒我的日程，跟Apple Pay支付一些日常消費。 不過還是有些缺點，像是記錄睡眠的狀況，通常需要而外購買應用程式來幫忙更準確地記錄睡眠。\n至於下一代的Apple Watch支援了血氧濃度檢測，但我倒是覺得，沒必要因為一個小功能就升級。\n手錶保護殼： 犀牛盾 CrashGuard NX 我個人會使用手錶保護殼，來保護我的Apple Watch刮傷錶面或錶身，在這裡我是使用犀牛盾 CrashGuard NX，一樣我喜歡他的模組化DNA我可以依照我的喜好，變更顏色的配置。","title":"我的最少日常攜帶科技產品2022?"},{"content":"Hugo是一個熱門的靜態網站產生工具，而PaperMod本身就內建了RSS 2.0模板。\n什麼是RSS feed? RSS其實是「Really Simple Syndication」的簡稱，中文翻譯為簡易資訊據合，目的其實很簡單，主要提供一個標準化格式，將新聞、部落格、網站或是社交平台頻道的更新資訊彙整到一個頁面。\n所以意思指，如果有支援RSS服務的話，可以讓那些追蹤者，可以更簡單的追蹤到您最新文章或資訊。\n建立RSS feed到您的Hugo PaperMod主題，只要三步驟 步驟一: 確認config.yml檔案裡的output的清單有RSS 步驟二: 新增RSS feed圖示到您的網站 步驟三: 開啟所有文章內容支持產生RSS XML檔案 所以現在config.yml檔案裡應該要有以下的代碼::\nparams: ShowFullTextinRSS: true # Supports to show your whole contents in RSS, not just summary socialIcons: - name: rss # Shows an RSS feed icon on your site` url: \u0026quot;index.xml\u0026quot; # Your RSS feed url path outputs: home: - HTML - RSS # Supports your site output including RSS format - JSON 完成以上步驟後，現在您的Hugo PaperMod主題網站，已經可以支援RSS feed了。\n參考資料 Setting up an RSS feed for a Hugo blog using the PaperMod Theme\n","permalink":"https://AndrewWu29.github.io/zh-tw/2022/02/%E5%A6%82%E4%BD%95%E6%B7%BB%E5%8A%A0rss-feed%E5%88%B0%E6%82%A8%E7%9A%84hugo-papermod%E4%B8%BB%E9%A1%8C/","summary":"Hugo是一個熱門的靜態網站產生工具，而PaperMod本身就內建了RSS 2.0模板。\n什麼是RSS feed? RSS其實是「Really Simple Syndication」的簡稱，中文翻譯為簡易資訊據合，目的其實很簡單，主要提供一個標準化格式，將新聞、部落格、網站或是社交平台頻道的更新資訊彙整到一個頁面。\n所以意思指，如果有支援RSS服務的話，可以讓那些追蹤者，可以更簡單的追蹤到您最新文章或資訊。\n建立RSS feed到您的Hugo PaperMod主題，只要三步驟 步驟一: 確認config.yml檔案裡的output的清單有RSS 步驟二: 新增RSS feed圖示到您的網站 步驟三: 開啟所有文章內容支持產生RSS XML檔案 所以現在config.yml檔案裡應該要有以下的代碼::\nparams: ShowFullTextinRSS: true # Supports to show your whole contents in RSS, not just summary socialIcons: - name: rss # Shows an RSS feed icon on your site` url: \u0026quot;index.xml\u0026quot; # Your RSS feed url path outputs: home: - HTML - RSS # Supports your site output including RSS format - JSON 完成以上步驟後，現在您的Hugo PaperMod主題網站，已經可以支援RSS feed了。","title":"如何添加RSS feed到您的Hugo PaperMod主題?"},{"content":"什麼是Disqus? 是互聯網最受歡迎的評論外掛程式，使出版者可輕鬆將他們的內容更加靈活，增加豐富多元的討論，並有效地審核評論和建立社群。\n手把手教學，教您整合Disqus到您的Hugo網站 步驟一: 註冊Disqus 步驟二: 安裝Disqus 步驟三: 選擇\u0026quot;I want to install Disqus on my site.\u0026quot; 步驟四: 填寫表單資料 步驟五: 複製留言的模板，並建立disqus.html檔案在您的Hugo網站的檔案夾底下的layouts/partials，然後並貼上您獲得的留言模板 範本應該會長得跟下面的代碼一樣:\n\u0026lt;div id=\u0026quot;disqus_thread\u0026quot;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;script\u0026gt; /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables */ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE // Don't ever inject Disqus on localhost--it creates unwanted // discussions from 'localhost:1313' on your Disqus account... if (window.location.hostname == \u0026quot;localhost\u0026quot;) return; var d = document, s = d.createElement('script'); s.src = 'https://your_disqus_name.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); \u0026lt;/script\u0026gt; \u0026lt;noscript\u0026gt;Please enable JavaScript to view the \u0026lt;a href=\u0026quot;https://disqus.com/?ref_noscript\u0026quot;\u0026gt;comments powered by Disqus.\u0026lt;/a\u0026gt;\u0026lt;/noscript\u0026gt; 步驟六: 建立comments.html檔案在您的Hugo網站的檔案夾底下的layouts/partials，然後複製並貼上以下代碼到這個檔案裡面 {{- /* Comments area start */ -}} {{- /* partial \u0026quot;disqus.html\u0026quot; . */ -}} {{ template \u0026quot;_internal/disqus.html\u0026quot; . }} {{- /* to add comments read =\u0026gt; https://gohugo.io/content-management/comments/ */ -}} {{- /* Comments area end */ -}} 步驟七: 增加Disqus簡稱disqusShortname = \u0026quot;\u0026lt;your-disqus-shortname\u0026gt;\u0026quot;到config.yml檔案裡 步驟八: 恭喜! 現在所有步驟都結束了，您可以發布到您的GitHub倉庫 參考資料 Disqus\nInternal Templates | Hugo\n","permalink":"https://AndrewWu29.github.io/zh-tw/2022/02/%E5%A6%82%E4%BD%95%E6%95%B4%E5%90%88disqus%E5%88%B0%E6%82%A8%E7%9A%84hugo%E7%B6%B2%E7%AB%99/","summary":"什麼是Disqus? 是互聯網最受歡迎的評論外掛程式，使出版者可輕鬆將他們的內容更加靈活，增加豐富多元的討論，並有效地審核評論和建立社群。\n手把手教學，教您整合Disqus到您的Hugo網站 步驟一: 註冊Disqus 步驟二: 安裝Disqus 步驟三: 選擇\u0026quot;I want to install Disqus on my site.\u0026quot; 步驟四: 填寫表單資料 步驟五: 複製留言的模板，並建立disqus.html檔案在您的Hugo網站的檔案夾底下的layouts/partials，然後並貼上您獲得的留言模板 範本應該會長得跟下面的代碼一樣:\n\u0026lt;div id=\u0026quot;disqus_thread\u0026quot;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;script\u0026gt; /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables */ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.","title":"如何整合Disqus到您的Hugo網站?"},{"content":"什麼是Google Analytics? Google Analytics是一個網站分析服務，它提供統計和基本分析的工具，給搜尋引擎最佳化和行銷目的。這個服務是一部分Google行銷平台並免費提供給任何有Google帳號的用戶使用。\n如何添加google analytics到Hugo網站? 步驟一: 建立一個google帳號 步驟二: 到google analytics網站 步驟三: 在google analytics設定好您要分析的網站資訊 步驟四: 取得您給google analytics分析的ID 步驟五: 編輯您Hugo的config.yml 添加 googleAnalytics: G-MEASUREMENT_ID 到您的config.yml檔案。\n步驟六: 添加google analytics模板到您Hugo的主題 添加 {{ template \u0026quot;_internal/google_analytics.html\u0026quot; . }} 到您的主題底下的head.html檔案 \u0026lt;head\u0026gt; 區塊內\n參考資料 DEFINITION Google Analytics\nGoogle Analytics\nInternal Templates | Hugo\n","permalink":"https://AndrewWu29.github.io/zh-tw/2022/02/%E5%A6%82%E4%BD%95%E6%B7%BB%E5%8A%A0google-analytics%E5%88%B0hugo/","summary":"什麼是Google Analytics? Google Analytics是一個網站分析服務，它提供統計和基本分析的工具，給搜尋引擎最佳化和行銷目的。這個服務是一部分Google行銷平台並免費提供給任何有Google帳號的用戶使用。\n如何添加google analytics到Hugo網站? 步驟一: 建立一個google帳號 步驟二: 到google analytics網站 步驟三: 在google analytics設定好您要分析的網站資訊 步驟四: 取得您給google analytics分析的ID 步驟五: 編輯您Hugo的config.yml 添加 googleAnalytics: G-MEASUREMENT_ID 到您的config.yml檔案。\n步驟六: 添加google analytics模板到您Hugo的主題 添加 {{ template \u0026quot;_internal/google_analytics.html\u0026quot; . }} 到您的主題底下的head.html檔案 \u0026lt;head\u0026gt; 區塊內\n參考資料 DEFINITION Google Analytics\nGoogle Analytics\nInternal Templates | Hugo","title":"如何添加Google Analytics到Hugo?"},{"content":"確認Git是否安裝成功 git --version 設定Git使用者名稱跟信箱 git config --global user.name \u0026quot;Andrew_Wu\u0026quot; git config --global user.email \u0026quot;user@gmail.com\u0026quot; 確認輸入的資料是否正確 git config --list 獲取幫助 git help \u0026lt;command\u0026gt; 建立新的數據庫 git init 顯示當前數據庫狀態 git status 新增檔案到暫存區域 git add \u0026lt;filename\u0026gt; git add . #將工作目錄內所有檔案建立索引 建立新提交 git commit git commit -m \u0026quot;提交訊息\u0026quot; #-m means Message 顯示歷史日誌 git log #顯示歷史日誌的詳細資訊 git log --all --graph --decorate #以DAG方式顯示歷史日誌 查詢差異 git diff \u0026lt;filename\u0026gt; #顯示與上次提交時的差異 git diff \u0026lt;revision\u0026gt; \u0026lt;filename\u0026gt; #顯示某檔案與上次提交時的差異 分支 git checkout \u0026lt;revision\u0026gt; #更新HEAD與當前分支 git branch #顯示分支 git branch \u0026lt;name\u0026gt; #建立分支 git checkout -b \u0026lt;name\u0026gt; #建立分支並切換至該分支 同 git branch \u0026lt;name\u0026gt; ; git checkout \u0026lt;name\u0026gt; 合併 git merge \u0026lt;revision\u0026gt; #合併至當前分支 git mergetool #使用神奇工具處理合併衝突 git rebase #合併版本 git rebase -i HEAD~3 #修改歷史commit紀錄 遠端 git remote #列出遠端 git remote add \u0026lt;name\u0026gt; \u0026lt;url\u0026gt; #新增遠端 git push \u0026lt;remote\u0026gt; \u0026lt;local branch\u0026gt;:\u0026lt;remote branch\u0026gt; #將物件推送到遠端，並更新遠端參考 git branch --set-upstream-to=\u0026lt;remote\u0026gt;/\u0026lt;remote branch\u0026gt; #建立本地分支與遠端分支的關聯 git fetch #從遠端擷取物件/參考 git pull #更新本地端和遠端程式碼同步，同git fetch; git merge git clone #從遠端下載數據庫 回滾 git commit --amend #編輯提交的內容或資訊 git reset HEAD \u0026lt;file\u0026gt; #取消暫存檔案 git checkout -- \u0026lt;file\u0026gt; #回滾更改 進階 git clown --depth=1 #下載數據庫，但不下載歷史紀錄 git add -p #互動暫存 git blame #檢視最後修改某列的使用者 git stash #暫時移除工作目錄下的變更 git bisect #透過二分搜尋來搜尋歷史紀錄 .gitignore #指定忽視且不會再追蹤的檔案 參考資料 版本控制\nGit 與 Github 版本控制基本指令與操作入門教學\nGit教學 初心者懶人包 Git 入門\n","permalink":"https://AndrewWu29.github.io/zh-tw/2022/01/git%E5%9F%BA%E6%9C%AC%E6%8C%87%E4%BB%A4/","summary":"確認Git是否安裝成功 git --version 設定Git使用者名稱跟信箱 git config --global user.name \u0026quot;Andrew_Wu\u0026quot; git config --global user.email \u0026quot;user@gmail.com\u0026quot; 確認輸入的資料是否正確 git config --list 獲取幫助 git help \u0026lt;command\u0026gt; 建立新的數據庫 git init 顯示當前數據庫狀態 git status 新增檔案到暫存區域 git add \u0026lt;filename\u0026gt; git add . #將工作目錄內所有檔案建立索引 建立新提交 git commit git commit -m \u0026quot;提交訊息\u0026quot; #-m means Message 顯示歷史日誌 git log #顯示歷史日誌的詳細資訊 git log --all --graph --decorate #以DAG方式顯示歷史日誌 查詢差異 git diff \u0026lt;filename\u0026gt; #顯示與上次提交時的差異 git diff \u0026lt;revision\u0026gt; \u0026lt;filename\u0026gt; #顯示某檔案與上次提交時的差異 分支 git checkout \u0026lt;revision\u0026gt; #更新HEAD與當前分支 git branch #顯示分支 git branch \u0026lt;name\u0026gt; #建立分支 git checkout -b \u0026lt;name\u0026gt; #建立分支並切換至該分支 同 git branch \u0026lt;name\u0026gt; ; git checkout \u0026lt;name\u0026gt; 合併 git merge \u0026lt;revision\u0026gt; #合併至當前分支 git mergetool #使用神奇工具處理合併衝突 git rebase #合併版本 git rebase -i HEAD~3 #修改歷史commit紀錄 遠端 git remote #列出遠端 git remote add \u0026lt;name\u0026gt; \u0026lt;url\u0026gt; #新增遠端 git push \u0026lt;remote\u0026gt; \u0026lt;local branch\u0026gt;:\u0026lt;remote branch\u0026gt; #將物件推送到遠端，並更新遠端參考 git branch --set-upstream-to=\u0026lt;remote\u0026gt;/\u0026lt;remote branch\u0026gt; #建立本地分支與遠端分支的關聯 git fetch #從遠端擷取物件/參考 git pull #更新本地端和遠端程式碼同步，同git fetch; git merge git clone #從遠端下載數據庫 回滾 git commit --amend #編輯提交的內容或資訊 git reset HEAD \u0026lt;file\u0026gt; #取消暫存檔案 git checkout -- \u0026lt;file\u0026gt; #回滾更改 進階 git clown --depth=1 #下載數據庫，但不下載歷史紀錄 git add -p #互動暫存 git blame #檢視最後修改某列的使用者 git stash #暫時移除工作目錄下的變更 git bisect #透過二分搜尋來搜尋歷史紀錄 .","title":"Git基本指令"},{"content":"手把手教學，教您如何建立Hugo靜態部落格，並部屬到GitHub! 前言 最近一直有想要架設一個部落格的想法，之前也使用過很多部落格的服務，到最後也都不了了之，此次下定決心，要寫些東西，所以在Google後，發現了Hugo這個Framework，可單純使用Markdown，來架設一個靜態網站，反正我也沒有想要搞一個動態網站，來放我的想法跟筆記，所以對我來說這是個不錯的方案，又可以免費使用GitHub的服務當Host，然後可以付點錢，讓私有庫也可以顯示您的網站。\n如果想要架設自己的部落格，又有預算考量，可以考慮使用Hugo來架設，自己的部落格。\n事前準備 因為本人還沒有摳摳買Macbook(還在英國找工作中)，所以本篇教學會全用Windows進行撰寫。\n首先我們需要Git這個來處理我們撰寫好的東西，並部屬到自己Git的公開庫，另外我們也需要一個軟體來輔助我們撰寫Markdown文件(例: Visual Studio Code 外加套件)。\nGit安裝與確認 首先我們先到Git的官網下載 Git 到 Windows. Download for Windows，依照自己版本位元下載，下載後，滑鼠左鍵雙擊，並按下\u0026quot;Next\u0026quot;到\u0026quot;Install\u0026quot;即可無腦安裝完畢。 安裝完畢後，我們使用快捷鍵\u0026quot;Windows + S\u0026quot;，並輸入\u0026quot;CMD\u0026quot;，來開啟命令提示字元。 開啟後輸入以下指令。\n git version 並會得到。\ngit version 2.xx.x.windows.x 當確認可以成功查詢安裝的版本號，即代表已成功安裝Git了。 再來我們需要安裝 Visual Studio Code 這是一個免費的IDE，另外我們需要另外安裝套件來處理Markdown。\nVisual Studio Code \u0026amp; Markdown Plugin安裝 一樣我們到 Visual Studio Code 的官網下載安裝檔，並進行安裝，一樣\u0026quot;Next\u0026quot;到\u0026quot;Install\u0026quot;。 安裝完畢並開啟，應該會看到以下的畫面。 然後我們到\u0026quot;View\u0026quot;下的\u0026quot;Extensions\u0026quot;(也可用Ctrl+Shift+X)去搜尋\u0026quot;Markdown\u0026quot;的 Extensions，找到\u0026quot;markdownlint\u0026quot;並安裝。 到目前為止，我們已經成功安裝了Git \u0026amp; Visual Studio Code w/ markdownlint Extension。\n接下來我們要繼續安裝 Hugo 和建立自己部落格的第一篇文章。\nHugo安裝與建立自己的部落格 在安裝Hugo前需要安裝chocolatey這個工具，這裡是直接使用\u0026quot;Individual\u0026quot;並透過開啟Administrative的PowerShell，並執行以下指令來安裝的。\nSet-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1')) 安裝完chocolatey這工具後，我們可以開始建立我們的部落格了。\n第一步: 安裝Hugo 我們依照官方快速開始進行安裝Hugo。因為我們這次只需要使用一般版本，所以依照手冊使用以下指令安裝。\nchoco install hugo -confirm 安裝完 Hugo 後，我們需要進行確認是否安裝成功，我們可以輸入以下指令。\nhugo version 第二步: 建立新網站 接下來我們要建立我們的新網站，因為我們會使用到 yml 格式需使用到以下指令。\nhugo new site \u0026lt;資料夾名稱\u0026gt; -f yml 出現以下畫面，即代表安裝成功了! 第三步: 添加Hugo主題 完成 Hugo 網站建立後，我們要為 Hugo 添加一些主題，讓您的部落格，不會過於單調，可至 Hugo Themes 挑選您喜歡的主題，我這邊會使用 PaperMod 這個主題作為示範。\n首先我們要先切換到剛剛新增的資料夾目錄底下，我們可以在 CMD 輸入\u0026quot;CD \u0026lt;資料夾名稱\u0026gt;\u0026quot;，由於我們剛剛示範的資料夾名稱為\u0026quot;its_demo_blog\u0026quot;，所以我們要輸入以下指令。\ncd \u0026lt;您的資料夾名稱\u0026gt; 再來我們需要先將這個資料夾，建立一個新的 Git 數據庫，我們要用到以下指令。\ngit init 然後您會看到此結果。 接下來，我們需要將我們剛剛選好的主題，透過 Git 指令加入到我們的資料夾跟目錄底下的\u0026quot;themes/PaperMod\u0026quot;，指令為下。\ngit submodule add https://github.com/adityatelange/hugo-PaperMod.git themes/PaperMod 執行完應該會顯示如下。 之後我們依照 PaperMod 的官方文件，進行修改我們的config.yml。\nbaseURL: \u0026quot;\u0026lt;username.github.io\u0026gt;\u0026quot; #等等GitHub庫的網址 title: its demo blog #網站標題 paginate: 5 # 預設語系配置 defaultContentLanguage: zh-tw # 主題配置 theme: PaperMod #這次使用到的主題 PaperMod enableRobotsTXT: true buildDrafts: false buildFuture: false buildExpired: false # GooleAnalytics服務，這個之後會再寫到如何設定 googleAnalytics: UA-123-45 # 連結配置 permalinks: posts: /:year/:month/:title/ minify: disableXML: true minifyOutput: true params: env: production # to enable google analytics, opengraph, twitter-cards and schema. title: its demo blog description: \u0026quot;its demo blog description\u0026quot; keywords: [Blog, Portfolio, PaperMod] author: Me # author: [\u0026quot;Me\u0026quot;, \u0026quot;You\u0026quot;] # multiple authors images: [\u0026quot;\u0026lt;link or path of image for opengraph, twitter-cards\u0026gt;\u0026quot;] DateFormat: \u0026quot;January 2, 2006\u0026quot; defaultTheme: auto # dark, light disableThemeToggle: false ShowReadingTime: true ShowShareButtons: true ShowPostNavLinks: true ShowBreadCrumbs: true ShowCodeCopyButtons: false disableSpecial1stPost: false disableScrollToTop: false comments: false hidemeta: false hideSummary: false showtoc: false tocopen: false assets: # disableHLJS: true # to disable highlight.js # disableFingerprinting: true favicon: \u0026quot;\u0026lt;link / abs url\u0026gt;\u0026quot; favicon16x16: \u0026quot;\u0026lt;link / abs url\u0026gt;\u0026quot; favicon32x32: \u0026quot;\u0026lt;link / abs url\u0026gt;\u0026quot; apple_touch_icon: \u0026quot;\u0026lt;link / abs url\u0026gt;\u0026quot; safari_pinned_tab: \u0026quot;\u0026lt;link / abs url\u0026gt;\u0026quot; label: text: \u0026quot;its demo blog\u0026quot; #icon: /apple-touch-icon.png iconHeight: 35 # profile-mode profileMode: enabled: false # needs to be explicitly set title: ExampleSite subtitle: \u0026quot;This is subtitle\u0026quot; imageUrl: \u0026quot;\u0026lt;img location\u0026gt;\u0026quot; imageWidth: 120 imageHeight: 120 imageTitle: my image buttons: - name: Posts url: posts - name: Tags url: tags # home-info mode 這是教學使用 Home-info 模式，預設也為這個 homeInfoParams: Title: \u0026quot;嗨 大家 \\U0001F44B\u0026quot; Content: 歡迎來到我的部落格。 # 可以放自己社交平台的連結 socialIcons: - name: twitter url: \u0026quot;https://twitter.com/\u0026quot; - name: stackoverflow url: \u0026quot;https://stackoverflow.com\u0026quot; - name: github url: \u0026quot;https://github.com/\u0026quot; analytics: google: SiteVerificationTag: \u0026quot;XYZabc\u0026quot; bing: SiteVerificationTag: \u0026quot;XYZabc\u0026quot; yandex: SiteVerificationTag: \u0026quot;XYZabc\u0026quot; cover: hidden: true # hide everywhere but not in structured data hiddenInList: true # hide on list pages and home hiddenInSingle: true # hide on single page # 別人可以建議您修改，但我會將這個功能關閉 #editPost: #URL: \u0026quot;https://github.com/\u0026lt;path_to_repo\u0026gt;/content\u0026quot; #Text: \u0026quot;Suggest Changes\u0026quot; # edit text #appendFilePath: true # to append file path to Edit link # for search # https://fusejs.io/api/options.html fuseOpts: isCaseSensitive: false shouldSort: true location: 0 distance: 1000 threshold: 0.4 minMatchCharLength: 0 keys: [\u0026quot;title\u0026quot;, \u0026quot;permalink\u0026quot;, \u0026quot;summary\u0026quot;, \u0026quot;content\u0026quot;] menu: main: - identifier: posts name: 文章 url: /posts/ weight: 1 - identifier: categories name: 分類 url: /categories/ weight: 2 - identifier: tags name: 標籤 url: /tags/ weight: 3 #- identifier: search # name: 搜尋 # url: search # weight: 4 #- identifier: about # name: 關於我 # url: about # weight: 5 # Read: https://github.com/adityatelange/hugo-PaperMod/wiki/FAQs#using-hugos-syntax-highlighter-chroma # pygmentsUseClasses: true # markup: # highlight: # # anchorLineNos: true # codeFences: true # guessSyntax: true # lineNos: true # style: monokai 修改好後，我們在根目錄底下打開 CMD 並輸入hugo server -D，並打開瀏覽器應該會看到下圖畫面。 第四步: 建立第一篇文章 再來我們要新建第一篇文章，我們需要用到以下指令，來建立第一篇文章，不免俗的當然要來一下 Hello World 啦!(老闆我會所有程式的Hello World? 這樣應徵比較有優勢嗎?)\nhugo new posts/hello_world.md 然後我們打開之前下載的Visual Studio Code，來編寫我們的第一篇文章吧!但開始進入到\u0026quot;content/posts/hello_world.md\u0026quot;應該會看到這個畫面。 我們修改為下。\n--- title: \u0026quot;Hello_World!\u0026quot; date: 2022-01-06T14:00:09Z draft: false # weight: 1 # aliases: [\u0026quot;/AirTag\u0026quot;] tags: [\u0026quot;第一篇文章\u0026quot;, \u0026quot;Hello World\u0026quot;] author: \u0026quot;Me\u0026quot; # author: [\u0026quot;Me\u0026quot;, \u0026quot;You\u0026quot;] # multiple authors showToc: false TocOpen: false hidemeta: false comments: true #description: \u0026quot;Hello World\u0026quot; #canonicalURL: \u0026quot;https://canonical.url/to/page\u0026quot; disableHLJS: true # to disable highlightjs disableShare: true disableHLJS: false hideSummary: false searchHidden: false ShowReadingTime: true ShowBreadCrumbs: true ShowPostNavLinks: true #cover: # image: \u0026quot;\u0026lt;image path/url\u0026gt;\u0026quot; # image path/url # alt: \u0026quot;\u0026lt;alt text\u0026gt;\u0026quot; # alt text # caption: \u0026quot;\u0026lt;text\u0026gt;\u0026quot; # display caption under cover # relative: true # when using page bundles set this to true # hidden: true # only hide on current single page #editPost: # URL: \u0026quot;https://github.com/\u0026lt;path_to_repo\u0026gt;/content\u0026quot; # Text: \u0026quot;Suggest Changes\u0026quot; # edit text # appendFilePath: false # to append file path to Edit link --- # Hello World!!! 這是我的第一篇文章啦! 第五步: 開啟Hugo伺服器 Hugo本地預覽網站功能，只需要在 Windows PowerShell 或 CMD 的部落格跟目錄底下打hugo server -D，即可在本地端預覽網站，初始網址:http://localhost:1313/。\n目前的網頁應該會呈現如下。 到目前步驟我們已經成功，建立出 Demo Blog 並發了第一篇文章，再來就是部屬到GitHub Pages了。\n第六步: 將Hugo部落格部屬到GitHub上 首先您需要有GitHub的帳號，沒有請左轉Google後申請。我們需要在GitHub建立一個存放網站用的庫，並命名為\u0026lt;username\u0026gt;.github.io username為您在GitHub上的使用者名稱。\n註: 因為這個是demo site所以名稱沒有按照上面規則走! 接下來我們需要在此庫底下建立另條分支gh-pages，這個分支是用來展示我們的部落格的，我們等下會使用到 GitHub Action的功能來進行內容自動化部屬，自動產生文件到gh-pages上。\n# 加入所有檔案 git add . # 新增commit內容 git commit -m \u0026quot;init its demo blog\u0026quot; # 新增main分支 git branch -M main # 新增遠端版本庫 git remote add origin https://github.com/\u0026lt;使用者名稱\u0026gt;/\u0026lt;使用者名稱\u0026gt;.github.io.git # 將部落格內容上傳到remote git push -u origin main # 新增gh-pages孤兒分支 git checkout --orphan gh-pages # 新增一個README.md檔 echo \u0026quot;gh-pages\u0026quot; \u0026gt; \u0026quot;README.md\u0026quot; # 加入所有檔案 git add . # 新增commit內容 git commit -m \u0026quot;init gh-pages branch\u0026quot; # 將分支內容上傳到remote git push -u origin gh-pages # 切換到main分支 git checkout main 跑完以上指令後，您的庫應該會有兩個分支 main \u0026amp; gh-pages。\n第七步: 設定GitHub Action來執行自動化部屬 我們需要在 main 分支上有做變更時，自動化部屬到 gh-pages。\n事前準備 我們要先到此頁，取得我們的Token，為了接下來的步驟。勾選的選項如下圖。 然後到頁面最下方，點選\u0026quot;Generate Token\u0026quot;，並將 Token 複製下來。 接下來，我們需要存放您 Hugo 部落格的 Token，路徑為: Repository \u0026gt; Settings \u0026gt; Secret \u0026gt; New repository secret，如下圖，Name 可以取您喜歡的，Value 需要設定為我們剛取得的 Token，然後按下\u0026quot;Add Secret\u0026quot;。 到這裡，目前的事前準備已告一段落，我們接下來要設定workflow。\nworkflow設定 我們會參考此文的workflow，來設定 GitHub Action。\n我們先來到 GitHub Action 頁面，並點選\u0026quot;set up a workflow yourself -\u0026gt;\u0026quot; 並將下方文件複製貼上，並做些修改。\nname: Build GH-Pages #這個可以改為您想要的名稱 on: push: paths-ignore: - 'images/**' - 'LICENSE' - 'README.md' branches: - main workflow_dispatch: # manual run jobs: deploy: runs-on: ubuntu-latest steps: - name: Git checkout uses: actions/checkout@v2 with: ref: main - name: Get Theme run: git submodule update --init --recursive - name: Update theme to Latest commit run: git submodule update --remote --merge - name: Setup hugo uses: peaceiris/actions-hugo@v2 with: hugo-version: 'latest' - name: Build run: hugo --buildDrafts --gc --verbose --minify - name: Deploy uses: peaceiris/actions-gh-pages@v3 with: github_token: ${{ secrets.HUGO_DEPLOY_TOKEN }} publish_dir: ./public commit_message: ${{ github.event.head_commit.message }} 修改好後，點選右上角的\u0026quot;Star commit\u0026quot;儲存完 workflow的設定文件，就可以在庫底下的\u0026quot;Action\u0026quot;頁面看到執行的狀態了，若執行狀態前面顯示綠色打勾即代表部屬成功! 第八步: 發佈部落格新文章 當您完成前面的步驟後，您需要到 Repository \u0026gt; Settings 底下的 Pages 將 Source 的分支改為 gh-pages 就完成了所有步驟了。\n以後要發表新文章只需要做:\n 使用Visual Studio Code打開部落格對應的資料夾。 在\u0026quot;content/posts\u0026quot;底下建立一個新 markdown 檔案，並撰寫您的內容。 再將整個專案檔案使用 git 上傳到您對應的庫。  結語 這算我的第一篇公開的筆記吧!也參考了網路上很多大大的文章，才有這個結果，希望可以清楚地幫助到想要自己建立部落格的人。\n參考資料 此文Demo Site\n此文Git庫\n如何將Hugo部落格部署到Github上?\n代码笔记\nVisual Studio Code\nGit\nChocolatey\nPaperMod Demo Site\nhugo-PaperMod\nHugo 貼身打造個人部落格\nGolden Hat\n","permalink":"https://AndrewWu29.github.io/zh-tw/2022/01/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8hugo%E5%BB%BA%E7%AB%8B%E8%87%AA%E5%B7%B1%E7%9A%84%E9%83%A8%E8%90%BD%E6%A0%BC/","summary":"手把手教學，教您如何建立Hugo靜態部落格，並部屬到GitHub! 前言 最近一直有想要架設一個部落格的想法，之前也使用過很多部落格的服務，到最後也都不了了之，此次下定決心，要寫些東西，所以在Google後，發現了Hugo這個Framework，可單純使用Markdown，來架設一個靜態網站，反正我也沒有想要搞一個動態網站，來放我的想法跟筆記，所以對我來說這是個不錯的方案，又可以免費使用GitHub的服務當Host，然後可以付點錢，讓私有庫也可以顯示您的網站。\n如果想要架設自己的部落格，又有預算考量，可以考慮使用Hugo來架設，自己的部落格。\n事前準備 因為本人還沒有摳摳買Macbook(還在英國找工作中)，所以本篇教學會全用Windows進行撰寫。\n首先我們需要Git這個來處理我們撰寫好的東西，並部屬到自己Git的公開庫，另外我們也需要一個軟體來輔助我們撰寫Markdown文件(例: Visual Studio Code 外加套件)。\nGit安裝與確認 首先我們先到Git的官網下載 Git 到 Windows. Download for Windows，依照自己版本位元下載，下載後，滑鼠左鍵雙擊，並按下\u0026quot;Next\u0026quot;到\u0026quot;Install\u0026quot;即可無腦安裝完畢。 安裝完畢後，我們使用快捷鍵\u0026quot;Windows + S\u0026quot;，並輸入\u0026quot;CMD\u0026quot;，來開啟命令提示字元。 開啟後輸入以下指令。\n git version 並會得到。\ngit version 2.xx.x.windows.x 當確認可以成功查詢安裝的版本號，即代表已成功安裝Git了。 再來我們需要安裝 Visual Studio Code 這是一個免費的IDE，另外我們需要另外安裝套件來處理Markdown。\nVisual Studio Code \u0026amp; Markdown Plugin安裝 一樣我們到 Visual Studio Code 的官網下載安裝檔，並進行安裝，一樣\u0026quot;Next\u0026quot;到\u0026quot;Install\u0026quot;。 安裝完畢並開啟，應該會看到以下的畫面。 然後我們到\u0026quot;View\u0026quot;下的\u0026quot;Extensions\u0026quot;(也可用Ctrl+Shift+X)去搜尋\u0026quot;Markdown\u0026quot;的 Extensions，找到\u0026quot;markdownlint\u0026quot;並安裝。 到目前為止，我們已經成功安裝了Git \u0026amp; Visual Studio Code w/ markdownlint Extension。\n接下來我們要繼續安裝 Hugo 和建立自己部落格的第一篇文章。\nHugo安裝與建立自己的部落格 在安裝Hugo前需要安裝chocolatey這個工具，這裡是直接使用\u0026quot;Individual\u0026quot;並透過開啟Administrative的PowerShell，並執行以下指令來安裝的。\nSet-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.","title":"如何使用Hugo建立自己的部落格?"},{"content":"前言 因緣際會下，我使用交友軟體，認識了我英國男友，也開啟了將近兩年多的遠距離戀愛。我們是在2019年的下半年開始在交友軟體上聊天的，後來我們彼此交換\u0026quot;Whatsapp\u0026quot;並轉到\u0026quot;Whatsapp\u0026quot;繼續聊了三個多月後，我在一個是當時機下，詢問了我們彼此的關係為何，他回我男朋友，所以可能算是我先問他可不可以當我男朋友吧!\n之後他就決定要在2020年的台灣中秋節連假來台灣找我，並嘗試一起生活看看，但沒想到在2020年初，卻爆出了新冠肺炎，這個世界也因新冠肺炎，改變了許多，也影響了很多人可以回鄉看看自己的家人朋友，也讓遠距離戀愛的情侶，無法透過一般旅遊簽證，去彼此的國家城市相遇。\n起初我們想說這波疫情，可能會在年中或年底，就會慢慢恢復正常，可能只需要時間往後延，這樣子，但後來沒想到2020年三月起，開始陸陸續續傳出歐洲美洲地區開始傳播的消息，而英國地區也有相對應的措施，加上台灣這邊的邊境管制，導致不得不將航班先行取消。\n雖然不能如期在台灣相遇，我們還是抱持的希望，這一切都會慢慢變好的。我們依舊每天透過通訊軟體聊天，因台灣相對安全，還可以正常外出吃飯工作，但相對歐洲地區陸陸續續開始有封城的措施，我也時常傳傳，台灣這邊戶外的照片，替他打打氣，並祈求疫情早日退散。\n後來就在某日，男友聊到了，打工度假的選項，加上那時我在工作上，也遇到了一些瓶頸，加上我也28歲了，網路上查了許多英國打工度假抽籤的訊息，也發現不太好抽，還有一待就是兩年，跟許多國家不同，想說要不就抽抽看，如果抽中了就可以透過這個簽證，正常在英國居住跟工作。\n一開始，有點擔心，如果當日發信申請抽籤時，可能會猶豫導致錯過時機，所以想說要不就設定Gmail的自動寄信功能，這樣我也不會因為忘記或猶豫而錯過時機，就在申請抽籤日的數日後，我收到了中簽的信件，我也將這訊息，即時告訴我男友，他也很興奮，我成功抽到簽。\n因為我在台灣還有工作，想說再多工作一會，存些錢，免得到英國後，一下就花光積蓄，所以就先將日期，設定在2021年的下半年。\n心態調整 對我來說台灣是我的舒適圈，或需這工作讓我壓力很大，有時也不知道要如何處理跟面對，但在主管同事還有朋友的幫助下，讓我後期心理狀態慢慢回復到正常。\n一開始也有顧慮到這份工作的薪水，在台灣來說，已經可以算中位數了，但工作上的瑣事，也有點讓我力不從心，可能是交友圈比較狹隘，或是不太擅長將內心的事跟他人分享或討論。\n到後期總算開口跟主管提出離職，並告知要去英國打工度假，主管也大力支持，也說道如果要幫忙的話，可以跟他說，讓我非常感激這段主僱之情!畢竟也跟了這主管五年了，如果當初面試沒上，可能還會繼續待在好市多了。 所以離職對我來說沒有太大的阻礙，一切都挺順利的。\n接下來是朋友，朋友一開始，還滿擔心我一個要飛去英國，見我還沒見過的男友，一來是疫情下，發生什麼事，他們也無法第一時間通電話或幫忙，二來是怕我被騙，不過他們還是挺希望，我幸福的，所以一直來，都當我的聆聽者，並給我適當的建議等···也挺感謝他們的，不費我大學時，有幫他們做作業(好像離題了~)。\n至於家人或親戚，起初有些堂哥堂姊，覺得疫情當下，還是不要出國打工度假，但我這個人，有時做起決定後，任何人也無法改變。家人到是沒有說什麼，我只有跟我姊講我要去見我還沒見過的男友，我姊當下只有驚訝，原本以為我們已經在台灣見過面了，還說為啥不是選日本，而是英國(我心想可能是你想要我買日本東西寄回來吧!)，另外我媽到很冷靜地說，你要去英國喔!要去多久，我回兩年，然後得到，這麼久喔!(但內心感受得到，多少有點不捨，孰不知兒子是要去找男友Happy?)。\n因為離職是在九月初，但實際到達英國是在十月初，這段空檔，除了跟朋友敘敘舊、吃吃飯、聊聊天，準備出國要用到的東西文件，心情也著實輕鬆了不少，可能之前給自己太多，不必要的壓力了，甚至一度還懼怕跟人說話，不過好家在Telegram朋友，約騎車吃飯，也對我心理狀態幫助了不少。\n未來規劃 可以在英國順利找到老本行(軟體測試工程師)的工作，並在工作之餘加強英文，跟認識新的當地朋友。之後找到一份工作願意提供簽證，讓我可以用工作簽繼續留在這裡。或是換成伴侶簽?\n目前狀況 目前找了將近三個月，還沒有得到任何一個工作的Offer，僅希望在三十歲生日前，可以得到一份工作的Offer，不然我可能要思考一下，是不是做些服務業相關的工作了。\n","permalink":"https://AndrewWu29.github.io/zh-tw/2022/01/%E7%82%BA%E4%BD%95%E6%88%91%E8%A6%81%E4%BE%86%E8%8B%B1%E5%9C%8B/","summary":"前言 因緣際會下，我使用交友軟體，認識了我英國男友，也開啟了將近兩年多的遠距離戀愛。我們是在2019年的下半年開始在交友軟體上聊天的，後來我們彼此交換\u0026quot;Whatsapp\u0026quot;並轉到\u0026quot;Whatsapp\u0026quot;繼續聊了三個多月後，我在一個是當時機下，詢問了我們彼此的關係為何，他回我男朋友，所以可能算是我先問他可不可以當我男朋友吧!\n之後他就決定要在2020年的台灣中秋節連假來台灣找我，並嘗試一起生活看看，但沒想到在2020年初，卻爆出了新冠肺炎，這個世界也因新冠肺炎，改變了許多，也影響了很多人可以回鄉看看自己的家人朋友，也讓遠距離戀愛的情侶，無法透過一般旅遊簽證，去彼此的國家城市相遇。\n起初我們想說這波疫情，可能會在年中或年底，就會慢慢恢復正常，可能只需要時間往後延，這樣子，但後來沒想到2020年三月起，開始陸陸續續傳出歐洲美洲地區開始傳播的消息，而英國地區也有相對應的措施，加上台灣這邊的邊境管制，導致不得不將航班先行取消。\n雖然不能如期在台灣相遇，我們還是抱持的希望，這一切都會慢慢變好的。我們依舊每天透過通訊軟體聊天，因台灣相對安全，還可以正常外出吃飯工作，但相對歐洲地區陸陸續續開始有封城的措施，我也時常傳傳，台灣這邊戶外的照片，替他打打氣，並祈求疫情早日退散。\n後來就在某日，男友聊到了，打工度假的選項，加上那時我在工作上，也遇到了一些瓶頸，加上我也28歲了，網路上查了許多英國打工度假抽籤的訊息，也發現不太好抽，還有一待就是兩年，跟許多國家不同，想說要不就抽抽看，如果抽中了就可以透過這個簽證，正常在英國居住跟工作。\n一開始，有點擔心，如果當日發信申請抽籤時，可能會猶豫導致錯過時機，所以想說要不就設定Gmail的自動寄信功能，這樣我也不會因為忘記或猶豫而錯過時機，就在申請抽籤日的數日後，我收到了中簽的信件，我也將這訊息，即時告訴我男友，他也很興奮，我成功抽到簽。\n因為我在台灣還有工作，想說再多工作一會，存些錢，免得到英國後，一下就花光積蓄，所以就先將日期，設定在2021年的下半年。\n心態調整 對我來說台灣是我的舒適圈，或需這工作讓我壓力很大，有時也不知道要如何處理跟面對，但在主管同事還有朋友的幫助下，讓我後期心理狀態慢慢回復到正常。\n一開始也有顧慮到這份工作的薪水，在台灣來說，已經可以算中位數了，但工作上的瑣事，也有點讓我力不從心，可能是交友圈比較狹隘，或是不太擅長將內心的事跟他人分享或討論。\n到後期總算開口跟主管提出離職，並告知要去英國打工度假，主管也大力支持，也說道如果要幫忙的話，可以跟他說，讓我非常感激這段主僱之情!畢竟也跟了這主管五年了，如果當初面試沒上，可能還會繼續待在好市多了。 所以離職對我來說沒有太大的阻礙，一切都挺順利的。\n接下來是朋友，朋友一開始，還滿擔心我一個要飛去英國，見我還沒見過的男友，一來是疫情下，發生什麼事，他們也無法第一時間通電話或幫忙，二來是怕我被騙，不過他們還是挺希望，我幸福的，所以一直來，都當我的聆聽者，並給我適當的建議等···也挺感謝他們的，不費我大學時，有幫他們做作業(好像離題了~)。\n至於家人或親戚，起初有些堂哥堂姊，覺得疫情當下，還是不要出國打工度假，但我這個人，有時做起決定後，任何人也無法改變。家人到是沒有說什麼，我只有跟我姊講我要去見我還沒見過的男友，我姊當下只有驚訝，原本以為我們已經在台灣見過面了，還說為啥不是選日本，而是英國(我心想可能是你想要我買日本東西寄回來吧!)，另外我媽到很冷靜地說，你要去英國喔!要去多久，我回兩年，然後得到，這麼久喔!(但內心感受得到，多少有點不捨，孰不知兒子是要去找男友Happy?)。\n因為離職是在九月初，但實際到達英國是在十月初，這段空檔，除了跟朋友敘敘舊、吃吃飯、聊聊天，準備出國要用到的東西文件，心情也著實輕鬆了不少，可能之前給自己太多，不必要的壓力了，甚至一度還懼怕跟人說話，不過好家在Telegram朋友，約騎車吃飯，也對我心理狀態幫助了不少。\n未來規劃 可以在英國順利找到老本行(軟體測試工程師)的工作，並在工作之餘加強英文，跟認識新的當地朋友。之後找到一份工作願意提供簽證，讓我可以用工作簽繼續留在這裡。或是換成伴侶簽?\n目前狀況 目前找了將近三個月，還沒有得到任何一個工作的Offer，僅希望在三十歲生日前，可以得到一份工作的Offer，不然我可能要思考一下，是不是做些服務業相關的工作了。","title":"為何我要來英國!"},{"content":"前言 自從這個產品發表後，看完官方的Youtube影片，和其他科技Youtuber的開箱解說後，加上本人還沒有真無線抗噪耳機，就一直想要購買這個產品，所以最後就在待機飛往英國找我男友時，在松山機場的免稅店購買了。\n在這篇文章簡單分享我的使用心得。\n外觀包裝 原本是想要購買銀色的款式，由於免稅店沒有銀色，加上之前已有黑色WH-1000XM3，考慮了一下，想說黑色就比較耐髒，最後就選擇黑色了。\n產品外觀 這次選擇的黑色款式，在麥克風的地方，使用了銅金配色，讓整體感覺有蒸氣龐克風，彷彿會從此處冒出蒸氣來。\n這次WF-1000XM4重新設計耳機內部配置和充電盒，耳機單體的重量也來到了7.3g，耳機整體較前代小於10%，後者充電盒也縮小了40%，但依舊可提供額外16小時的行動充電。 另外搭配新開發的噪音隔離耳塞，採用聚氨酯泡棉材質與矽膠搭配，以增加耳式耳機的耳塞與耳道之間的接觸面積，並減少隔音的間隙，已達到降低噪音，跟提供更穩固的貼合體驗。\n產品包裝 此次的產品包裝，可以說Sony也在這部份，下了不少功夫，不只首次沒有使用塑膠包裝，整體包裝，秉持「回收重製」理念。\n除了標籤外，99%的紙材包裝均採用Sony開發的Original Blended Material，並落實永續設計，以對這個環境付出一些心力。\n雖然單純從包裝上，看不出這產品的奢華昂貴感，可能會降低買家購買的慾望，可說Sony這次在包材做出一個重大決定。\n產品規格  防水規格 (IPX4) 耳機類型 (真無線) 藍牙版本 (BT 5.2) 續航時間 音樂連續播放(ANC 8/hr, w/o ANC 12/hr);連續通話(ANC 5.5/hr, w/o ANC 6/hr) 充電時間 (約1.5/hr) 產品重量 (約41克) 降噪功能 (環境聲模式/快速注意模式) 顏色選擇 (黑色/銀色)  產品售價 台灣零售價為$7,990元。\n 台灣索尼。  使用情境 個人使用的情境，單純為通勤／抗噪／運動／短暫交談。\n因為之前就有使用過WH-1000XM3，所以對於Sony處理抗噪能力，非常有信心，這次也不失所望，在通勤時，使用Sony自家的Headphones APP，可以做到依照GPS位址，判斷用戶所在的環境去自動切換設定，以免完全抗除人聲，讓通勤時也不會因錯過到站提示音，而錯過下車的時機。\n這次耳機防水能力來到了(IPX4)，這點可讓用戶配戴運動時，不用怕汗水，浸濕您的耳機，就算運動後，稍微在水龍頭底下輕微沖洗，也不用擔心。 當使用在吵雜的環境，想要隔絕外界環境音時，此時可將抗噪開到最強，幫助隔絕外界噪音，以增加自己的工作效率。\n另外如果在配戴耳機時，需要與人短暫交談時，可以透過APP開啟Speak-to-Chat功能，當辨識您在跟人說話時，耳機會自動暫停播放，並關閉降噪，開啟麥克風，方便您不用脫下耳機，就可以跟人交談，有時我在閱讀時，男友在詢問我是否要喝杯茶，這時這個功能就超好用的啦! a black tea please hah.\n總結 這次WF-1000XM4，對我來說對得起這個價格，雖然還是貴貴的。\n整體使用上音質/舒適性/方便性，依舊符合Sony家的特性，加上我又只聽流行樂跟幫助專注的音樂，已經很夠用了，雖然在蘋果生態系下，無法像Airpods Pro一樣近乎無感切換設備，但也只是多一道步驟去藍牙設定頁面，點選連接而以，對我來說不是太大的痛處。\n不過在Android生態圈，就不一樣了，不只可以用更好的傳輸品質，更方便的切換Android的設備。\n對我來說唯一的小缺點，可能就是當你手油油的話，摸充電盒或耳機會留下挺明顯的痕跡，其他就還好。\n","permalink":"https://AndrewWu29.github.io/zh-tw/2022/01/sony-wf-1000xm4-%E7%B0%A1%E6%98%93%E9%96%8B%E7%AE%B1/","summary":"前言 自從這個產品發表後，看完官方的Youtube影片，和其他科技Youtuber的開箱解說後，加上本人還沒有真無線抗噪耳機，就一直想要購買這個產品，所以最後就在待機飛往英國找我男友時，在松山機場的免稅店購買了。\n在這篇文章簡單分享我的使用心得。\n外觀包裝 原本是想要購買銀色的款式，由於免稅店沒有銀色，加上之前已有黑色WH-1000XM3，考慮了一下，想說黑色就比較耐髒，最後就選擇黑色了。\n產品外觀 這次選擇的黑色款式，在麥克風的地方，使用了銅金配色，讓整體感覺有蒸氣龐克風，彷彿會從此處冒出蒸氣來。\n這次WF-1000XM4重新設計耳機內部配置和充電盒，耳機單體的重量也來到了7.3g，耳機整體較前代小於10%，後者充電盒也縮小了40%，但依舊可提供額外16小時的行動充電。 另外搭配新開發的噪音隔離耳塞，採用聚氨酯泡棉材質與矽膠搭配，以增加耳式耳機的耳塞與耳道之間的接觸面積，並減少隔音的間隙，已達到降低噪音，跟提供更穩固的貼合體驗。\n產品包裝 此次的產品包裝，可以說Sony也在這部份，下了不少功夫，不只首次沒有使用塑膠包裝，整體包裝，秉持「回收重製」理念。\n除了標籤外，99%的紙材包裝均採用Sony開發的Original Blended Material，並落實永續設計，以對這個環境付出一些心力。\n雖然單純從包裝上，看不出這產品的奢華昂貴感，可能會降低買家購買的慾望，可說Sony這次在包材做出一個重大決定。\n產品規格  防水規格 (IPX4) 耳機類型 (真無線) 藍牙版本 (BT 5.2) 續航時間 音樂連續播放(ANC 8/hr, w/o ANC 12/hr);連續通話(ANC 5.5/hr, w/o ANC 6/hr) 充電時間 (約1.5/hr) 產品重量 (約41克) 降噪功能 (環境聲模式/快速注意模式) 顏色選擇 (黑色/銀色)  產品售價 台灣零售價為$7,990元。\n 台灣索尼。  使用情境 個人使用的情境，單純為通勤／抗噪／運動／短暫交談。\n因為之前就有使用過WH-1000XM3，所以對於Sony處理抗噪能力，非常有信心，這次也不失所望，在通勤時，使用Sony自家的Headphones APP，可以做到依照GPS位址，判斷用戶所在的環境去自動切換設定，以免完全抗除人聲，讓通勤時也不會因錯過到站提示音，而錯過下車的時機。\n這次耳機防水能力來到了(IPX4)，這點可讓用戶配戴運動時，不用怕汗水，浸濕您的耳機，就算運動後，稍微在水龍頭底下輕微沖洗，也不用擔心。 當使用在吵雜的環境，想要隔絕外界環境音時，此時可將抗噪開到最強，幫助隔絕外界噪音，以增加自己的工作效率。\n另外如果在配戴耳機時，需要與人短暫交談時，可以透過APP開啟Speak-to-Chat功能，當辨識您在跟人說話時，耳機會自動暫停播放，並關閉降噪，開啟麥克風，方便您不用脫下耳機，就可以跟人交談，有時我在閱讀時，男友在詢問我是否要喝杯茶，這時這個功能就超好用的啦! a black tea please hah.\n總結 這次WF-1000XM4，對我來說對得起這個價格，雖然還是貴貴的。\n整體使用上音質/舒適性/方便性，依舊符合Sony家的特性，加上我又只聽流行樂跟幫助專注的音樂，已經很夠用了，雖然在蘋果生態系下，無法像Airpods Pro一樣近乎無感切換設備，但也只是多一道步驟去藍牙設定頁面，點選連接而以，對我來說不是太大的痛處。\n不過在Android生態圈，就不一樣了，不只可以用更好的傳輸品質，更方便的切換Android的設備。\n對我來說唯一的小缺點，可能就是當你手油油的話，摸充電盒或耳機會留下挺明顯的痕跡，其他就還好。","title":"SONY WF-1000XM4 簡易開箱"},{"content":"哈囉 2022: 今天是2022年的第一天，哈彭登 英國 天氣晴多雲。\n自從新冠肺炎擴散到全球，近兩年來，這個世界發生了很大的變化，很多事情都跟疫情擴散前不一樣了，但昨天看到許多國家和城市依舊舉辦，跨年活動跟施放煙火，讓我覺得這個世界又慢慢恢復生氣了。\n我希望這是新冠肺炎的最後階段了，讓這個世界可以慢慢地恢復正常，人們不必再擔心這病毒，可以與家人或朋友見面，也可以正常地去看看這個世界，並對自己的未來有夢想。\n今年希望我可以在英國，順利的找到軟體測試工程師的工作，有時間跟男朋友，出去旅行、出去吃飯、精進英文。\n最後祝福自己和家人朋友身體健康、平安順遂，早日時間自我的目標。\n新年快樂 兩千零二十二年!!! ","permalink":"https://AndrewWu29.github.io/zh-tw/2022/01/%E5%93%88%E5%9B%89-2022/","summary":"哈囉 2022: 今天是2022年的第一天，哈彭登 英國 天氣晴多雲。\n自從新冠肺炎擴散到全球，近兩年來，這個世界發生了很大的變化，很多事情都跟疫情擴散前不一樣了，但昨天看到許多國家和城市依舊舉辦，跨年活動跟施放煙火，讓我覺得這個世界又慢慢恢復生氣了。\n我希望這是新冠肺炎的最後階段了，讓這個世界可以慢慢地恢復正常，人們不必再擔心這病毒，可以與家人或朋友見面，也可以正常地去看看這個世界，並對自己的未來有夢想。\n今年希望我可以在英國，順利的找到軟體測試工程師的工作，有時間跟男朋友，出去旅行、出去吃飯、精進英文。\n最後祝福自己和家人朋友身體健康、平安順遂，早日時間自我的目標。\n新年快樂 兩千零二十二年!!! ","title":"哈囉 2022!"},{"content":"嗨 大家! 歡迎來到我的部落格，我是Andrew Wu。\n我會在這分享，我的想法、科技、日記、開箱、旅行、美食，及任何我想要分享的內容，呵呵。\n關於我 台灣人，來自台北台灣，現居英國哈彭登。\n如果想聯繫我。\n中英文支持 為了精進我的英文，這個部落格將會支持中英文顯示。\n點選，頁面上方，部落格名稱右邊的\u0026quot;En\u0026quot;或\u0026quot;Zh-Tw\u0026quot;來切換語系設定。\n這個部落格會盡量以英文為主，中文為輔。\n敬請關注。\n感謝您的閱讀。 ","permalink":"https://AndrewWu29.github.io/zh-tw/about/","summary":"嗨 大家! 歡迎來到我的部落格，我是Andrew Wu。\n我會在這分享，我的想法、科技、日記、開箱、旅行、美食，及任何我想要分享的內容，呵呵。\n關於我 台灣人，來自台北台灣，現居英國哈彭登。\n如果想聯繫我。\n中英文支持 為了精進我的英文，這個部落格將會支持中英文顯示。\n點選，頁面上方，部落格名稱右邊的\u0026quot;En\u0026quot;或\u0026quot;Zh-Tw\u0026quot;來切換語系設定。\n這個部落格會盡量以英文為主，中文為輔。\n敬請關注。\n感謝您的閱讀。 ","title":"關於我"},{"content":"前言 因為前幾年，去日本旅遊時遺失背包，每次想起來都讓我好心痛喔！打死我以後都不放在電車架子上，已讓我開始搜尋這類型的產品。 其實早在Airtag誕世前，市面上已經有這類型的產品，只是基於產品用戶數量，且需要額外安裝應用程式，透過同樣使用該產品的用戶，且已有安裝應用程式並開啟藍牙及權限，才可當行動裝置，經過遺失者的物品時，才能更新遺失物的所在地，並通知遺失物的所有人。\n但這樣的產品通常會基於以下幾點，導致先天上的劣勢：\n 取決於使用該產品公司的社群大小，且不同家產品公司的裝置，不互相溝通。 需要額外安裝第三方的應用程式。 使用環境被侷限，因不同地方，可能使用這類型產品的用戶數不同，導致侷限使用環境（變成通常只在居家內使用，戶外遺失後，可能會沒有同樣使用同產品的用戶經過，導致當物品從最後遺失地被移動過，可能就找不到了）。  而蘋果Airtag基於以下幾個條件，直接將相關競品廠商壓在地上摩擦：\n 基於Apple產品的用戶數量（Mac, iPhone, iPad, Apple Watch）。 透過Find My網絡尋找。 不需額外安裝應用程式。 U1晶片的加持（使用Ultra-Wideband技術）。 非蘋果產品，可透過NFC感應Airtag，即可取得遺失者的聯絡資訊。  也因蘋果基於龐大的裝置用戶數，無須安裝額外的應用程式，每個裝置只需開啟Find My和藍牙及權限，即可當有經過遺失的Airtag時，透過藍牙溝通，並通知遺失者最新的所在地，或透過感應來得知遺失者的聯絡資訊，方可聯絡遺失者，並歸還遺失物。\n基本操作 沒有U1晶片的操作： 可以先開啟尋找APP取得AirTag的最後更新的所在地點，到達該地點時，只能播放AirTag的警示音來尋找。\n有U1晶片的操作： 可以先開啟尋找APP取得AirTag的最後更新的所在地點，到達該地點時，且在AirTag藍牙範圍內時，可以使用精確尋找功能來尋找。\n限制 目前支持U1晶片的設備： iPhone: iPhone 11 models, iPhone 12 models and iPhone 13 models.\n目前不允許使用Ultra Wideband的國家或地區：\n Armenia 亞美尼亞 🇦🇲 Azerbaijan 阿塞拜疆 🇦🇿 Belarus 白俄羅斯 🇧🇾 Indonesia 印度尼西亞 🇮🇩 Kazakhstan 哈薩克斯坦 🇰🇿 Kyrgyzstan 吉爾吉斯斯坦 🇰🇬 Nepal 尼泊爾 🇳🇵 Russia 俄羅斯 🇷🇺 Tajikistan 塔吉克斯坦 🇹🇯 Turkmenistan 土庫曼斯坦 🇹🇲 Ukraine 烏克蘭 🇺🇦 Uzbekistan 烏茲別克斯坦 🇺🇿  結論 優點：\n 依蘋果「尋找」的龐大的用戶數量，提升找回遺失物的機率。 可使用支援Ultra Wideband的蘋果設備，使用「精確尋找」更精準的找尋到您的遺失物。 整合至Find My讓您清楚的掌握自己Item的最後所在地。 開啟「遺失模式」後，當其他蘋果設備，偵測到遺失的AirTag時，會自動通知，遺失物的所有人。 讓其他非蘋果生態的用戶，透過NFC感應AirTag來得知遺失物所有人的聯絡資訊。 缺點： 在某些國家或地區可能無法正常使用Airtag。 可能被有心人事，當作追蹤器，來跟蹤他人。 需要使用符合規定的鈕扣電池，否則可能導致AirTag損壞。 沒有支援U1晶片的蘋果設備，可能在吵雜的環境，不易尋找到遺失物。 設備的警示音太小聲。  綜合以上優缺點，個人認為AirTag，是一個值得購買的產品（前提您是用蘋果的產品喔！），適合時常遺忘東西的人購買，雖然不一定能找回遺失物，但大大提升尋回遺失物的機率呀！\n","permalink":"https://AndrewWu29.github.io/zh-tw/2021/12/airtag%E9%96%8B%E7%AE%B1%E5%BF%83%E5%BE%97/","summary":"前言 因為前幾年，去日本旅遊時遺失背包，每次想起來都讓我好心痛喔！打死我以後都不放在電車架子上，已讓我開始搜尋這類型的產品。 其實早在Airtag誕世前，市面上已經有這類型的產品，只是基於產品用戶數量，且需要額外安裝應用程式，透過同樣使用該產品的用戶，且已有安裝應用程式並開啟藍牙及權限，才可當行動裝置，經過遺失者的物品時，才能更新遺失物的所在地，並通知遺失物的所有人。\n但這樣的產品通常會基於以下幾點，導致先天上的劣勢：\n 取決於使用該產品公司的社群大小，且不同家產品公司的裝置，不互相溝通。 需要額外安裝第三方的應用程式。 使用環境被侷限，因不同地方，可能使用這類型產品的用戶數不同，導致侷限使用環境（變成通常只在居家內使用，戶外遺失後，可能會沒有同樣使用同產品的用戶經過，導致當物品從最後遺失地被移動過，可能就找不到了）。  而蘋果Airtag基於以下幾個條件，直接將相關競品廠商壓在地上摩擦：\n 基於Apple產品的用戶數量（Mac, iPhone, iPad, Apple Watch）。 透過Find My網絡尋找。 不需額外安裝應用程式。 U1晶片的加持（使用Ultra-Wideband技術）。 非蘋果產品，可透過NFC感應Airtag，即可取得遺失者的聯絡資訊。  也因蘋果基於龐大的裝置用戶數，無須安裝額外的應用程式，每個裝置只需開啟Find My和藍牙及權限，即可當有經過遺失的Airtag時，透過藍牙溝通，並通知遺失者最新的所在地，或透過感應來得知遺失者的聯絡資訊，方可聯絡遺失者，並歸還遺失物。\n基本操作 沒有U1晶片的操作： 可以先開啟尋找APP取得AirTag的最後更新的所在地點，到達該地點時，只能播放AirTag的警示音來尋找。\n有U1晶片的操作： 可以先開啟尋找APP取得AirTag的最後更新的所在地點，到達該地點時，且在AirTag藍牙範圍內時，可以使用精確尋找功能來尋找。\n限制 目前支持U1晶片的設備： iPhone: iPhone 11 models, iPhone 12 models and iPhone 13 models.\n目前不允許使用Ultra Wideband的國家或地區：\n Armenia 亞美尼亞 🇦🇲 Azerbaijan 阿塞拜疆 🇦🇿 Belarus 白俄羅斯 🇧🇾 Indonesia 印度尼西亞 🇮🇩 Kazakhstan 哈薩克斯坦 🇰🇿 Kyrgyzstan 吉爾吉斯斯坦 🇰🇬 Nepal 尼泊爾 🇳🇵 Russia 俄羅斯 🇷🇺 Tajikistan 塔吉克斯坦 🇹🇯 Turkmenistan 土庫曼斯坦 🇹🇲 Ukraine 烏克蘭 🇺🇦 Uzbekistan 烏茲別克斯坦 🇺🇿  結論 優點：","title":"AirTag開箱心得"}]