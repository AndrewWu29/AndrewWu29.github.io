<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>指令 on Andrew&#39;s Blog</title>
    <link>https://andrewu.page/zh-tw/tags/%E6%8C%87%E4%BB%A4/</link>
    <description>Recent content in 指令 on Andrew&#39;s Blog</description>
    <image>
      <title>Andrew&#39;s Blog</title>
      <url>https://andrewu.page/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://andrewu.page/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 12 Jan 2022 15:30:00 +0000</lastBuildDate><atom:link href="https://andrewu.page/zh-tw/tags/%E6%8C%87%E4%BB%A4/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Git基本指令</title>
      <link>https://andrewu.page/zh-tw/2022/01/git%E5%9F%BA%E6%9C%AC%E6%8C%87%E4%BB%A4/</link>
      <pubDate>Wed, 12 Jan 2022 15:30:00 +0000</pubDate>
      
      <guid>https://andrewu.page/zh-tw/2022/01/git%E5%9F%BA%E6%9C%AC%E6%8C%87%E4%BB%A4/</guid>
      <description>確認Git是否安裝成功 git --version 設定Git使用者名稱跟信箱 git config --global user.name &amp;#34;Andrew_Wu&amp;#34; git config --global user.email &amp;#34;user@gmail.com&amp;#34; 確認輸入的資料是否正確 git config --list 獲取幫助 git help &amp;lt;command&amp;gt; 建立新的數據庫 git init 顯示當前數據庫狀態 git status 新增檔案到暫存區域 git add &amp;lt;filename&amp;gt; git add . #將工作目錄內所有檔案建立索引 建立新提交 git commit git commit -m &amp;#34;提交訊息&amp;#34; #-m means Message 顯示歷史日誌 git log #顯示歷史日誌的詳細資訊 git log --all --graph --decorate #以DAG方式顯示歷史日誌 查詢差異 git diff &amp;lt;filename&amp;gt; #顯示與上次提交時的差異 git diff &amp;lt;revision&amp;gt; &amp;lt;filename&amp;gt; #顯示某檔案與上次提交時的差異 分支 git checkout &amp;lt;revision&amp;gt; #更新HEAD與當前分支 git branch #顯示分支 git branch &amp;lt;name&amp;gt; #建立分支 git checkout -b &amp;lt;name&amp;gt; #建立分支並切換至該分支 同 git branch &amp;lt;name&amp;gt; ; git checkout &amp;lt;name&amp;gt; 合併 git merge &amp;lt;revision&amp;gt; #合併至當前分支 git mergetool #使用神奇工具處理合併衝突 git rebase #合併版本 git rebase -i HEAD~3 #修改歷史commit紀錄 遠端 git remote #列出遠端 git remote add &amp;lt;name&amp;gt; &amp;lt;url&amp;gt; #新增遠端 git push &amp;lt;remote&amp;gt; &amp;lt;local branch&amp;gt;:&amp;lt;remote branch&amp;gt; #將物件推送到遠端，並更新遠端參考 git branch --set-upstream-to=&amp;lt;remote&amp;gt;/&amp;lt;remote branch&amp;gt; #建立本地分支與遠端分支的關聯 git fetch #從遠端擷取物件/參考 git pull #更新本地端和遠端程式碼同步，同git fetch; git merge git clone #從遠端下載數據庫 回滾 git commit --amend #編輯提交的內容或資訊 git reset HEAD &amp;lt;file&amp;gt; #取消暫存檔案 git checkout -- &amp;lt;file&amp;gt; #回滾更改 進階 git clown --depth=1 #下載數據庫，但不下載歷史紀錄 git add -p #互動暫存 git blame #檢視最後修改某列的使用者 git stash #暫時移除工作目錄下的變更 git bisect #透過二分搜尋來搜尋歷史紀錄 .</description>
      <content:encoded><![CDATA[<h2 id="確認git是否安裝成功">確認Git是否安裝成功</h2>
<pre tabindex="0"><code>git --version
</code></pre><h2 id="設定git使用者名稱跟信箱">設定Git使用者名稱跟信箱</h2>
<pre tabindex="0"><code>git config --global user.name &#34;Andrew_Wu&#34;
git config --global user.email &#34;user@gmail.com&#34;
</code></pre><h3 id="確認輸入的資料是否正確">確認輸入的資料是否正確</h3>
<pre tabindex="0"><code>git config --list
</code></pre><h2 id="獲取幫助">獲取幫助</h2>
<pre tabindex="0"><code>git help &lt;command&gt;
</code></pre><h2 id="建立新的數據庫">建立新的數據庫</h2>
<pre tabindex="0"><code>git init
</code></pre><h2 id="顯示當前數據庫狀態">顯示當前數據庫狀態</h2>
<pre tabindex="0"><code>git status
</code></pre><h2 id="新增檔案到暫存區域">新增檔案到暫存區域</h2>
<pre tabindex="0"><code>git add &lt;filename&gt;
git add . #將工作目錄內所有檔案建立索引
</code></pre><h2 id="建立新提交">建立新提交</h2>
<pre tabindex="0"><code>git commit
git commit -m &#34;提交訊息&#34; #-m means Message
</code></pre><h2 id="顯示歷史日誌">顯示歷史日誌</h2>
<pre tabindex="0"><code>git log #顯示歷史日誌的詳細資訊
git log --all --graph --decorate #以DAG方式顯示歷史日誌
</code></pre><h2 id="查詢差異">查詢差異</h2>
<pre tabindex="0"><code>git diff &lt;filename&gt; #顯示與上次提交時的差異
git diff &lt;revision&gt; &lt;filename&gt; #顯示某檔案與上次提交時的差異
</code></pre><h2 id="分支">分支</h2>
<pre tabindex="0"><code>git checkout &lt;revision&gt; #更新HEAD與當前分支
git branch #顯示分支
git branch &lt;name&gt; #建立分支
git checkout -b &lt;name&gt; #建立分支並切換至該分支 同 git branch &lt;name&gt; ; git checkout &lt;name&gt;
</code></pre><h2 id="合併">合併</h2>
<pre tabindex="0"><code>git merge &lt;revision&gt; #合併至當前分支
git mergetool #使用神奇工具處理合併衝突
git rebase #合併版本
git rebase -i HEAD~3 #修改歷史commit紀錄
</code></pre><h2 id="遠端">遠端</h2>
<pre tabindex="0"><code>git remote #列出遠端
git remote add &lt;name&gt; &lt;url&gt; #新增遠端
git push &lt;remote&gt; &lt;local branch&gt;:&lt;remote branch&gt; #將物件推送到遠端，並更新遠端參考
git branch --set-upstream-to=&lt;remote&gt;/&lt;remote branch&gt; #建立本地分支與遠端分支的關聯
git fetch #從遠端擷取物件/參考
git pull #更新本地端和遠端程式碼同步，同git fetch; git merge
git clone #從遠端下載數據庫
</code></pre><h2 id="回滾">回滾</h2>
<pre tabindex="0"><code>git commit --amend #編輯提交的內容或資訊
git reset HEAD &lt;file&gt; #取消暫存檔案
git checkout -- &lt;file&gt; #回滾更改
</code></pre><h2 id="進階">進階</h2>
<pre tabindex="0"><code>git clown --depth=1 #下載數據庫，但不下載歷史紀錄
git add -p #互動暫存
git blame #檢視最後修改某列的使用者
git stash #暫時移除工作目錄下的變更
git bisect #透過二分搜尋來搜尋歷史紀錄
.gitignore #指定忽視且不會再追蹤的檔案
</code></pre><h2 id="參考資料">參考資料</h2>
<p><a href="https://missing-semester-zh-hant.github.io/2020/version-control/">版本控制</a></p>
<p><a href="https://blog.techbridge.cc/2018/01/17/learning-programming-and-coding-with-python-git-and-github-tutorial/">Git 與 Github 版本控制基本指令與操作入門教學</a></p>
<p><a href="https://www.maxlist.xyz/2020/05/10/git-tutorial/">Git教學 初心者懶人包 Git 入門</a></p>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
