<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Note on Andrew&#39;s Blog</title>
    <link>https://andrewwu29.github.io/tags/note/</link>
    <description>Recent content in Note on Andrew&#39;s Blog</description>
    <image>
      <url>https://andrewwu29.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://andrewwu29.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 15 Feb 2022 17:22:00 +0000</lastBuildDate><atom:link href="https://andrewwu29.github.io/tags/note/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Markdown Basic Systax</title>
      <link>https://andrewwu29.github.io/2022/02/markdown-basic-systax/</link>
      <pubDate>Tue, 15 Feb 2022 17:22:00 +0000</pubDate>
      
      <guid>https://andrewwu29.github.io/2022/02/markdown-basic-systax/</guid>
      <description>What is Markdown? Markdown is a lightweight markup language for creating formatted text using a plain-text editor. John Gruber and Aaron Swartz created Markdown in 2004 as a markup language that is appealing to human readers in its source code form. Markdown is widely used in blogging, instant messaging, online forums, collaborative software, documentation pages, and readme files. from Wikipedia.
PHILOSOPHY
Markdown is intended to be as easy-to-read and easy-to-write as is feasible.</description>
      <content:encoded><![CDATA[<h2 id="what-is-markdown">What is Markdown?</h2>
<p>Markdown is a lightweight markup language for creating formatted text using a plain-text editor. John Gruber and Aaron Swartz created Markdown in 2004 as a markup language that is appealing to human readers in its source code form. Markdown is widely used in blogging, instant messaging, online forums, collaborative software, documentation pages, and readme files. from Wikipedia.</p>
<p><strong>PHILOSOPHY</strong></p>
<p>Markdown is intended to be as <strong>easy-to-read</strong> and <strong>easy-to-write</strong> as is feasible.</p>
<p>So when you are familiar with Markdown syntax, You can easily and quickly write notes, articles and documentation etc&hellip;</p>
<h2 id="basic-syntax">BASIC SYNTAX</h2>
<h3 id="headers">HEADERS</h3>
<pre><code># This is an H1
## This is an H2
### This is an H3
#### This is an H4
##### This is an H5
###### This is an H6
</code></pre>
<p><strong>Result</strong></p>
<h1 id="this-is-an-h1">This is an H1</h1>
<h2 id="this-is-an-h2">This is an H2</h2>
<h3 id="this-is-an-h3">This is an H3</h3>
<h4 id="this-is-an-h4">This is an H4</h4>
<h5 id="this-is-an-h5">This is an H5</h5>
<h6 id="this-is-an-h6">This is an H6</h6>
<h3 id="emphasis">EMPHASIS</h3>
<h4 id="bold">BOLD</h4>
<pre><code>**double asterisks**
__double underscores__
</code></pre>
<p><strong>Result</strong></p>
<p><strong>double asterisks</strong></p>
<p><strong>double underscores</strong></p>
<h4 id="italic">ITALIC</h4>
<pre><code>*single asterisks*
_single underscores_
</code></pre>
<p><strong>Result</strong></p>
<p><em>single asterisks</em></p>
<p><em>single underscores</em></p>
<h4 id="bold-italic">BOLD ITALIC</h4>
<pre><code>***Triple asterisks***
___Triple underscores___
</code></pre>
<p><strong>Result</strong></p>
<p><em><strong>Triple asterisks</strong></em></p>
<p><em><strong>Triple underscores</strong></em></p>
<h3 id="paragraphs">PARAGRAPHS</h3>
<p>A paragraph is composed of more than one connected line sentence, and more than one blank line will split into different paragraphs.</p>
<pre><code>This is the first paragraph.

This is the second paragraph.
</code></pre>
<h3 id="lists">LISTS</h3>
<p>Markdown supports ordered (numbered) and unordered (bulleted) lists.</p>
<p>Unordered lists use asterisks, pluses, and hyphens — interchangably — as list markers:</p>
<h4 id="unordered-lists">Unordered lists</h4>
<pre><code>* Red
* Orange
* Yellen

+ Red
+ Orange
+ Yellen

- Red
- Orange
- Yellen
</code></pre>
<p><strong>Result</strong></p>
<ul>
<li>Red</li>
<li>Orange</li>
<li>Yellen</li>
</ul>
<ul>
<li>Red</li>
<li>Orange</li>
<li>Yellen</li>
</ul>
<ul>
<li>Red</li>
<li>Orange</li>
<li>Yellen</li>
</ul>
<h4 id="ordered-lists-use-numbers-followed-by-periods">Ordered lists use numbers followed by periods:</h4>
<pre><code>1. Red
2. Orange
3. Yellen
</code></pre>
<p><strong>Result</strong></p>
<ol>
<li>Red</li>
<li>Orange</li>
<li>Yellen</li>
</ol>
<p>To use a multi-level list, use an indent or two half-spaces on the next level.</p>
<pre><code>- Red
- Orange
- Yellen
    - Sub Red
    - Sub Orange
        - three
</code></pre>
<p><strong>Result</strong></p>
<ul>
<li>Red</li>
<li>Orange</li>
<li>Yellen
<ul>
<li>Sub Red</li>
<li>Sub Orange
<ul>
<li>three</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="checkbox">CHECKBOX</h3>
<p>For to-do or confirmation items, use the * [] symbol at the beginning of the item, and an x in brackets means it is selected.</p>
<pre><code>* [x] This is a complete item
* [ ] This is an incomplete item
</code></pre>
<p><strong>Result</strong></p>
<ul>
<li><input checked="" disabled="" type="checkbox"> This is a complete item</li>
<li><input disabled="" type="checkbox"> This is an incomplete item</li>
</ul>
<h3 id="horizontal-rules">HORIZONTAL RULES</h3>
<p>You can produce a horizontal rule tag (&lt;hr /&gt;) by placing three or more hyphens, asterisks, or underscores on a line by themselves. If you wish, you may use spaces between the hyphens or asterisks. Each of the following lines will produce a horizontal rule:</p>
<pre><code>***
---
___

********
* * *
----------
- - -
</code></pre>
<p><strong>Result</strong></p>
<hr>
<hr>
<hr>
<hr>
<hr>
<hr>
<hr>
<h2 id="advance-syntax">ADVANCE SYNTAX</h2>
<h3 id="links">LINKS</h3>
<ol>
<li>A square bracket to place the link text</li>
<li>A parenthesis, place the link path or URL, enclosed in double quotes to add prompt text</li>
</ol>
<pre tabindex="0"><code>[GitHub](https://andrewwu29.github.io &quot;My GitHub&quot;)
</code></pre><p><strong>Result</strong></p>
<p><a href="https://andrewwu29.github.io" title="My GitHub">GitHub</a></p>
<h3 id="images">IMAGES</h3>
<p>Admittedly, it’s fairly difficult to devise a “natural” syntax for placing images into a plain text document format.</p>
<p>Markdown uses an image syntax that is intended to resemble the syntax for links, allowing for two styles: inline and reference.</p>
<p>Inline image syntax looks like this:</p>
<pre><code>![Img](/path/image.jpg)
![Img](/path/image.jpg &quot;title&quot;)
</code></pre>
<p><strong>Result</strong></p>
<p>inline
<img loading="lazy" src="https://i.imgur.com/C40N0ds.jpg" alt="York Minster Pic"  />

reference
<img loading="lazy" src="https://i.imgur.com/C40N0ds.jpg" alt="York Minster Pic"  title="York Minster"  />
</p>
<h3 id="automatic-links">AUTOMATIC LINKS</h3>
<p>Markdown supports a shortcut style for creating “automatic” links for URLs and email addresses: simply surround the URL or email address with angle brackets. What this means is that if you want to show the actual text of a URL or email address, and also have it be a clickable link, you can do this:</p>
<pre><code>&lt;https://andrewwu29.github.io&gt;
</code></pre>
<p><strong>Result</strong></p>
<p><a href="https://andrewwu29.github.io">https://andrewwu29.github.io</a></p>
<h3 id="table">TABLE</h3>
<p>Markdown table is a little bit complicated, and the layout is not too beautiful if you want to use it, and try not to make a large table.</p>
<ul>
<li>The outer pipe is not required.</li>
<li>Left-aligned writing is to add : on the left side, such as :&mdash;, similarly, right-aligned is to add a colon on the right &mdash;:</li>
<li>Center alignment is rendered by adding colons :&ndash;: on both sides.</li>
</ul>
<pre tabindex="0"><code>| Plugin | README |
| ------ | ------ |
| Dropbox | [plugins/dropbox/README.md][PlDb] |
| GitHub | [plugins/github/README.md][PlGh] |
| Google Drive | [plugins/googledrive/README.md][PlGd] |
| OneDrive | [plugins/onedrive/README.md][PlOd] |
| Medium | [plugins/medium/README.md][PlMe] |
| Google Analytics | [plugins/googleanalytics/README.md][PlGa] |
</code></pre><h3 id="code">CODE</h3>
<p>To indicate a span of code, wrap it with backtick quotes (`). Unlike a pre-formatted code block, a code span indicates code within a normal paragraph. For example:</p>
<pre><code>Use the `printf()` function.

``There is a literal backtick (`) here.``

A single backtick in a code span: `` ` ``

A backtick-delimited string in a code span: `` `foo` ``
</code></pre>
<p><strong>Result</strong></p>
<p>Use the <code>printf()</code> function.</p>
<p><code>There is a literal backtick (`) here.</code></p>
<p>A single backtick in a code span: <code>`</code></p>
<p>A backtick-delimited string in a code span: <code>`foo`</code></p>
<h4 id="code-blocks">CODE BLOCKS</h4>
<p>To produce a code block in Markdown, simply indent every line of the block by at least 4 spaces or 1 tab. For example, given this input:</p>
<pre><code>Here is an example of AppleScript:

    tell application &quot;Foo&quot;
        beep
    end tell
</code></pre>
<p><strong>Result</strong></p>
<p>Here is an example of AppleScript:</p>
<pre><code>tell application &quot;Foo&quot;
    beep
end tell
</code></pre>
<h3 id="backslash-escapes">BACKSLASH ESCAPES</h3>
<p>Markdown allows you to use backslash escapes to generate literal characters which would otherwise have special meaning in Markdown’s formatting syntax.</p>
<p>Markdown provides backslash escapes for the following characters:</p>
<table>
<thead>
<tr>
<th style="text-align:center">characters</th>
<th style="text-align:center">name</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">\</td>
<td style="text-align:center">backslash</td>
</tr>
<tr>
<td style="text-align:center">`</td>
<td style="text-align:center">backtick</td>
</tr>
<tr>
<td style="text-align:center">*</td>
<td style="text-align:center">asterisk</td>
</tr>
<tr>
<td style="text-align:center">_</td>
<td style="text-align:center">underscore</td>
</tr>
<tr>
<td style="text-align:center">{}</td>
<td style="text-align:center">curly braces</td>
</tr>
<tr>
<td style="text-align:center">[]</td>
<td style="text-align:center">square brackets</td>
</tr>
<tr>
<td style="text-align:center">()</td>
<td style="text-align:center">parentheses</td>
</tr>
<tr>
<td style="text-align:center">#</td>
<td style="text-align:center">hash mark</td>
</tr>
<tr>
<td style="text-align:center">+</td>
<td style="text-align:center">plus sign</td>
</tr>
<tr>
<td style="text-align:center">-</td>
<td style="text-align:center">minus sign (hyphen)</td>
</tr>
<tr>
<td style="text-align:center">.</td>
<td style="text-align:center">dot</td>
</tr>
<tr>
<td style="text-align:center">!</td>
<td style="text-align:center">exclamation mark</td>
</tr>
</tbody>
</table>
<h3 id="blockquotes">BLOCKQUOTES</h3>
<p>Markdown uses email-style &gt; characters for blockquoting.</p>
<blockquote>
<p>This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,
consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.
Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.</p>
<p>Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse
id sem consectetuer libero luctus adipiscing.</p>
</blockquote>
<p>Markdown allows you only put the &gt; before the first line of a hard-wrapped paragraph:</p>
<blockquote>
<p>This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,
consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.
Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.</p>
</blockquote>
<blockquote>
<p>Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse
id sem consectetuer libero luctus adipiscing.</p>
</blockquote>
<p>Blockquotes can be nested (i.e. a blockquote-in-a-blockquote) by adding additional levels of &gt;:</p>
<blockquote>
<p>This is the first level of quoting.</p>
<blockquote>
<p>This is nested blockquote.</p>
<blockquote>
<p>Back to the first level.</p>
</blockquote>
</blockquote>
</blockquote>
<p>Blockquotes can contain other Markdown elements, including headers, lists, and code blocks:</p>
<blockquote>
<h2 id="this-is-a-header">This is a header.</h2>
<ol>
<li>This is the first list item.</li>
<li>This is the second list item.</li>
</ol>
<p>Here&rsquo;s some example code:</p>
<pre><code>return shell_exec(&quot;echo $input | $markdown_script&quot;);
</code></pre>
</blockquote>
<h2 id="references">References</h2>
<p><a href="https://daringfireball.net/projects/markdown/syntax#img">Markdown: Syntax</a></p>
<p><a href="https://en.wikipedia.org/wiki/Markdown">Markdown</a></p>
<p><a href="https://fakestandard.github.io/post/markdown/markdown-1-heymarkdown/">Markdown筆記神器</a></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>How to add an RSS feed to your Hugo PaperMod theme?</title>
      <link>https://andrewwu29.github.io/2022/02/how-to-add-an-rss-feed-to-your-hugo-papermod-theme/</link>
      <pubDate>Sun, 06 Feb 2022 12:52:00 +0000</pubDate>
      
      <guid>https://andrewwu29.github.io/2022/02/how-to-add-an-rss-feed-to-your-hugo-papermod-theme/</guid>
      <description>Hugo is a popular static site generator, and PaperMod comes with a default RSS 2.0 template.
What is an RSS feed? RSS stands for Really Simple Syndication, and it’s is a simple, standardized content distribution method that can help you stay up-to-date with your favorite newscasts, blogs, websites, and social media channels.
Means supported an RSS feed function on your blog, can keep those who follow you up-to-date with your newest posts.</description>
      <content:encoded><![CDATA[<p>Hugo is a popular static site generator, and PaperMod comes with a default RSS 2.0 template.</p>
<h2 id="what-is-an-rss-feed">What is an RSS feed?</h2>
<p>RSS stands for Really Simple Syndication, and it’s is a simple, standardized content distribution method that can help you stay up-to-date with your favorite newscasts, blogs, websites, and social media channels.</p>
<p>Means supported an RSS feed function on your blog, can keep those who follow you up-to-date with your newest posts.</p>
<h2 id="add-an-rss-feed-on-your-hugo-papermod-theme-only-three-steps">Add an RSS feed on your Hugo PaperMod theme only three steps</h2>
<h3 id="step-1-ensure-rss-is-listed-as-an-output-format-inside-your-configyml-file">Step 1: Ensure <code>RSS</code> is listed as an <code>output</code> format inside your <code>config.yml</code> file</h3>
<h3 id="step-2-add-an-rss-feed-icon-on-your-site">Step 2: Add an RSS feed icon on your site</h3>
<h3 id="step-3-enable-full-content-support-generated-rss-xml-file">Step 3: Enable full content support generated RSS XML file</h3>
<p>So your <code>config.yml</code> file must include as below code:</p>
<pre tabindex="0"><code>params:
  ShowFullTextinRSS: true # Supports to show your whole contents in RSS, not just summary
  
  socialIcons:
    - name: rss # Shows an RSS feed icon on your site`
      url: &quot;index.xml&quot; # Your RSS feed url path

outputs:
    home:
        - HTML
        - RSS # Supports your site output including RSS format
        - JSON
</code></pre><p><strong>After finishing the above steps, now your Hugo PaperMod theme site can support an RSS feed.</strong></p>
<h2 id="references">References</h2>
<p><a href="https://link.medium.com/8MgjDu9vqnb">Setting up an RSS feed for a Hugo blog using the PaperMod Theme</a></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>How to integrate Disqus into your Hugo site?</title>
      <link>https://andrewwu29.github.io/2022/02/how-to-integrate-disqus-into-your-hugo-site/</link>
      <pubDate>Sat, 05 Feb 2022 16:44:00 +0000</pubDate>
      
      <guid>https://andrewwu29.github.io/2022/02/how-to-integrate-disqus-into-your-hugo-site/</guid>
      <description>What is Disqus? The internet&amp;rsquo;s favorite comment plug-in makes it easy for publishers to bring their content to life, fuel colorful discussions, efficiently moderate comments, and build engaged communities.
Step by step to integrate Disqus into your Hugo Site Step 1: Sign up for Disqus Step 2: Install Disqus Step 3: Chose &amp;ldquo;I want to install Disqus on my site.&amp;rdquo; Step 4: Fill in the Form details for your Hugo site Step 5: Copy the discussion templates, and create a disqus.</description>
      <content:encoded><![CDATA[<h2 id="what-is-disqus">What is Disqus?</h2>
<p>The internet&rsquo;s favorite comment plug-in makes it easy for publishers to bring their content to life, fuel colorful discussions, efficiently moderate comments, and build engaged communities.</p>
<h2 id="step-by-step-to-integrate-disqus-into-your-hugo-site">Step by step to integrate Disqus into your Hugo Site</h2>
<h3 id="step-1-sign-up-for-disqus">Step 1: Sign up for Disqus</h3>
<h3 id="step-2-install-disqus">Step 2: Install Disqus</h3>
<h3 id="step-3-chose-i-want-to-install-disqus-on-my-site">Step 3: Chose &ldquo;I want to install Disqus on my site.&rdquo;</h3>
<h3 id="step-4-fill-in-the-form-details-for-your-hugo-site">Step 4: Fill in the Form details for your Hugo site</h3>
<h3 id="step-5-copy-the-discussion-templates-and-create-a-disqushtml-file-under-your-hugo-site-folder-layoutspartials-then-paste-it-inside-the-file">Step 5: Copy the discussion templates, and create a disqus.html file under your Hugo site folder layouts/partials, then paste it inside the file</h3>
<p>The template will be like below:</p>
<pre tabindex="0"><code>&lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
&lt;script&gt;
    /**
    *  RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS.
    *  LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables    */
    /*
    var disqus_config = function () {
    this.page.url = PAGE_URL;  // Replace PAGE_URL with your page's canonical URL variable
    this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable
    };
    */
    (function() { // DON'T EDIT BELOW THIS LINE
    // Don't ever inject Disqus on localhost--it creates unwanted
    // discussions from 'localhost:1313' on your Disqus account...
    if (window.location.hostname == &quot;localhost&quot;)
        return;


    var d = document, s = d.createElement('script');
    s.src = 'https://your_disqus_name.disqus.com/embed.js';
    s.setAttribute('data-timestamp', +new Date());
    (d.head || d.body).appendChild(s);
    })();
&lt;/script&gt;
&lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;https://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
</code></pre><h3 id="step-6-create-a-commentshtml-file-under-your-hugo-site-folder-layoutspartials-and-copy-and-paste-the-below-code-inside-the-file">Step 6: Create a comments.html file under your Hugo site folder layouts/partials, and copy and paste the below code inside the file</h3>
<pre tabindex="0"><code>{{- /* Comments area start */ -}}
{{- /* partial &quot;disqus.html&quot; . */ -}}
{{ template &quot;_internal/disqus.html&quot; . }}
{{- /* to add comments read =&gt; https://gohugo.io/content-management/comments/ */ -}}
{{- /* Comments area end */ -}}
</code></pre><h3 id="step-7-add-disqus-shortname-disqusshortname--your-disqus-shortname-in-your-configyml-file">Step 7: Add Disqus shortname <code>disqusShortname = &quot;&lt;your-disqus-shortname&gt;&quot;</code> in your config.yml file</h3>
<h3 id="step-8-congratulations-now-it-is-all-done-you-can-push-it-to-your-github-repo">Step 8: Congratulations, now it is all done. You can push it to your GitHub repo</h3>
<h2 id="references">References</h2>
<p><a href="https://disqus.com">Disqus</a></p>
<p><a href="https://gohugo.io/templates/internal/">Internal Templates | Hugo</a></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>How to add Google Analytics to Hugo?</title>
      <link>https://andrewwu29.github.io/2022/02/how-to-add-google-analytics-to-hugo/</link>
      <pubDate>Fri, 04 Feb 2022 14:25:00 +0000</pubDate>
      
      <guid>https://andrewwu29.github.io/2022/02/how-to-add-google-analytics-to-hugo/</guid>
      <description>What is Google Analytics? Google Analytics is a web analytics service that provides statistics and basic analytical tools for search engine optimization (SEO) and marketing purposes. The service is part of the Google Marketing Platform and is available for free to anyone with a Google account.
How to add google analytics to Hugo site? Step 1: Create a google account Step 2: Go to google analytics site Step 3: Set up your site details in google analytics Step 4: Get your site google analytics ID Step 5: Set up your Hugo config.</description>
      <content:encoded><![CDATA[<h2 id="what-is-google-analytics">What is Google Analytics?</h2>
<p>Google Analytics is a web analytics service that provides statistics and basic analytical tools for search engine optimization (SEO) and marketing purposes. The service is part of the Google Marketing Platform and is available for free to anyone with a Google account.</p>
<h2 id="how-to-add-google-analytics-to-hugo-site">How to add google analytics to Hugo site?</h2>
<h3 id="step-1-create-a-google-accounthttpsaccountsgooglecomsignupv2webcreateaccountserviceanalyticscontinuehttps3a2f2fanalyticsgooglecom2fanalytics2fweb2fhlendshs9237899823a1643982945903281bizfalseflownameglifwebsigninflowentrysignupnogmtrue">Step 1: Create a <a href="https://accounts.google.com/signup/v2/webcreateaccount?service=analytics&amp;continue=https%3A%2F%2Fanalytics.google.com%2Fanalytics%2Fweb%2F&amp;hl=en&amp;dsh=S923789982%3A1643982945903281&amp;biz=false&amp;flowName=GlifWebSignIn&amp;flowEntry=SignUp&amp;nogm=true">google account</a></h3>
<h3 id="step-2-go-to-google-analyticshttpsanalyticsgooglecomanalyticswebprovisionprovision-site">Step 2: Go to <a href="https://analytics.google.com/analytics/web/provision/#/provision">google analytics</a> site</h3>
<h3 id="step-3--set-up-your-site-details-in-google-analytics">Step 3:  Set up your site details in google analytics</h3>
<h3 id="step-4-get-your-site-google-analytics-id">Step 4: Get your site google analytics ID</h3>
<h3 id="step-5-set-up-your-hugo-configyml">Step 5: Set up your Hugo config.yml</h3>
<p>Add <code>googleAnalytics: G-MEASUREMENT_ID</code> in your config.yml file.</p>
<h3 id="step-6-add-google-analytics-template-in-your-hugo-theme">Step 6: Add google analytics template in your Hugo theme</h3>
<p>Add <code>{{ template &quot;_internal/google_analytics.html&quot; . }}</code> in your theme’s head.html file <code>&lt;head&gt;</code> section</p>
<h2 id="references">References</h2>
<p><a href="https://searchbusinessanalytics.techtarget.com/definition/Google-Analytics">DEFINITION Google Analytics</a></p>
<p><a href="https://analytics.google.com/analytics/web/provision/#/provision">Google Analytics</a></p>
<p><a href="https://gohugo.io/templates/internal/">Internal Templates | Hugo</a></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Git Basic Commands</title>
      <link>https://andrewwu29.github.io/2022/01/git-basic-commands/</link>
      <pubDate>Wed, 12 Jan 2022 15:30:00 +0000</pubDate>
      
      <guid>https://andrewwu29.github.io/2022/01/git-basic-commands/</guid>
      <description>Checks your Git version git --version Settings your Git user name &amp;amp; email git config --global user.name &amp;quot;Andrew_Wu&amp;quot; git config --global user.email &amp;quot;user@gmail.com&amp;quot; Checks your configurations git config --list Get Help git help &amp;lt;command&amp;gt; #get help for a git command Creates a new git repo git init # create a new git repo, with data stored in the `.git` directory Shows current repo status git status #tells you what&#39;s going on Adds files to stage git add &amp;lt;filename&amp;gt; #adds seleted filename to stagin area git add .</description>
      <content:encoded><![CDATA[<h2 id="checks-your-git-version">Checks your Git version</h2>
<pre tabindex="0"><code>git --version
</code></pre><h2 id="settings-your-git-user-name--email">Settings your Git user name &amp; email</h2>
<pre tabindex="0"><code>git config --global user.name &quot;Andrew_Wu&quot;
git config --global user.email &quot;user@gmail.com&quot;
</code></pre><h3 id="checks-your-configurations">Checks your configurations</h3>
<pre tabindex="0"><code>git config --list
</code></pre><h2 id="get-help">Get Help</h2>
<pre tabindex="0"><code>git help &lt;command&gt; #get help for a git command
</code></pre><h2 id="creates-a-new-git-repo">Creates a new git repo</h2>
<pre tabindex="0"><code>git init # create a new git repo, with data stored in the `.git` directory
</code></pre><h2 id="shows-current-repo-status">Shows current repo status</h2>
<pre tabindex="0"><code>git status #tells you what's going on
</code></pre><h2 id="adds-files-to-stage">Adds files to stage</h2>
<pre tabindex="0"><code>git add &lt;filename&gt; #adds seleted filename to stagin area
git add . #add all files to staging area
</code></pre><h2 id="creates-a-new-commit">Creates a new commit</h2>
<pre tabindex="0"><code>git commit
git commit -m &quot;commit message&quot; #-m means Message
</code></pre><h2 id="shows-a-log">Shows a log</h2>
<pre tabindex="0"><code>git log #shows a flattened log of history
git log --all --graph --decorate #visualizes history as a DAG
</code></pre><h2 id="show-changes">Show changes</h2>
<pre tabindex="0"><code>git diff &lt;filename&gt; #show changes you made relative to the staging area
git diff &lt;revision&gt; &lt;filename&gt; #shows differences in a file between snapshots
</code></pre><h2 id="branch">Branch</h2>
<pre tabindex="0"><code>git checkout &lt;revision&gt; #updates HEAD and current branch
git branch #shows branches
git branch &lt;name&gt; #creates a branch
git branch -d &lt;name&gt; #deleted a branch
git checkout -b &lt;name&gt; #creates a branch and switches to it
same as git branch &lt;name&gt;; git checkout &lt;name&gt;
</code></pre><h2 id="merge">Merge</h2>
<pre tabindex="0"><code>git merge &lt;revision&gt; #merges into current branch
git mergetool #use a fancy tool to help resolve merge conflicts
git rebase #rebase set of patches onto a new base
git rebase -i HEAD~3 #modify history commit records
</code></pre><h2 id="remote">Remote</h2>
<pre tabindex="0"><code>git remote #list remotes
git remote add &lt;name&gt; &lt;url&gt; #add a remote
git push &lt;remote&gt; &lt;local branch&gt;:&lt;remote branch&gt; #send objects to reomote, and update reomte reference
git branch --set-upstream-to=&lt;remote&gt;/&lt;remote branch&gt; #set up correspondence between local and remote branch
git fetch #retrieve objects/references from a remote
git pull #Sync local and remote repos，same as git fetch; git merge
git clone #download repository form remote
</code></pre><h2 id="undo">Undo</h2>
<pre tabindex="0"><code>git commit --amend #edit a commit's contents/message
git reset HEAD &lt;file&gt; #unstage a file
git checkout -- &lt;file&gt; #discard changes
</code></pre><h2 id="advance">Advance</h2>
<pre tabindex="0"><code>git clown --depth=1 #shallow clone, without entire version history
git add -p #interactive staging
git blame #show who last edited which line
git stash #temporarily remove modifications to working directory
git bisect #binary search history (e.g. for regressions)
.gitignore #specify intentionally untracked files to ignore
</code></pre><h2 id="references">References</h2>
<p><a href="https://missing.csail.mit.edu/2020/version-control/">Version Control (Git)</a></p>
<p><a href="https://blog.techbridge.cc/2018/01/17/learning-programming-and-coding-with-python-git-and-github-tutorial/">Git 與 Github 版本控制基本指令與操作入門教學</a></p>
<p><a href="https://www.maxlist.xyz/2020/05/10/git-tutorial/">Git教學 初心者懶人包 Git 入門</a></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>How to use Hugo to create your Blog?</title>
      <link>https://andrewwu29.github.io/2022/01/how-to-use-hugo-to-create-your-blog/</link>
      <pubDate>Wed, 05 Jan 2022 17:13:00 +0000</pubDate>
      
      <guid>https://andrewwu29.github.io/2022/01/how-to-use-hugo-to-create-your-blog/</guid>
      <description>Step by step, teach you to create a static Blog, and deploy it to GitHub! Preface I recently had a thought to create my blog, and I used many blog services but ended up with nothing. And this time I made a decision, I want to write something, so after googling, I found &amp;ldquo;Hugo&amp;rdquo; this framework, you can use Markdown to create a static blog site. by the way, I don&amp;rsquo;t want to spend too much time creating a dynamic blog site to keep my thoughts and notes.</description>
      <content:encoded><![CDATA[<h1 id="step-by-step-teach-you-to-create-a-static-blog-and-deploy-it-to-github">Step by step, teach you to create a static Blog, and deploy it to GitHub!</h1>
<h2 id="preface">Preface</h2>
<p>I recently had a thought to create my blog, and I used many blog services but ended up with nothing.
And this time I made a decision, I want to write something, so after googling, I found &ldquo;Hugo&rdquo; this framework, you can use Markdown to create a static blog site.
by the way, I don&rsquo;t want to spend too much time creating a dynamic blog site to keep my thoughts and notes.
For me this solution, you can use the free GitHub service to be your site host or pay some money to be a private repository and you can show your site too.</p>
<p>If you want to create your blog and you have budget concerns, you might consider using Hugo to deploy your blog site.</p>
<h2 id="preparations">Preparations</h2>
<p>First of all, we have to install Git to handle our stuff and deploy it to Git public repository, and then we need software to help us write Markdown files. (e.g.: Visual Studio Code with Markdown extension)</p>
<h3 id="git-install--check">Git install &amp; check</h3>
<p>First, we can go to Git official site to Windows. <a href="https://git-scm.com/download/win">Download for Windows</a> follow your system bit to download a related version, that double clicks mouse left button, then press &ldquo;Next&rdquo; to &ldquo;Install&rdquo;, and you can finish the installation.
<img loading="lazy" src="https://i.imgur.com/xCCcS5k.png" alt="git dwonload for Windows"  />

<img loading="lazy" src="https://i.imgur.com/PTSyXhj.png" alt="git Setup"  />

After installation, we can use the Windows shortcuts &ldquo;Win key + S key&rdquo;, and type &ldquo;CMD&rdquo; to open Terminal.
<img loading="lazy" src="https://i.imgur.com/wjbN68m.png" alt="WinKey&#43;Shift&#43;CMD"  />

And then type command as below.</p>
<pre tabindex="0"><code> git version
</code></pre><p>you can get it as below.</p>
<pre tabindex="0"><code>git version 2.xx.x.windows.x
</code></pre><p><img loading="lazy" src="https://i.imgur.com/kxjfjJw.png" alt="git version check"  />
</p>
<p>When we can query our git version, means we finished our git installation.
And then we need to install Visual Studio Code, it&rsquo;s a free IDE, and we have to install an extension to handle Markdown.</p>
<h3 id="visual-studio-code--markdown-extension-install">Visual Studio Code &amp; Markdown extension install</h3>
<p>Same we go to <a href="https://code.visualstudio.com/">Visual Studio Code</a> site to download the install file and start to install, same &ldquo;Next&rdquo; to &ldquo;Install&rdquo;.
<img loading="lazy" src="https://i.imgur.com/2isdgIM.png" alt="Visual Studio Code download"  />

<img loading="lazy" src="https://i.imgur.com/qcjQ9ex.png" alt="Visual Studio Code Setup Next"  />

<img loading="lazy" src="https://i.imgur.com/aEadDI2.png" alt="Visual Studio Code Setup Install"  />

Installed and open it, you will see as below.
<img loading="lazy" src="https://i.imgur.com/Ir3fuCX.png" alt="ms_VisualStudioCode_Get_Started"  />

Then we go to &ldquo;View&rdquo; -&gt; &ldquo;Extensions&rdquo;(Also can use shortcuts Ctrl+Shift+X) to search &ldquo;Markdown&rdquo; Extensions, to find &ldquo;markdownlint&rdquo; and install it.
<img loading="lazy" src="https://i.imgur.com/cbg6cxa.png" alt="ms_VisualStudioCode_Get_Extensions"  />

<img loading="lazy" src="https://i.imgur.com/s3G9wGL.png" alt="ms_VisualStudioCode_Install_Markdown_Extension"  />
</p>
<p><strong>Now, we have already installed Git &amp; Visual Studio Code w/ markdownlint Extension.</strong></p>
<p>after we have to install Hugo and create our blog&rsquo;s first post.</p>
<h2 id="hugo-install-and-create-our-site">Hugo install and create our site</h2>
<p>Before installing Hugo we have to install <a href="https://chocolatey.org/install#individual">chocolatey</a> this tool, here we use &ldquo;Individual&rdquo; with Administrative&rsquo;s PowerShell and use the below command to install.</p>
<pre tabindex="0"><code>Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
</code></pre><p><strong>Installed chocolatey this tool, we can start to build our blog site.</strong></p>
<h3 id="step-1-install-hugo">Step 1: Install Hugo</h3>
<p>We follow <a href="https://gohugo.io/getting-started/quick-start/">quick started</a>to install Hugo. This time we use the normal version, so follow the manual to use the below command to install it.</p>
<pre tabindex="0"><code>choco install hugo -confirm
</code></pre><p>After installing Hugo, we have to check are we installed success, we can use the command below.</p>
<pre tabindex="0"><code>hugo version
</code></pre><h3 id="step-2-create-a-site">Step 2: Create a site</h3>
<p>After we need to create our site, we will use <code>yml</code> format, so we use the command below.</p>
<pre tabindex="0"><code>hugo new site &lt;folder name&gt; -f yml
</code></pre><p>When you see as below, means created successfully.
<img loading="lazy" src="https://i.imgur.com/U86gMSu.png" alt="Create a new site with yml format"  />
</p>
<h3 id="step-3-add-hugoe-theme">Step 3: Add Hugoe theme</h3>
<p>Finished Hugo site build, we have to add a theme for Hugo to make your site not look like too simple. We can go to <a href="https://themes.gohugo.io/">Hugo Themes</a> to pick up a theme for yourself.</p>
<p>I will use <a href="https://github.com/adityatelange/hugo-PaperMod">PaperMod</a> for this demo.</p>
<p>First of all, we have to switch our path to our folder name, and we can go in terminal to type &ldquo;CD <!-- raw HTML omitted -->&rdquo;, and our created folder name is &ldquo;its_demo_blog&rdquo;, so we can type command as below.</p>
<pre tabindex="0"><code>cd &lt;Your folder name&gt;
</code></pre><p>Then we have to in this folder to create a new Git repo to use the command below.</p>
<pre tabindex="0"><code>git init
</code></pre><p>The result will like below.
<img loading="lazy" src="https://i.imgur.com/BSdMrfg.png" alt="git init"  />
</p>
<p>After we need to add our theme to our site folder to create &ldquo;themes/PaperMod&rdquo; under the root, we can use the command below.</p>
<pre tabindex="0"><code>git submodule add https://github.com/adityatelange/hugo-PaperMod.git themes/PaperMod
</code></pre><p>After we will see as below.
<img loading="lazy" src="https://i.imgur.com/uS0G58D.png" alt="git add submodule PaperMod"  />
</p>
<p>Then we follow PaperMod&rsquo;s <a href="https://github.com/adityatelange/hugo-PaperMod/wiki/Installation">Official Manual</a>, to modify our <code>config.yml</code>.</p>
<pre tabindex="0"><code>baseURL: &quot;&lt;username.github.io&gt;&quot; #GitHub repo URL
title: its demo blog #site title
paginate: 5
# Default Language setting
defaultContentLanguage: zh-tw
# Theme setting
theme: PaperMod #this time we use PaperMod

enableRobotsTXT: true
buildDrafts: false
buildFuture: false
buildExpired: false

# GooleAnalytics servies
googleAnalytics: UA-123-45


# URL link setting
permalinks:
  posts: /:year/:month/:title/

minify:
  disableXML: true
  minifyOutput: true

params:
  env: production # to enable google analytics, opengraph, twitter-cards and schema.
  title: its demo blog
  description: &quot;its demo blog description&quot;
  keywords: [Blog, Portfolio, PaperMod]
  author: Me
  # author: [&quot;Me&quot;, &quot;You&quot;] # multiple authors
  images: [&quot;&lt;link or path of image for opengraph, twitter-cards&gt;&quot;]
  DateFormat: &quot;January 2, 2006&quot;
  defaultTheme: auto # dark, light
  disableThemeToggle: false

  ShowReadingTime: true
  ShowShareButtons: true
  ShowPostNavLinks: true
  ShowBreadCrumbs: true
  ShowCodeCopyButtons: false
  disableSpecial1stPost: false
  disableScrollToTop: false
  comments: false
  hidemeta: false
  hideSummary: false
  showtoc: false
  tocopen: false

  assets:
    # disableHLJS: true # to disable highlight.js
    # disableFingerprinting: true
    favicon: &quot;&lt;link / abs url&gt;&quot;
    favicon16x16: &quot;&lt;link / abs url&gt;&quot;
    favicon32x32: &quot;&lt;link / abs url&gt;&quot;
    apple_touch_icon: &quot;&lt;link / abs url&gt;&quot;
    safari_pinned_tab: &quot;&lt;link / abs url&gt;&quot;

  label:
    text: &quot;its demo blog&quot;
    #icon: /apple-touch-icon.png
    iconHeight: 35

  # profile-mode
  profileMode:
    enabled: false # needs to be explicitly set
    title: ExampleSite
    subtitle: &quot;This is subtitle&quot;
    imageUrl: &quot;&lt;img location&gt;&quot;
    imageWidth: 120
    imageHeight: 120
    imageTitle: my image
    buttons:
      - name: Posts
        url: posts
      - name: Tags
        url: tags

  # home-info mode this time we use Home-info mode, also it's default setting
  homeInfoParams:
    Title: &quot;Hi All \U0001F44B&quot;
    Content: Welcome to my blog.

  # You can put your social site links
  socialIcons:
    - name: twitter
      url: &quot;https://twitter.com/&quot;
    - name: stackoverflow
      url: &quot;https://stackoverflow.com&quot;
    - name: github
      url: &quot;https://github.com/&quot;

  analytics:
    google:
      SiteVerificationTag: &quot;XYZabc&quot;
    bing:
      SiteVerificationTag: &quot;XYZabc&quot;
    yandex:
      SiteVerificationTag: &quot;XYZabc&quot;

  cover:
    hidden: true # hide everywhere but not in structured data
    hiddenInList: true # hide on list pages and home
    hiddenInSingle: true # hide on single page

  # someone can mention you edit a post
  #editPost:
    #URL: &quot;https://github.com/&lt;path_to_repo&gt;/content&quot;
    #Text: &quot;Suggest Changes&quot; # edit text
    #appendFilePath: true # to append file path to Edit link

  # for search
  # https://fusejs.io/api/options.html
  fuseOpts:
    isCaseSensitive: false
    shouldSort: true
    location: 0
    distance: 1000
    threshold: 0.4
    minMatchCharLength: 0
    keys: [&quot;title&quot;, &quot;permalink&quot;, &quot;summary&quot;, &quot;content&quot;]
menu:
  main:
    - identifier: posts
      name: Posts
      url: /posts/
      weight: 1
    - identifier: categories
      name: Categories
      url: /categories/
      weight: 2
    - identifier: tags
      name: Tags
      url: /tags/
      weight: 3
    #- identifier: search
    #  name: Search
    #  url: search
    #  weight: 4
    #- identifier: about
    #  name: About
    #  url: about
    #  weight: 5
# Read: https://github.com/adityatelange/hugo-PaperMod/wiki/FAQs#using-hugos-syntax-highlighter-chroma
# pygmentsUseClasses: true
# markup:
#     highlight:
#         # anchorLineNos: true
#         codeFences: true
#         guessSyntax: true
#         lineNos: true
#         style: monokai
</code></pre><p>After we edited, we in our root folder to open a terminal and type <code>hugo server -D</code>, and then open our browser in search bar type <code>http://localhost:1313/</code>, then will see as the picture below.
<img loading="lazy" src="https://i.imgur.com/fzuEDoz.png" alt="its demo blog"  />
</p>
<h3 id="step-4-create-a-first-post">Step 4: Create a first post</h3>
<p>After that we need to create our first post, and we need to use a command as below.</p>
<p>Here we use Hugo to create a new Markdown file under in posts folder, so you can change your Markdown file name to fit as your article name, but this time we use &ldquo;hello_world.md&rdquo; for teaching.</p>
<pre tabindex="0"><code>hugo new posts/hello_world.md
</code></pre><p><img loading="lazy" src="https://i.imgur.com/JgnAVrI.png" alt="hugo new posts"  />
</p>
<p>Then we open our Visual Studio Code to edit our first post, when we open &ldquo;content/posts/hello_world.md&rdquo;. You will see your screen likes below.
<img loading="lazy" src="https://i.imgur.com/suv5MPR.png" alt="hello_world.md"  />
</p>
<p>We edited like below.</p>
<pre tabindex="0"><code>---
title: &quot;Hello_World!&quot;
date: 2022-01-06T14:00:09Z
draft: false
# weight: 1
# aliases: [&quot;/AirTag&quot;]
tags: [&quot;First post&quot;, &quot;Hello World&quot;]
author: &quot;Me&quot;
# author: [&quot;Me&quot;, &quot;You&quot;] # multiple authors
showToc: false
TocOpen: false
hidemeta: false
comments: true
#description: &quot;Hello World&quot;
#canonicalURL: &quot;https://canonical.url/to/page&quot;
disableHLJS: true # to disable highlightjs
disableShare: true
disableHLJS: false
hideSummary: false
searchHidden: false
ShowReadingTime: true
ShowBreadCrumbs: true
ShowPostNavLinks: true
#cover:
#    image: &quot;&lt;image path/url&gt;&quot; # image path/url
#    alt: &quot;&lt;alt text&gt;&quot; # alt text
#    caption: &quot;&lt;text&gt;&quot; # display caption under cover
#    relative: true # when using page bundles set this to true
#    hidden: true # only hide on current single page
#editPost:
#    URL: &quot;https://github.com/&lt;path_to_repo&gt;/content&quot;
#    Text: &quot;Suggest Changes&quot; # edit text
#    appendFilePath: false # to append file path to Edit link
---
# Hello World!!!

This is my first post!
</code></pre><h3 id="step-5-open-hugo-server">Step 5: Open Hugo server</h3>
<p>Hugo local preview function, we only need to in Windows PowerShell or Terminal and in the site folder root, in command line to type <code>hugo server -D</code>, and we can in local to preview our sites, the initial URL  is <code>http://localhost:1313/</code>.</p>
<p>Now our site will like below.
<img loading="lazy" src="https://i.imgur.com/lbjHm5O.png" alt="First Post"  />
</p>
<p><strong>For now we already created a demo blog and posted our first post, and then we need to deploy to GitHub Pages.</strong></p>
<h3 id="step-6-publish-hugo-blog-to-github">Step 6: Publish Hugo blog to GitHub</h3>
<p>First of all you have a GitHub account if you don&rsquo;t have yet, you can googling and sign up. We need to in GitHub to create a repository to store our site and named <code>&lt;username&gt;.github.io</code>, the username is your GitHub username.</p>
<p><strong>PS: Because it&rsquo;s a demo site, so the name is not following the rule.</strong>
<img loading="lazy" src="https://i.imgur.com/H22voyQ.png" alt="Create a new repository"  />
</p>
<p>And then we need to in our main repository to create a new branch <code>gh-pages</code>, this branch is for display our blog site, and later we will use GitHub Action function to do automated deploy to create files to <code>gh-pages</code>.</p>
<pre tabindex="0"><code># Add all of files
git add .
# Add commit message
git commit -m &quot;init its demo blog&quot;
# Add main branch
git branch -M main
# Add remote repo
git remote add origin https://github.com/&lt;username&gt;/&lt;username&gt;.github.io.git
# Upload site contents to remote repo
git push -u origin main

# Add gh-pages orphan branch
git checkout --orphan gh-pages
# Add a README.md
echo &quot;gh-pages&quot; &gt; &quot;README.md&quot;
# Add all of files
git add .
# Add commit message
git commit -m &quot;init gh-pages branch&quot;
# Upload site contents to remote repo
git push -u origin gh-pages
# Switch branch to main
git checkout main
</code></pre><p>Ran down all of above commands, your repository will have two branches <code>main</code> and <code>gh-pages</code>.</p>
<h3 id="step-7-setting-github-action-to-achieve-automated-deploy">Step 7: Setting GitHub Action to achieve automated deploy</h3>
<p>We need to in main branch has changed to trigger automation to deploy to gh-pages.</p>
<h4 id="preparations-1">Preparations</h4>
<p>First time to <a href="https://github.com/settings/tokens/new">This page</a> to claim ours Token for next steps, we selected options as the below picture.
<img loading="lazy" src="https://i.imgur.com/ELdM2bq.png" alt="New personal access token"  />
</p>
<p>Then to end of the page to press &ldquo;Generate Token&rdquo;, and copy the Token.
<img loading="lazy" src="https://i.imgur.com/sfTO3EW.png" alt="Generate Token"  />

<img loading="lazy" src="https://i.imgur.com/ZuYMGa1.png" alt="Personal access tokens"  />
</p>
<p>After, we need to store your Hugo blog&rsquo;s Token, the path: Repository &gt; Settings &gt; Secret &gt; New repository secret, like below picture, the Name you can named what you like, but the Value you have to set up as the Token we just got and press &ldquo;Add Secret&rdquo;.
<img loading="lazy" src="https://i.imgur.com/OVHpiZp.png" alt="New secret"  />
</p>
<p><strong>For now our preparation is done, then we have to set up our workflow.</strong></p>
<h4 id="workflow-settings">workflow settings</h4>
<p>We will follow this <a href="https://github.com/peaceiris/actions-hugo">Article</a>&rsquo;s workflow to set up GitHub Action.</p>
<p>First we go to GitHub Action page and click &ldquo;set up a workflow yourself -&gt;&rdquo;
<img loading="lazy" src="https://i.imgur.com/20ozHSn.png" alt="set up a workflow yourself"  />
</p>
<p>Copy and paste the below code and do some modifications.</p>
<pre tabindex="0"><code>name: Build GH-Pages #you can be named what you want

on:
  push:
    paths-ignore:
      - 'images/**'
      - 'LICENSE'
      - 'README.md'
    branches:
      - main
  workflow_dispatch:
    # manual run

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Git checkout
        uses: actions/checkout@v2
        with:
          ref: main

      - name: Get Theme
        run: git submodule update --init --recursive

      - name: Update theme to Latest commit
        run: git submodule update --remote --merge

      - name: Setup hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: 'latest'

      - name: Build
        run: hugo --buildDrafts --gc --verbose --minify

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.HUGO_DEPLOY_TOKEN }}
          publish_dir: ./public
          commit_message: ${{ github.event.head_commit.message }}
</code></pre><p>After modified, click the upper left angle button &ldquo;Star commit&rdquo; to store the workflow settings file, then you can go to your repository&rsquo;s &ldquo;Action&rdquo; page to see your process states. when the process state shows a green ticked, means deployed success.
<img loading="lazy" src="https://i.imgur.com/Cw58W5x.png" alt="workflow file"  />

<img loading="lazy" src="https://i.imgur.com/88styb1.png" alt="workflows"  />

<img loading="lazy" src="https://i.imgur.com/9dz2Awx.png" alt="workflows successed"  />
</p>
<h3 id="step-8-publish-blog-new-posts">Step 8: Publish blog new posts</h3>
<p>When you finish the previous steps, you need to go to the Repository &gt; Settings page to find &ldquo;Pages&rdquo; to change the &ldquo;Source&rdquo; branch to &ldquo;gh-pages&rdquo;, and you finish all of the steps.</p>
<p>After when you want to publish a new post, only do:</p>
<ol>
<li>Use Visual Studio Code to open your blog folder.</li>
<li>Create a new Markdown file at &ldquo;content/posts&rdquo; below and write your content.</li>
<li>Then use git to upload the entire project file to your corresponding repository.</li>
</ol>
<h2 id="finally">Finally</h2>
<p>It&rsquo;s my first public tutorial!
And I refer to lots of articles then finally I have this result, I hope this tutorial can help those who want to create their own blogs.</p>
<h2 id="references">References</h2>
<p><a href="https://andrewwu29.github.io/itsdemoblog/">This post demo Site</a></p>
<p><a href="https://github.com/AndrewWu29/itsdemoblog">This Git repo</a></p>
<p><a href="https://yurepo.tw/2021/03/%E5%A6%82%E4%BD%95%E5%B0%87hugo%E9%83%A8%E8%90%BD%E6%A0%BC%E9%83%A8%E7%BD%B2%E5%88%B0github%E4%B8%8A/">如何將Hugo部落格部署到Github上?</a></p>
<p><a href="https://lexcao.io/zh/posts/hello-world/">代码笔记</a></p>
<p><a href="https://code.visualstudio.com/">Visual Studio Code</a></p>
<p><a href="https://git-scm.com/">Git</a></p>
<p><a href="https://chocolatey.org/install#individual">Chocolatey</a></p>
<p><a href="https://adityatelange.github.io/hugo-PaperMod/">PaperMod Demo Site</a></p>
<p><a href="https://github.com/adityatelange/hugo-PaperMod">hugo-PaperMod</a></p>
<p><a href="https://ithelp.ithome.com.tw/articles/10235097">Hugo 貼身打造個人部落格</a></p>
<p><a href="https://frankccccc.github.io/blog/posts/move_blog/">Golden Hat</a></p>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
