[{"content":"Checks your Git version git --version Settings your Git user name \u0026amp; email git config --global user.name \u0026quot;Andrew_Wu\u0026quot; git config --global user.email \u0026quot;user@gmail.com\u0026quot; Checks your configurations git config --list Get Help git help \u0026lt;command\u0026gt; #get help for a git command Creates a new git repo git init # create a new git repo, with data stored in the `.git` directory Shows current repo status git status #tells you what's going on Adds files to stage git add \u0026lt;filename\u0026gt; #adds seleted filename to stagin area git add . #add all files to staging area Creates a new commit git commit git commit -m \u0026quot;commit message\u0026quot; #-m means Message Shows a log git log #shows a flattened log of history git log --all --graph --decorate #visualizes history as a DAG Show changes git diff \u0026lt;filename\u0026gt; #show changes you made relative to the staging area git diff \u0026lt;revision\u0026gt; \u0026lt;filename\u0026gt; #shows differences in a file between snapshots Branch git checkout \u0026lt;revision\u0026gt; #updates HEAD and current branch git branch #shows branches git branch \u0026lt;name\u0026gt; #creates a branch git branch -d \u0026lt;name\u0026gt; #deleted a branch git checkout -b \u0026lt;name\u0026gt; #creates a branch and switches to it same as git branch \u0026lt;name\u0026gt;; git checkout \u0026lt;name\u0026gt; Merge git merge \u0026lt;revision\u0026gt; #merges into current branch git mergetool #use a fancy tool to help resolve merge conflicts git rebase #rebase set of patches onto a new base git rebase -i HEAD~3 #modify history commit records Remote git remote #list remotes git remote add \u0026lt;name\u0026gt; \u0026lt;url\u0026gt; #add a remote git push \u0026lt;remote\u0026gt; \u0026lt;local branch\u0026gt;:\u0026lt;remote branch\u0026gt; #send objects to reomote, and update reomte reference git branch --set-upstream-to=\u0026lt;remote\u0026gt;/\u0026lt;remote branch\u0026gt; #set up correspondence between local and remote branch git fetch #retrieve objects/references from a remote git pull #Sync local and remote repos，same as git fetch; git merge git clone #download repository form remote Undo git commit --amend #edit a commit's contents/message git reset HEAD \u0026lt;file\u0026gt; #unstage a file git checkout -- \u0026lt;file\u0026gt; #discard changes Advance git clown --depth=1 #shallow clone, without entire version history git add -p #interactive staging git blame #show who last edited which line git stash #temporarily remove modifications to working directory git bisect #binary search history (e.g. for regressions) .gitignore #specify intentionally untracked files to ignore Resources Version Control (Git)\nGit 與 Github 版本控制基本指令與操作入門教學\nGit教學 初心者懶人包 Git 入門\n","permalink":"https://AndrewWu29.github.io/2022/01/git-basic-commands/","summary":"Checks your Git version git --version Settings your Git user name \u0026amp; email git config --global user.name \u0026quot;Andrew_Wu\u0026quot; git config --global user.email \u0026quot;user@gmail.com\u0026quot; Checks your configurations git config --list Get Help git help \u0026lt;command\u0026gt; #get help for a git command Creates a new git repo git init # create a new git repo, with data stored in the `.git` directory Shows current repo status git status #tells you what's going on Adds files to stage git add \u0026lt;filename\u0026gt; #adds seleted filename to stagin area git add .","title":"Git Basic Commands"},{"content":"Step by step, teach you to create a static Blog, and deploy it to GitHub! Preface I recently had a thought to create my blog, and I used many blog services but ended up with nothing. And this time I made a decision, I want to write something, so after googling, I found \u0026ldquo;Hugo\u0026rdquo; this framework, you can use Markdown to create a static blog site. by the way, I don\u0026rsquo;t want to spend too much time creating a dynamic blog site to keep my thoughts and notes. For me this solution, you can use the free GitHub service to be your site host or pay some money to be a private repository and you can show your site too.\nIf you want to create your blog and you have budget concerns, you might consider using Hugo to deploy your blog site.\nPreparations First of all, we have to install Git to handle our stuff and deploy it to Git public repository, and then we need software to help us write Markdown files. (e.g.: Visual Studio Code with Markdown extension)\nGit install \u0026amp; check First, we can go to Git official site to Windows. Download for Windows follow your system bit to download a related version, that double clicks mouse left button, then press \u0026ldquo;Next\u0026rdquo; to \u0026ldquo;Install\u0026rdquo;, and you can finish the installation. After installation, we can use the Windows shortcuts \u0026ldquo;Win key + S key\u0026rdquo;, and type \u0026ldquo;CMD\u0026rdquo; to open Terminal. And then type command as below.\n git version you can get it as below.\ngit version 2.xx.x.windows.x When we can query our git version, means we finished our git installation. And then we need to install Visual Studio Code, it\u0026rsquo;s a free IDE, and we have to install an extension to handle Markdown.\nVisual Studio Code \u0026amp; Markdown extension install Same we go to Visual Studio Code site to download the install file and start to install, same \u0026ldquo;Next\u0026rdquo; to \u0026ldquo;Install\u0026rdquo;. Installed and open it, you will see as below. Then we go to \u0026ldquo;View\u0026rdquo; -\u0026gt; \u0026ldquo;Extensions\u0026rdquo;(Also can use shortcuts Ctrl+Shift+X) to search \u0026ldquo;Markdown\u0026rdquo; Extensions, to find \u0026ldquo;markdownlint\u0026rdquo; and install it. Now, we have already installed Git \u0026amp; Visual Studio Code w/ markdownlint Extension.\nafter we have to install Hugo and create our blog\u0026rsquo;s first post.\nHugo install and create our site Before installing Hugo we have to install chocolatey this tool, here we use \u0026ldquo;Individual\u0026rdquo; with Administrative\u0026rsquo;s PowerShell and use the below command to install.\nSet-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1')) Installed chocolatey this tool, we can start to build our blog site.\nStep 1: Install Hugo We follow quick startedto install Hugo. This time we use the normal version, so follow the manual to use the below command to install it.\nchoco install hugo -confirm After installing Hugo, we have to check are we installed success, we can use the command below.\nhugo version Step 2: Create a site After we need to create our site, we will use yml format, so we use the command below.\nhugo new site \u0026lt;folder name\u0026gt; -f yml When you see as below, means created successfully. Step 3: Add Hugoe theme Finished Hugo site build, we have to add a theme for Hugo to make your site not look like too simple. We can go to Hugo Themes to pick up a theme for yourself.\nI will use PaperMod for this demo.\nFirst of all, we have to switch our path to our folder name, and we can go in terminal to type \u0026ldquo;CD \u0026rdquo;, and our created folder name is \u0026ldquo;its_demo_blog\u0026rdquo;, so we can type command as below.\ncd \u0026lt;Your folder name\u0026gt; Then we have to in this folder to create a new Git repo to use the command below.\ngit init The result will like below. After we need to add our theme to our site folder to create \u0026ldquo;themes/PaperMod\u0026rdquo; under the root, we can use the command below.\ngit submodule add https://github.com/adityatelange/hugo-PaperMod.git themes/PaperMod After we will see as below. Then we follow PaperMod\u0026rsquo;s Official Manual, to modify our config.yml.\nbaseURL: \u0026quot;\u0026lt;username.github.io\u0026gt;\u0026quot; #GitHub repo URL title: its demo blog #site title paginate: 5 # Default Language setting defaultContentLanguage: zh-tw # Theme setting theme: PaperMod #this time we use PaperMod enableRobotsTXT: true buildDrafts: false buildFuture: false buildExpired: false # GooleAnalytics servies googleAnalytics: UA-123-45 # URL link setting permalinks: posts: /:year/:month/:title/ minify: disableXML: true minifyOutput: true params: env: production # to enable google analytics, opengraph, twitter-cards and schema. title: its demo blog description: \u0026quot;its demo blog description\u0026quot; keywords: [Blog, Portfolio, PaperMod] author: Me # author: [\u0026quot;Me\u0026quot;, \u0026quot;You\u0026quot;] # multiple authors images: [\u0026quot;\u0026lt;link or path of image for opengraph, twitter-cards\u0026gt;\u0026quot;] DateFormat: \u0026quot;January 2, 2006\u0026quot; defaultTheme: auto # dark, light disableThemeToggle: false ShowReadingTime: true ShowShareButtons: true ShowPostNavLinks: true ShowBreadCrumbs: true ShowCodeCopyButtons: false disableSpecial1stPost: false disableScrollToTop: false comments: false hidemeta: false hideSummary: false showtoc: false tocopen: false assets: # disableHLJS: true # to disable highlight.js # disableFingerprinting: true favicon: \u0026quot;\u0026lt;link / abs url\u0026gt;\u0026quot; favicon16x16: \u0026quot;\u0026lt;link / abs url\u0026gt;\u0026quot; favicon32x32: \u0026quot;\u0026lt;link / abs url\u0026gt;\u0026quot; apple_touch_icon: \u0026quot;\u0026lt;link / abs url\u0026gt;\u0026quot; safari_pinned_tab: \u0026quot;\u0026lt;link / abs url\u0026gt;\u0026quot; label: text: \u0026quot;its demo blog\u0026quot; #icon: /apple-touch-icon.png iconHeight: 35 # profile-mode profileMode: enabled: false # needs to be explicitly set title: ExampleSite subtitle: \u0026quot;This is subtitle\u0026quot; imageUrl: \u0026quot;\u0026lt;img location\u0026gt;\u0026quot; imageWidth: 120 imageHeight: 120 imageTitle: my image buttons: - name: Posts url: posts - name: Tags url: tags # home-info mode this time we use Home-info mode, also it's default setting homeInfoParams: Title: \u0026quot;Hi All \\U0001F44B\u0026quot; Content: Welcome to my blog. # You can put your social site links socialIcons: - name: twitter url: \u0026quot;https://twitter.com/\u0026quot; - name: stackoverflow url: \u0026quot;https://stackoverflow.com\u0026quot; - name: github url: \u0026quot;https://github.com/\u0026quot; analytics: google: SiteVerificationTag: \u0026quot;XYZabc\u0026quot; bing: SiteVerificationTag: \u0026quot;XYZabc\u0026quot; yandex: SiteVerificationTag: \u0026quot;XYZabc\u0026quot; cover: hidden: true # hide everywhere but not in structured data hiddenInList: true # hide on list pages and home hiddenInSingle: true # hide on single page # someone can mention you edit a post #editPost: #URL: \u0026quot;https://github.com/\u0026lt;path_to_repo\u0026gt;/content\u0026quot; #Text: \u0026quot;Suggest Changes\u0026quot; # edit text #appendFilePath: true # to append file path to Edit link # for search # https://fusejs.io/api/options.html fuseOpts: isCaseSensitive: false shouldSort: true location: 0 distance: 1000 threshold: 0.4 minMatchCharLength: 0 keys: [\u0026quot;title\u0026quot;, \u0026quot;permalink\u0026quot;, \u0026quot;summary\u0026quot;, \u0026quot;content\u0026quot;] menu: main: - identifier: posts name: Posts url: /posts/ weight: 1 - identifier: categories name: Categories url: /categories/ weight: 2 - identifier: tags name: Tags url: /tags/ weight: 3 #- identifier: search # name: Search # url: search # weight: 4 #- identifier: about # name: About # url: about # weight: 5 # Read: https://github.com/adityatelange/hugo-PaperMod/wiki/FAQs#using-hugos-syntax-highlighter-chroma # pygmentsUseClasses: true # markup: # highlight: # # anchorLineNos: true # codeFences: true # guessSyntax: true # lineNos: true # style: monokai After we edited, we in our root folder to open a terminal and type hugo server -D, and then open our browser in search bar type http://localhost:1313/, then will see as the picture below. Step 4: Create a first post After that we need to create our first post, and we need to use a command as below.\nHere we use Hugo to create a new Markdown file under in posts folder, so you can change your Markdown file name to fit as your article name, but this time we use \u0026ldquo;hello_world.md\u0026rdquo; for teaching.\nhugo new posts/hello_world.md Then we open our Visual Studio Code to edit our first post, when we open \u0026ldquo;content/posts/hello_world.md\u0026rdquo;. You will see your screen likes below. We edited like below.\n--- title: \u0026quot;Hello_World!\u0026quot; date: 2022-01-06T14:00:09Z draft: false # weight: 1 # aliases: [\u0026quot;/AirTag\u0026quot;] tags: [\u0026quot;First post\u0026quot;, \u0026quot;Hello World\u0026quot;] author: \u0026quot;Me\u0026quot; # author: [\u0026quot;Me\u0026quot;, \u0026quot;You\u0026quot;] # multiple authors showToc: false TocOpen: false hidemeta: false comments: true #description: \u0026quot;Hello World\u0026quot; #canonicalURL: \u0026quot;https://canonical.url/to/page\u0026quot; disableHLJS: true # to disable highlightjs disableShare: true disableHLJS: false hideSummary: false searchHidden: false ShowReadingTime: true ShowBreadCrumbs: true ShowPostNavLinks: true #cover: # image: \u0026quot;\u0026lt;image path/url\u0026gt;\u0026quot; # image path/url # alt: \u0026quot;\u0026lt;alt text\u0026gt;\u0026quot; # alt text # caption: \u0026quot;\u0026lt;text\u0026gt;\u0026quot; # display caption under cover # relative: true # when using page bundles set this to true # hidden: true # only hide on current single page #editPost: # URL: \u0026quot;https://github.com/\u0026lt;path_to_repo\u0026gt;/content\u0026quot; # Text: \u0026quot;Suggest Changes\u0026quot; # edit text # appendFilePath: false # to append file path to Edit link --- # Hello World!!! This is my first post! Step 5: Open Hugo server Hugo local preview function, we only need to in Windows PowerShell or Terminal and in the site folder root, in command line to type hugo server -D, and we can in local to preview our sites, the initial URL is http://localhost:1313/.\nNow our site will like below. For now we already created a demo blog and posted our first post, and then we need to deploy to GitHub Pages.\nStep 6: Publish Hugo blog to GitHub First of all you have a GitHub account if you don\u0026rsquo;t have yet, you can googling and sign up. We need to in GitHub to create a repository to store our site and named \u0026lt;username\u0026gt;.github.io, the username is your GitHub username.\nPS: Because it\u0026rsquo;s a demo site, so the name is not following the rule. And then we need to in our main repository to create a new branch gh-pages, this branch is for display our blog site, and later we will use GitHub Action function to do automated deploy to create files to gh-pages.\n# Add all of files git add . # Add commit message git commit -m \u0026quot;init its demo blog\u0026quot; # Add main branch git branch -M main # Add remote repo git remote add origin https://github.com/\u0026lt;username\u0026gt;/\u0026lt;username\u0026gt;.github.io.git # Upload site contents to remote repo git push -u origin main # Add gh-pages orphan branch git checkout --orphan gh-pages # Add a README.md echo \u0026quot;gh-pages\u0026quot; \u0026gt; \u0026quot;README.md\u0026quot; # Add all of files git add . # Add commit message git commit -m \u0026quot;init gh-pages branch\u0026quot; # Upload site contents to remote repo git push -u origin gh-pages # Switch branch to main git checkout main Ran down all of above commands, your repository will have two branches main and gh-pages.\nStep 7: Setting GitHub Action to achieve automated deploy We need to in main branch has changed to trigger automation to deploy to gh-pages.\nPreparations First time to This page to claim ours Token for next steps, we selected options as the below picture. Then to end of the page to press \u0026ldquo;Generate Token\u0026rdquo;, and copy the Token. After, we need to store your Hugo blog\u0026rsquo;s Token, the path: Repository \u0026gt; Settings \u0026gt; Secret \u0026gt; New repository secret, like below picture, the Name you can named what you like, but the Value you have to set up as the Token we just got and press \u0026ldquo;Add Secret\u0026rdquo;. For now our preparation is done, then we have to set up our workflow.\nworkflow settings We will follow this Article\u0026rsquo;s workflow to set up GitHub Action.\nFirst we go to GitHub Action page and click \u0026ldquo;set up a workflow yourself -\u0026gt;\u0026rdquo; Copy and paste the below code and do some modifications.\nname: Build GH-Pages #you can be named what you want on: push: paths-ignore: - 'images/**' - 'LICENSE' - 'README.md' branches: - main workflow_dispatch: # manual run jobs: deploy: runs-on: ubuntu-latest steps: - name: Git checkout uses: actions/checkout@v2 with: ref: main - name: Get Theme run: git submodule update --init --recursive - name: Update theme to Latest commit run: git submodule update --remote --merge - name: Setup hugo uses: peaceiris/actions-hugo@v2 with: hugo-version: 'latest' - name: Build run: hugo --buildDrafts --gc --verbose --minify - name: Deploy uses: peaceiris/actions-gh-pages@v3 with: github_token: ${{ secrets.HUGO_DEPLOY_TOKEN }} publish_dir: ./public commit_message: ${{ github.event.head_commit.message }} After modified, click the upper left angle button \u0026ldquo;Star commit\u0026rdquo; to store the workflow settings file, then you can go to your repository\u0026rsquo;s \u0026ldquo;Action\u0026rdquo; page to see your process states. when the process state shows a green ticked, means deployed success. Step 8: Publish blog new posts When you finish the previous steps, you need to go to the Repository \u0026gt; Settings page to find \u0026ldquo;Pages\u0026rdquo; to change the \u0026ldquo;Source\u0026rdquo; branch to \u0026ldquo;gh-pages\u0026rdquo;, and you finish all of the steps.\nAfter when you want to publish a new post, only do:\n Use Visual Studio Code to open your blog folder. Create a new Markdown file at \u0026ldquo;content/posts\u0026rdquo; below and write your content. Then use git to upload the entire project file to your corresponding repository.  Finally It\u0026rsquo;s my first public tutorial! And I refer to lots of articles then finally I have this result, I hope this tutorial can help those who wants to create their own blogs.\nResources This post demo Site\nThis Git repo\n如何將Hugo部落格部署到Github上?\n代码笔记\nVisual Studio Code\nGit\nChocolatey\nPaperMod Demo Site\nhugo-PaperMod\nHugo 貼身打造個人部落格\nGolden Hat\n","permalink":"https://AndrewWu29.github.io/2022/01/hot-to-use-hugo-to-create-your-blog/","summary":"Step by step, teach you to create a static Blog, and deploy it to GitHub! Preface I recently had a thought to create my blog, and I used many blog services but ended up with nothing. And this time I made a decision, I want to write something, so after googling, I found \u0026ldquo;Hugo\u0026rdquo; this framework, you can use Markdown to create a static blog site. by the way, I don\u0026rsquo;t want to spend too much time creating a dynamic blog site to keep my thoughts and notes.","title":"Hot to use Hugo to create your Blog?"},{"content":"Hi Anyone! Welcome to my blog; I\u0026rsquo;m Andrew Wu.\nI will share my thoughts/tech/diary/unboxing/travel/food and anything I want to :).\nAbout Me I\u0026rsquo;m Taiwanese, live in Harpenden, United Kingdom, Now.\nIf you want to contact me.\nMandarin and English Support To practice my English, this blog will support English and Mandarin.\nClick the Language \u0026ldquo;En\u0026rdquo; or \u0026ldquo;Zh-Tw\u0026rdquo; to change the language setting.\nThis blog is mainly in English.\nOf course, there will be corresponding Mandarin content.\nStay tuned.\nThank You for Reading. ","permalink":"https://AndrewWu29.github.io/about/","summary":"Hi Anyone! Welcome to my blog; I\u0026rsquo;m Andrew Wu.\nI will share my thoughts/tech/diary/unboxing/travel/food and anything I want to :).\nAbout Me I\u0026rsquo;m Taiwanese, live in Harpenden, United Kingdom, Now.\nIf you want to contact me.\nMandarin and English Support To practice my English, this blog will support English and Mandarin.\nClick the Language \u0026ldquo;En\u0026rdquo; or \u0026ldquo;Zh-Tw\u0026rdquo; to change the language setting.\nThis blog is mainly in English.\nOf course, there will be corresponding Mandarin content.","title":"About"},{"content":"Hello 2022: Today is the first day of 2022.\nThis world has changed a lot since Covid-19 for almost two years, and yesterday I saw many countries and cities celebrate New Year\u0026rsquo;s Eve and had firework shows.\nAnd I hope it\u0026rsquo;s the final stage of Covid-19, and this world can go back to normal, and people cannot worry about this virus, meet their family or friends, and travel this world to explore their futures.\nThis year I hope I can find a QAE job in the UK and spend more time with my lover, go-to travel, go out for dinner and improve my English, finally I wish my family and my friends and I can be healthy and doing well this year and achieve their goals.\nHappy New Year 2022!!! ","permalink":"https://AndrewWu29.github.io/2022/01/hello-2022/","summary":"Hello 2022: Today is the first day of 2022.\nThis world has changed a lot since Covid-19 for almost two years, and yesterday I saw many countries and cities celebrate New Year\u0026rsquo;s Eve and had firework shows.\nAnd I hope it\u0026rsquo;s the final stage of Covid-19, and this world can go back to normal, and people cannot worry about this virus, meet their family or friends, and travel this world to explore their futures.","title":"Hello 2022!"}]